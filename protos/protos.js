// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_sql_admin_protos || ($protobuf.roots._google_cloud_sql_admin_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.sql = (function() {
    
                /**
                 * Namespace sql.
                 * @memberof google.cloud
                 * @namespace
                 */
                var sql = {};
    
                sql.v1beta4 = (function() {
    
                    /**
                     * Namespace v1beta4.
                     * @memberof google.cloud.sql
                     * @namespace
                     */
                    var v1beta4 = {};
    
                    v1beta4.SqlBackupRunsService = (function() {
    
                        /**
                         * Constructs a new SqlBackupRunsService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlBackupRunsService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlBackupRunsService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlBackupRunsService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlBackupRunsService;
    
                        /**
                         * Creates new SqlBackupRunsService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlBackupRunsService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlBackupRunsService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlBackupRunsService#delete_}.
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @typedef DeleteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsDeleteRequest} request SqlBackupRunsDeleteRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsService.DeleteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlBackupRunsService.prototype["delete"] = function delete_(request, callback) {
                            return this.rpcCall(delete_, $root.google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Delete" });
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsDeleteRequest} request SqlBackupRunsDeleteRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlBackupRunsService#get}.
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @typedef GetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.BackupRun} [response] BackupRun
                         */
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsGetRequest} request SqlBackupRunsGetRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsService.GetCallback} callback Node-style callback called with the error, if any, and BackupRun
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlBackupRunsService.prototype.get = function get(request, callback) {
                            return this.rpcCall(get, $root.google.cloud.sql.v1beta4.SqlBackupRunsGetRequest, $root.google.cloud.sql.v1beta4.BackupRun, request, callback);
                        }, "name", { value: "Get" });
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsGetRequest} request SqlBackupRunsGetRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.BackupRun>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlBackupRunsService#insert}.
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @typedef InsertCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsInsertRequest} request SqlBackupRunsInsertRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsService.InsertCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlBackupRunsService.prototype.insert = function insert(request, callback) {
                            return this.rpcCall(insert, $root.google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Insert" });
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsInsertRequest} request SqlBackupRunsInsertRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlBackupRunsService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.BackupRunsListResponse} [response] BackupRunsListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsListRequest} request SqlBackupRunsListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsService.ListCallback} callback Node-style callback called with the error, if any, and BackupRunsListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlBackupRunsService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlBackupRunsListRequest, $root.google.cloud.sql.v1beta4.BackupRunsListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsListRequest} request SqlBackupRunsListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.BackupRunsListResponse>} Promise
                         * @variation 2
                         */
    
                        return SqlBackupRunsService;
                    })();
    
                    v1beta4.SqlDatabasesService = (function() {
    
                        /**
                         * Constructs a new SqlDatabasesService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlDatabasesService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlDatabasesService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlDatabasesService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlDatabasesService;
    
                        /**
                         * Creates new SqlDatabasesService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlDatabasesService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlDatabasesService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlDatabasesService#delete_}.
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @typedef DeleteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesDeleteRequest} request SqlDatabasesDeleteRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesService.DeleteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlDatabasesService.prototype["delete"] = function delete_(request, callback) {
                            return this.rpcCall(delete_, $root.google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Delete" });
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesDeleteRequest} request SqlDatabasesDeleteRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlDatabasesService#get}.
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @typedef GetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Database} [response] Database
                         */
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesGetRequest} request SqlDatabasesGetRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesService.GetCallback} callback Node-style callback called with the error, if any, and Database
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlDatabasesService.prototype.get = function get(request, callback) {
                            return this.rpcCall(get, $root.google.cloud.sql.v1beta4.SqlDatabasesGetRequest, $root.google.cloud.sql.v1beta4.Database, request, callback);
                        }, "name", { value: "Get" });
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesGetRequest} request SqlDatabasesGetRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Database>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlDatabasesService#insert}.
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @typedef InsertCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesInsertRequest} request SqlDatabasesInsertRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesService.InsertCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlDatabasesService.prototype.insert = function insert(request, callback) {
                            return this.rpcCall(insert, $root.google.cloud.sql.v1beta4.SqlDatabasesInsertRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Insert" });
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesInsertRequest} request SqlDatabasesInsertRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlDatabasesService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.DatabasesListResponse} [response] DatabasesListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesListRequest} request SqlDatabasesListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesService.ListCallback} callback Node-style callback called with the error, if any, and DatabasesListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlDatabasesService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlDatabasesListRequest, $root.google.cloud.sql.v1beta4.DatabasesListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesListRequest} request SqlDatabasesListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.DatabasesListResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlDatabasesService#patch}.
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @typedef PatchCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Patch.
                         * @function patch
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest} request SqlDatabasesUpdateRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesService.PatchCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlDatabasesService.prototype.patch = function patch(request, callback) {
                            return this.rpcCall(patch, $root.google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Patch" });
    
                        /**
                         * Calls Patch.
                         * @function patch
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest} request SqlDatabasesUpdateRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlDatabasesService#update}.
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @typedef UpdateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Update.
                         * @function update
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest} request SqlDatabasesUpdateRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesService.UpdateCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlDatabasesService.prototype.update = function update(request, callback) {
                            return this.rpcCall(update, $root.google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Update" });
    
                        /**
                         * Calls Update.
                         * @function update
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest} request SqlDatabasesUpdateRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        return SqlDatabasesService;
                    })();
    
                    v1beta4.SqlFlagsService = (function() {
    
                        /**
                         * Constructs a new SqlFlagsService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlFlagsService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlFlagsService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlFlagsService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlFlagsService;
    
                        /**
                         * Creates new SqlFlagsService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlFlagsService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlFlagsService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlFlagsService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.FlagsListResponse} [response] FlagsListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlFlagsListRequest} request SqlFlagsListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlFlagsService.ListCallback} callback Node-style callback called with the error, if any, and FlagsListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlFlagsService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlFlagsListRequest, $root.google.cloud.sql.v1beta4.FlagsListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlFlagsListRequest} request SqlFlagsListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.FlagsListResponse>} Promise
                         * @variation 2
                         */
    
                        return SqlFlagsService;
                    })();
    
                    v1beta4.SqlInstancesService = (function() {
    
                        /**
                         * Constructs a new SqlInstancesService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlInstancesService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlInstancesService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlInstancesService;
    
                        /**
                         * Creates new SqlInstancesService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlInstancesService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlInstancesService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#addServerCa}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef AddServerCaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls AddServerCa.
                         * @function addServerCa
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesAddServerCaRequest} request SqlInstancesAddServerCaRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.AddServerCaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.addServerCa = function addServerCa(request, callback) {
                            return this.rpcCall(addServerCa, $root.google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "AddServerCa" });
    
                        /**
                         * Calls AddServerCa.
                         * @function addServerCa
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesAddServerCaRequest} request SqlInstancesAddServerCaRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#clone}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef CloneCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Clone.
                         * @function clone
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCloneRequest} request SqlInstancesCloneRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.CloneCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.clone = function clone(request, callback) {
                            return this.rpcCall(clone, $root.google.cloud.sql.v1beta4.SqlInstancesCloneRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Clone" });
    
                        /**
                         * Calls Clone.
                         * @function clone
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCloneRequest} request SqlInstancesCloneRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#delete_}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef DeleteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDeleteRequest} request SqlInstancesDeleteRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.DeleteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype["delete"] = function delete_(request, callback) {
                            return this.rpcCall(delete_, $root.google.cloud.sql.v1beta4.SqlInstancesDeleteRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Delete" });
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDeleteRequest} request SqlInstancesDeleteRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#demoteMaster}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef DemoteMasterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DemoteMaster.
                         * @function demoteMaster
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDemoteMasterRequest} request SqlInstancesDemoteMasterRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.DemoteMasterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.demoteMaster = function demoteMaster(request, callback) {
                            return this.rpcCall(demoteMaster, $root.google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "DemoteMaster" });
    
                        /**
                         * Calls DemoteMaster.
                         * @function demoteMaster
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDemoteMasterRequest} request SqlInstancesDemoteMasterRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#export_}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef ExportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Export.
                         * @function export
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesExportRequest} request SqlInstancesExportRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.ExportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype["export"] = function export_(request, callback) {
                            return this.rpcCall(export_, $root.google.cloud.sql.v1beta4.SqlInstancesExportRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Export" });
    
                        /**
                         * Calls Export.
                         * @function export
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesExportRequest} request SqlInstancesExportRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#failover}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef FailoverCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Failover.
                         * @function failover
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesFailoverRequest} request SqlInstancesFailoverRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.FailoverCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.failover = function failover(request, callback) {
                            return this.rpcCall(failover, $root.google.cloud.sql.v1beta4.SqlInstancesFailoverRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Failover" });
    
                        /**
                         * Calls Failover.
                         * @function failover
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesFailoverRequest} request SqlInstancesFailoverRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#get}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef GetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.DatabaseInstance} [response] DatabaseInstance
                         */
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesGetRequest} request SqlInstancesGetRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.GetCallback} callback Node-style callback called with the error, if any, and DatabaseInstance
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.get = function get(request, callback) {
                            return this.rpcCall(get, $root.google.cloud.sql.v1beta4.SqlInstancesGetRequest, $root.google.cloud.sql.v1beta4.DatabaseInstance, request, callback);
                        }, "name", { value: "Get" });
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesGetRequest} request SqlInstancesGetRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.DatabaseInstance>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#import_}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef ImportCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Import.
                         * @function import
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesImportRequest} request SqlInstancesImportRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.ImportCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype["import"] = function import_(request, callback) {
                            return this.rpcCall(import_, $root.google.cloud.sql.v1beta4.SqlInstancesImportRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Import" });
    
                        /**
                         * Calls Import.
                         * @function import
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesImportRequest} request SqlInstancesImportRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#insert}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef InsertCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesInsertRequest} request SqlInstancesInsertRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.InsertCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.insert = function insert(request, callback) {
                            return this.rpcCall(insert, $root.google.cloud.sql.v1beta4.SqlInstancesInsertRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Insert" });
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesInsertRequest} request SqlInstancesInsertRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.InstancesListResponse} [response] InstancesListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListRequest} request SqlInstancesListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.ListCallback} callback Node-style callback called with the error, if any, and InstancesListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlInstancesListRequest, $root.google.cloud.sql.v1beta4.InstancesListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListRequest} request SqlInstancesListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.InstancesListResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#listServerCas}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef ListServerCasCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.InstancesListServerCasResponse} [response] InstancesListServerCasResponse
                         */
    
                        /**
                         * Calls ListServerCas.
                         * @function listServerCas
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListServerCasRequest} request SqlInstancesListServerCasRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.ListServerCasCallback} callback Node-style callback called with the error, if any, and InstancesListServerCasResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.listServerCas = function listServerCas(request, callback) {
                            return this.rpcCall(listServerCas, $root.google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest, $root.google.cloud.sql.v1beta4.InstancesListServerCasResponse, request, callback);
                        }, "name", { value: "ListServerCas" });
    
                        /**
                         * Calls ListServerCas.
                         * @function listServerCas
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListServerCasRequest} request SqlInstancesListServerCasRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.InstancesListServerCasResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#patch}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef PatchCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Patch.
                         * @function patch
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPatchRequest} request SqlInstancesPatchRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.PatchCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.patch = function patch(request, callback) {
                            return this.rpcCall(patch, $root.google.cloud.sql.v1beta4.SqlInstancesPatchRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Patch" });
    
                        /**
                         * Calls Patch.
                         * @function patch
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPatchRequest} request SqlInstancesPatchRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#promoteReplica}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef PromoteReplicaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls PromoteReplica.
                         * @function promoteReplica
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPromoteReplicaRequest} request SqlInstancesPromoteReplicaRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.PromoteReplicaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.promoteReplica = function promoteReplica(request, callback) {
                            return this.rpcCall(promoteReplica, $root.google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "PromoteReplica" });
    
                        /**
                         * Calls PromoteReplica.
                         * @function promoteReplica
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPromoteReplicaRequest} request SqlInstancesPromoteReplicaRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#resetSslConfig}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef ResetSslConfigCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResetSslConfig.
                         * @function resetSslConfig
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesResetSslConfigRequest} request SqlInstancesResetSslConfigRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.ResetSslConfigCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.resetSslConfig = function resetSslConfig(request, callback) {
                            return this.rpcCall(resetSslConfig, $root.google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "ResetSslConfig" });
    
                        /**
                         * Calls ResetSslConfig.
                         * @function resetSslConfig
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesResetSslConfigRequest} request SqlInstancesResetSslConfigRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#restart}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef RestartCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Restart.
                         * @function restart
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestartRequest} request SqlInstancesRestartRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.RestartCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.restart = function restart(request, callback) {
                            return this.rpcCall(restart, $root.google.cloud.sql.v1beta4.SqlInstancesRestartRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Restart" });
    
                        /**
                         * Calls Restart.
                         * @function restart
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestartRequest} request SqlInstancesRestartRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#restoreBackup}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef RestoreBackupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RestoreBackup.
                         * @function restoreBackup
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestoreBackupRequest} request SqlInstancesRestoreBackupRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.RestoreBackupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.restoreBackup = function restoreBackup(request, callback) {
                            return this.rpcCall(restoreBackup, $root.google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "RestoreBackup" });
    
                        /**
                         * Calls RestoreBackup.
                         * @function restoreBackup
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestoreBackupRequest} request SqlInstancesRestoreBackupRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#rotateServerCa}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef RotateServerCaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RotateServerCa.
                         * @function rotateServerCa
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRotateServerCaRequest} request SqlInstancesRotateServerCaRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.RotateServerCaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.rotateServerCa = function rotateServerCa(request, callback) {
                            return this.rpcCall(rotateServerCa, $root.google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "RotateServerCa" });
    
                        /**
                         * Calls RotateServerCa.
                         * @function rotateServerCa
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRotateServerCaRequest} request SqlInstancesRotateServerCaRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#startReplica}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef StartReplicaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartReplica.
                         * @function startReplica
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartReplicaRequest} request SqlInstancesStartReplicaRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.StartReplicaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.startReplica = function startReplica(request, callback) {
                            return this.rpcCall(startReplica, $root.google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "StartReplica" });
    
                        /**
                         * Calls StartReplica.
                         * @function startReplica
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartReplicaRequest} request SqlInstancesStartReplicaRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#stopReplica}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef StopReplicaCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StopReplica.
                         * @function stopReplica
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStopReplicaRequest} request SqlInstancesStopReplicaRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.StopReplicaCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.stopReplica = function stopReplica(request, callback) {
                            return this.rpcCall(stopReplica, $root.google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "StopReplica" });
    
                        /**
                         * Calls StopReplica.
                         * @function stopReplica
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStopReplicaRequest} request SqlInstancesStopReplicaRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#truncateLog}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef TruncateLogCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls TruncateLog.
                         * @function truncateLog
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesTruncateLogRequest} request SqlInstancesTruncateLogRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.TruncateLogCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.truncateLog = function truncateLog(request, callback) {
                            return this.rpcCall(truncateLog, $root.google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "TruncateLog" });
    
                        /**
                         * Calls TruncateLog.
                         * @function truncateLog
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesTruncateLogRequest} request SqlInstancesTruncateLogRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#update}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef UpdateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Update.
                         * @function update
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesUpdateRequest} request SqlInstancesUpdateRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.UpdateCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.update = function update(request, callback) {
                            return this.rpcCall(update, $root.google.cloud.sql.v1beta4.SqlInstancesUpdateRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Update" });
    
                        /**
                         * Calls Update.
                         * @function update
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesUpdateRequest} request SqlInstancesUpdateRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#createEphemeral}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef CreateEphemeralCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.SslCert} [response] SslCert
                         */
    
                        /**
                         * Calls CreateEphemeral.
                         * @function createEphemeral
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCreateEphemeralCertRequest} request SqlInstancesCreateEphemeralCertRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.CreateEphemeralCallback} callback Node-style callback called with the error, if any, and SslCert
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.createEphemeral = function createEphemeral(request, callback) {
                            return this.rpcCall(createEphemeral, $root.google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest, $root.google.cloud.sql.v1beta4.SslCert, request, callback);
                        }, "name", { value: "CreateEphemeral" });
    
                        /**
                         * Calls CreateEphemeral.
                         * @function createEphemeral
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCreateEphemeralCertRequest} request SqlInstancesCreateEphemeralCertRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.SslCert>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#rescheduleMaintenance}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef RescheduleMaintenanceCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls RescheduleMaintenance.
                         * @function rescheduleMaintenance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequest} request SqlInstancesRescheduleMaintenanceRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.RescheduleMaintenanceCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.rescheduleMaintenance = function rescheduleMaintenance(request, callback) {
                            return this.rpcCall(rescheduleMaintenance, $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "RescheduleMaintenance" });
    
                        /**
                         * Calls RescheduleMaintenance.
                         * @function rescheduleMaintenance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequest} request SqlInstancesRescheduleMaintenanceRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#verifyExternalSyncSettings}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef VerifyExternalSyncSettingsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse} [response] SqlInstancesVerifyExternalSyncSettingsResponse
                         */
    
                        /**
                         * Calls VerifyExternalSyncSettings.
                         * @function verifyExternalSyncSettings
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsRequest} request SqlInstancesVerifyExternalSyncSettingsRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.VerifyExternalSyncSettingsCallback} callback Node-style callback called with the error, if any, and SqlInstancesVerifyExternalSyncSettingsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.verifyExternalSyncSettings = function verifyExternalSyncSettings(request, callback) {
                            return this.rpcCall(verifyExternalSyncSettings, $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest, $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse, request, callback);
                        }, "name", { value: "VerifyExternalSyncSettings" });
    
                        /**
                         * Calls VerifyExternalSyncSettings.
                         * @function verifyExternalSyncSettings
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsRequest} request SqlInstancesVerifyExternalSyncSettingsRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlInstancesService#startExternalSync}.
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @typedef StartExternalSyncCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartExternalSync.
                         * @function startExternalSync
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartExternalSyncRequest} request SqlInstancesStartExternalSyncRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlInstancesService.StartExternalSyncCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlInstancesService.prototype.startExternalSync = function startExternalSync(request, callback) {
                            return this.rpcCall(startExternalSync, $root.google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "StartExternalSync" });
    
                        /**
                         * Calls StartExternalSync.
                         * @function startExternalSync
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartExternalSyncRequest} request SqlInstancesStartExternalSyncRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        return SqlInstancesService;
                    })();
    
                    v1beta4.SqlOperationsService = (function() {
    
                        /**
                         * Constructs a new SqlOperationsService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlOperationsService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlOperationsService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlOperationsService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlOperationsService;
    
                        /**
                         * Creates new SqlOperationsService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlOperationsService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlOperationsService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlOperationsService#get}.
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsService
                         * @typedef GetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsGetRequest} request SqlOperationsGetRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlOperationsService.GetCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlOperationsService.prototype.get = function get(request, callback) {
                            return this.rpcCall(get, $root.google.cloud.sql.v1beta4.SqlOperationsGetRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Get" });
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsGetRequest} request SqlOperationsGetRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlOperationsService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.OperationsListResponse} [response] OperationsListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsListRequest} request SqlOperationsListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlOperationsService.ListCallback} callback Node-style callback called with the error, if any, and OperationsListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlOperationsService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlOperationsListRequest, $root.google.cloud.sql.v1beta4.OperationsListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsListRequest} request SqlOperationsListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.OperationsListResponse>} Promise
                         * @variation 2
                         */
    
                        return SqlOperationsService;
                    })();
    
                    v1beta4.SqlSslCertsService = (function() {
    
                        /**
                         * Constructs a new SqlSslCertsService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlSslCertsService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlSslCertsService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlSslCertsService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlSslCertsService;
    
                        /**
                         * Creates new SqlSslCertsService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlSslCertsService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlSslCertsService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlSslCertsService#delete_}.
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @typedef DeleteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsDeleteRequest} request SqlSslCertsDeleteRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsService.DeleteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlSslCertsService.prototype["delete"] = function delete_(request, callback) {
                            return this.rpcCall(delete_, $root.google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Delete" });
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsDeleteRequest} request SqlSslCertsDeleteRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlSslCertsService#get}.
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @typedef GetCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.SslCert} [response] SslCert
                         */
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsGetRequest} request SqlSslCertsGetRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsService.GetCallback} callback Node-style callback called with the error, if any, and SslCert
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlSslCertsService.prototype.get = function get(request, callback) {
                            return this.rpcCall(get, $root.google.cloud.sql.v1beta4.SqlSslCertsGetRequest, $root.google.cloud.sql.v1beta4.SslCert, request, callback);
                        }, "name", { value: "Get" });
    
                        /**
                         * Calls Get.
                         * @function get
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsGetRequest} request SqlSslCertsGetRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.SslCert>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlSslCertsService#insert}.
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @typedef InsertCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.SslCertsInsertResponse} [response] SslCertsInsertResponse
                         */
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsInsertRequest} request SqlSslCertsInsertRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsService.InsertCallback} callback Node-style callback called with the error, if any, and SslCertsInsertResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlSslCertsService.prototype.insert = function insert(request, callback) {
                            return this.rpcCall(insert, $root.google.cloud.sql.v1beta4.SqlSslCertsInsertRequest, $root.google.cloud.sql.v1beta4.SslCertsInsertResponse, request, callback);
                        }, "name", { value: "Insert" });
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsInsertRequest} request SqlSslCertsInsertRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.SslCertsInsertResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlSslCertsService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.SslCertsListResponse} [response] SslCertsListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsListRequest} request SqlSslCertsListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsService.ListCallback} callback Node-style callback called with the error, if any, and SslCertsListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlSslCertsService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlSslCertsListRequest, $root.google.cloud.sql.v1beta4.SslCertsListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsListRequest} request SqlSslCertsListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.SslCertsListResponse>} Promise
                         * @variation 2
                         */
    
                        return SqlSslCertsService;
                    })();
    
                    v1beta4.SqlBackupRunsDeleteRequest = (function() {
    
                        /**
                         * Properties of a SqlBackupRunsDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlBackupRunsDeleteRequest
                         * @property {number|Long|null} [id] SqlBackupRunsDeleteRequest id
                         * @property {string|null} [instance] SqlBackupRunsDeleteRequest instance
                         * @property {string|null} [project] SqlBackupRunsDeleteRequest project
                         */
    
                        /**
                         * Constructs a new SqlBackupRunsDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlBackupRunsDeleteRequest.
                         * @implements ISqlBackupRunsDeleteRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsDeleteRequest=} [properties] Properties to set
                         */
                        function SqlBackupRunsDeleteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlBackupRunsDeleteRequest id.
                         * @member {number|Long} id
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @instance
                         */
                        SqlBackupRunsDeleteRequest.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * SqlBackupRunsDeleteRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @instance
                         */
                        SqlBackupRunsDeleteRequest.prototype.instance = "";
    
                        /**
                         * SqlBackupRunsDeleteRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @instance
                         */
                        SqlBackupRunsDeleteRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlBackupRunsDeleteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsDeleteRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest} SqlBackupRunsDeleteRequest instance
                         */
                        SqlBackupRunsDeleteRequest.create = function create(properties) {
                            return new SqlBackupRunsDeleteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsDeleteRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsDeleteRequest} message SqlBackupRunsDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsDeleteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsDeleteRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsDeleteRequest} message SqlBackupRunsDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsDeleteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlBackupRunsDeleteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest} SqlBackupRunsDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsDeleteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.id = reader.int64();
                                    break;
                                case 2:
                                    message.instance = reader.string();
                                    break;
                                case 3:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlBackupRunsDeleteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest} SqlBackupRunsDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsDeleteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlBackupRunsDeleteRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlBackupRunsDeleteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                                    return "id: integer|Long expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlBackupRunsDeleteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest} SqlBackupRunsDeleteRequest
                         */
                        SqlBackupRunsDeleteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest();
                            if (object.id != null)
                                if ($util.Long)
                                    (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                                else if (typeof object.id === "string")
                                    message.id = parseInt(object.id, 10);
                                else if (typeof object.id === "number")
                                    message.id = object.id;
                                else if (typeof object.id === "object")
                                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlBackupRunsDeleteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest} message SqlBackupRunsDeleteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlBackupRunsDeleteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.id = options.longs === String ? "0" : 0;
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (typeof message.id === "number")
                                    object.id = options.longs === String ? String(message.id) : message.id;
                                else
                                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlBackupRunsDeleteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsDeleteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlBackupRunsDeleteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlBackupRunsDeleteRequest;
                    })();
    
                    v1beta4.SqlBackupRunsGetRequest = (function() {
    
                        /**
                         * Properties of a SqlBackupRunsGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlBackupRunsGetRequest
                         * @property {number|Long|null} [id] SqlBackupRunsGetRequest id
                         * @property {string|null} [instance] SqlBackupRunsGetRequest instance
                         * @property {string|null} [project] SqlBackupRunsGetRequest project
                         */
    
                        /**
                         * Constructs a new SqlBackupRunsGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlBackupRunsGetRequest.
                         * @implements ISqlBackupRunsGetRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsGetRequest=} [properties] Properties to set
                         */
                        function SqlBackupRunsGetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlBackupRunsGetRequest id.
                         * @member {number|Long} id
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @instance
                         */
                        SqlBackupRunsGetRequest.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * SqlBackupRunsGetRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @instance
                         */
                        SqlBackupRunsGetRequest.prototype.instance = "";
    
                        /**
                         * SqlBackupRunsGetRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @instance
                         */
                        SqlBackupRunsGetRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlBackupRunsGetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsGetRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsGetRequest} SqlBackupRunsGetRequest instance
                         */
                        SqlBackupRunsGetRequest.create = function create(properties) {
                            return new SqlBackupRunsGetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsGetRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsGetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsGetRequest} message SqlBackupRunsGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsGetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.id);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsGetRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsGetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsGetRequest} message SqlBackupRunsGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsGetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlBackupRunsGetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsGetRequest} SqlBackupRunsGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsGetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsGetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.id = reader.int64();
                                    break;
                                case 2:
                                    message.instance = reader.string();
                                    break;
                                case 3:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlBackupRunsGetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsGetRequest} SqlBackupRunsGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsGetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlBackupRunsGetRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlBackupRunsGetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                                    return "id: integer|Long expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlBackupRunsGetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsGetRequest} SqlBackupRunsGetRequest
                         */
                        SqlBackupRunsGetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlBackupRunsGetRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsGetRequest();
                            if (object.id != null)
                                if ($util.Long)
                                    (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                                else if (typeof object.id === "string")
                                    message.id = parseInt(object.id, 10);
                                else if (typeof object.id === "number")
                                    message.id = object.id;
                                else if (typeof object.id === "object")
                                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlBackupRunsGetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsGetRequest} message SqlBackupRunsGetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlBackupRunsGetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.id = options.longs === String ? "0" : 0;
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (typeof message.id === "number")
                                    object.id = options.longs === String ? String(message.id) : message.id;
                                else
                                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlBackupRunsGetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsGetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlBackupRunsGetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlBackupRunsGetRequest;
                    })();
    
                    v1beta4.SqlBackupRunsInsertRequest = (function() {
    
                        /**
                         * Properties of a SqlBackupRunsInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlBackupRunsInsertRequest
                         * @property {string|null} [instance] SqlBackupRunsInsertRequest instance
                         * @property {string|null} [project] SqlBackupRunsInsertRequest project
                         * @property {google.cloud.sql.v1beta4.IBackupRun|null} [body] SqlBackupRunsInsertRequest body
                         */
    
                        /**
                         * Constructs a new SqlBackupRunsInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlBackupRunsInsertRequest.
                         * @implements ISqlBackupRunsInsertRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsInsertRequest=} [properties] Properties to set
                         */
                        function SqlBackupRunsInsertRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlBackupRunsInsertRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @instance
                         */
                        SqlBackupRunsInsertRequest.prototype.instance = "";
    
                        /**
                         * SqlBackupRunsInsertRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @instance
                         */
                        SqlBackupRunsInsertRequest.prototype.project = "";
    
                        /**
                         * SqlBackupRunsInsertRequest body.
                         * @member {google.cloud.sql.v1beta4.IBackupRun|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @instance
                         */
                        SqlBackupRunsInsertRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlBackupRunsInsertRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsInsertRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest} SqlBackupRunsInsertRequest instance
                         */
                        SqlBackupRunsInsertRequest.create = function create(properties) {
                            return new SqlBackupRunsInsertRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsInsertRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsInsertRequest} message SqlBackupRunsInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsInsertRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.BackupRun.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsInsertRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsInsertRequest} message SqlBackupRunsInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsInsertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlBackupRunsInsertRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest} SqlBackupRunsInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsInsertRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.BackupRun.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlBackupRunsInsertRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest} SqlBackupRunsInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsInsertRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlBackupRunsInsertRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlBackupRunsInsertRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.BackupRun.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlBackupRunsInsertRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest} SqlBackupRunsInsertRequest
                         */
                        SqlBackupRunsInsertRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.BackupRun.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlBackupRunsInsertRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest} message SqlBackupRunsInsertRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlBackupRunsInsertRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.BackupRun.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlBackupRunsInsertRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsInsertRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlBackupRunsInsertRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlBackupRunsInsertRequest;
                    })();
    
                    v1beta4.SqlBackupRunsListRequest = (function() {
    
                        /**
                         * Properties of a SqlBackupRunsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlBackupRunsListRequest
                         * @property {string|null} [instance] SqlBackupRunsListRequest instance
                         * @property {number|null} [maxResults] SqlBackupRunsListRequest maxResults
                         * @property {string|null} [pageToken] SqlBackupRunsListRequest pageToken
                         * @property {string|null} [project] SqlBackupRunsListRequest project
                         */
    
                        /**
                         * Constructs a new SqlBackupRunsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlBackupRunsListRequest.
                         * @implements ISqlBackupRunsListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsListRequest=} [properties] Properties to set
                         */
                        function SqlBackupRunsListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlBackupRunsListRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @instance
                         */
                        SqlBackupRunsListRequest.prototype.instance = "";
    
                        /**
                         * SqlBackupRunsListRequest maxResults.
                         * @member {number} maxResults
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @instance
                         */
                        SqlBackupRunsListRequest.prototype.maxResults = 0;
    
                        /**
                         * SqlBackupRunsListRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @instance
                         */
                        SqlBackupRunsListRequest.prototype.pageToken = "";
    
                        /**
                         * SqlBackupRunsListRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @instance
                         */
                        SqlBackupRunsListRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlBackupRunsListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsListRequest} SqlBackupRunsListRequest instance
                         */
                        SqlBackupRunsListRequest.create = function create(properties) {
                            return new SqlBackupRunsListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsListRequest} message SqlBackupRunsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.maxResults != null && Object.hasOwnProperty.call(message, "maxResults"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxResults);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlBackupRunsListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlBackupRunsListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlBackupRunsListRequest} message SqlBackupRunsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlBackupRunsListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlBackupRunsListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsListRequest} SqlBackupRunsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.maxResults = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlBackupRunsListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsListRequest} SqlBackupRunsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlBackupRunsListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlBackupRunsListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlBackupRunsListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.maxResults != null && message.hasOwnProperty("maxResults"))
                                if (!$util.isInteger(message.maxResults))
                                    return "maxResults: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlBackupRunsListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlBackupRunsListRequest} SqlBackupRunsListRequest
                         */
                        SqlBackupRunsListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlBackupRunsListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlBackupRunsListRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.maxResults != null)
                                message.maxResults = object.maxResults | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlBackupRunsListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlBackupRunsListRequest} message SqlBackupRunsListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlBackupRunsListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.maxResults = 0;
                                object.pageToken = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.maxResults != null && message.hasOwnProperty("maxResults"))
                                object.maxResults = message.maxResults;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlBackupRunsListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlBackupRunsListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlBackupRunsListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlBackupRunsListRequest;
                    })();
    
                    v1beta4.SqlDatabasesDeleteRequest = (function() {
    
                        /**
                         * Properties of a SqlDatabasesDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlDatabasesDeleteRequest
                         * @property {string|null} [database] SqlDatabasesDeleteRequest database
                         * @property {string|null} [instance] SqlDatabasesDeleteRequest instance
                         * @property {string|null} [project] SqlDatabasesDeleteRequest project
                         */
    
                        /**
                         * Constructs a new SqlDatabasesDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlDatabasesDeleteRequest.
                         * @implements ISqlDatabasesDeleteRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesDeleteRequest=} [properties] Properties to set
                         */
                        function SqlDatabasesDeleteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlDatabasesDeleteRequest database.
                         * @member {string} database
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @instance
                         */
                        SqlDatabasesDeleteRequest.prototype.database = "";
    
                        /**
                         * SqlDatabasesDeleteRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @instance
                         */
                        SqlDatabasesDeleteRequest.prototype.instance = "";
    
                        /**
                         * SqlDatabasesDeleteRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @instance
                         */
                        SqlDatabasesDeleteRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlDatabasesDeleteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesDeleteRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest} SqlDatabasesDeleteRequest instance
                         */
                        SqlDatabasesDeleteRequest.create = function create(properties) {
                            return new SqlDatabasesDeleteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesDeleteRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesDeleteRequest} message SqlDatabasesDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesDeleteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.database != null && Object.hasOwnProperty.call(message, "database"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.database);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesDeleteRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesDeleteRequest} message SqlDatabasesDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesDeleteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlDatabasesDeleteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest} SqlDatabasesDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesDeleteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.database = reader.string();
                                    break;
                                case 2:
                                    message.instance = reader.string();
                                    break;
                                case 3:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlDatabasesDeleteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest} SqlDatabasesDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesDeleteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlDatabasesDeleteRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlDatabasesDeleteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.database != null && message.hasOwnProperty("database"))
                                if (!$util.isString(message.database))
                                    return "database: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlDatabasesDeleteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest} SqlDatabasesDeleteRequest
                         */
                        SqlDatabasesDeleteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest();
                            if (object.database != null)
                                message.database = String(object.database);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlDatabasesDeleteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest} message SqlDatabasesDeleteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlDatabasesDeleteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.database = "";
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.database != null && message.hasOwnProperty("database"))
                                object.database = message.database;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlDatabasesDeleteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesDeleteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlDatabasesDeleteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlDatabasesDeleteRequest;
                    })();
    
                    v1beta4.SqlDatabasesGetRequest = (function() {
    
                        /**
                         * Properties of a SqlDatabasesGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlDatabasesGetRequest
                         * @property {string|null} [database] SqlDatabasesGetRequest database
                         * @property {string|null} [instance] SqlDatabasesGetRequest instance
                         * @property {string|null} [project] SqlDatabasesGetRequest project
                         */
    
                        /**
                         * Constructs a new SqlDatabasesGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlDatabasesGetRequest.
                         * @implements ISqlDatabasesGetRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesGetRequest=} [properties] Properties to set
                         */
                        function SqlDatabasesGetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlDatabasesGetRequest database.
                         * @member {string} database
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @instance
                         */
                        SqlDatabasesGetRequest.prototype.database = "";
    
                        /**
                         * SqlDatabasesGetRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @instance
                         */
                        SqlDatabasesGetRequest.prototype.instance = "";
    
                        /**
                         * SqlDatabasesGetRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @instance
                         */
                        SqlDatabasesGetRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlDatabasesGetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesGetRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesGetRequest} SqlDatabasesGetRequest instance
                         */
                        SqlDatabasesGetRequest.create = function create(properties) {
                            return new SqlDatabasesGetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesGetRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesGetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesGetRequest} message SqlDatabasesGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesGetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.database != null && Object.hasOwnProperty.call(message, "database"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.database);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesGetRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesGetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesGetRequest} message SqlDatabasesGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesGetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlDatabasesGetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesGetRequest} SqlDatabasesGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesGetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlDatabasesGetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.database = reader.string();
                                    break;
                                case 2:
                                    message.instance = reader.string();
                                    break;
                                case 3:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlDatabasesGetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesGetRequest} SqlDatabasesGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesGetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlDatabasesGetRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlDatabasesGetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.database != null && message.hasOwnProperty("database"))
                                if (!$util.isString(message.database))
                                    return "database: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlDatabasesGetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesGetRequest} SqlDatabasesGetRequest
                         */
                        SqlDatabasesGetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlDatabasesGetRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlDatabasesGetRequest();
                            if (object.database != null)
                                message.database = String(object.database);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlDatabasesGetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesGetRequest} message SqlDatabasesGetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlDatabasesGetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.database = "";
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.database != null && message.hasOwnProperty("database"))
                                object.database = message.database;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlDatabasesGetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesGetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlDatabasesGetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlDatabasesGetRequest;
                    })();
    
                    v1beta4.SqlDatabasesInsertRequest = (function() {
    
                        /**
                         * Properties of a SqlDatabasesInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlDatabasesInsertRequest
                         * @property {string|null} [instance] SqlDatabasesInsertRequest instance
                         * @property {string|null} [project] SqlDatabasesInsertRequest project
                         * @property {google.cloud.sql.v1beta4.IDatabase|null} [body] SqlDatabasesInsertRequest body
                         */
    
                        /**
                         * Constructs a new SqlDatabasesInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlDatabasesInsertRequest.
                         * @implements ISqlDatabasesInsertRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesInsertRequest=} [properties] Properties to set
                         */
                        function SqlDatabasesInsertRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlDatabasesInsertRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @instance
                         */
                        SqlDatabasesInsertRequest.prototype.instance = "";
    
                        /**
                         * SqlDatabasesInsertRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @instance
                         */
                        SqlDatabasesInsertRequest.prototype.project = "";
    
                        /**
                         * SqlDatabasesInsertRequest body.
                         * @member {google.cloud.sql.v1beta4.IDatabase|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @instance
                         */
                        SqlDatabasesInsertRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlDatabasesInsertRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesInsertRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesInsertRequest} SqlDatabasesInsertRequest instance
                         */
                        SqlDatabasesInsertRequest.create = function create(properties) {
                            return new SqlDatabasesInsertRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesInsertRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesInsertRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesInsertRequest} message SqlDatabasesInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesInsertRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.Database.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesInsertRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesInsertRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesInsertRequest} message SqlDatabasesInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesInsertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlDatabasesInsertRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesInsertRequest} SqlDatabasesInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesInsertRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlDatabasesInsertRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.Database.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlDatabasesInsertRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesInsertRequest} SqlDatabasesInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesInsertRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlDatabasesInsertRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlDatabasesInsertRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.Database.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlDatabasesInsertRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesInsertRequest} SqlDatabasesInsertRequest
                         */
                        SqlDatabasesInsertRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlDatabasesInsertRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlDatabasesInsertRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlDatabasesInsertRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.Database.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlDatabasesInsertRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesInsertRequest} message SqlDatabasesInsertRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlDatabasesInsertRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.Database.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlDatabasesInsertRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesInsertRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlDatabasesInsertRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlDatabasesInsertRequest;
                    })();
    
                    v1beta4.SqlDatabasesListRequest = (function() {
    
                        /**
                         * Properties of a SqlDatabasesListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlDatabasesListRequest
                         * @property {string|null} [instance] SqlDatabasesListRequest instance
                         * @property {string|null} [project] SqlDatabasesListRequest project
                         */
    
                        /**
                         * Constructs a new SqlDatabasesListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlDatabasesListRequest.
                         * @implements ISqlDatabasesListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesListRequest=} [properties] Properties to set
                         */
                        function SqlDatabasesListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlDatabasesListRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @instance
                         */
                        SqlDatabasesListRequest.prototype.instance = "";
    
                        /**
                         * SqlDatabasesListRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @instance
                         */
                        SqlDatabasesListRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlDatabasesListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesListRequest} SqlDatabasesListRequest instance
                         */
                        SqlDatabasesListRequest.create = function create(properties) {
                            return new SqlDatabasesListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesListRequest} message SqlDatabasesListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesListRequest} message SqlDatabasesListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlDatabasesListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesListRequest} SqlDatabasesListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlDatabasesListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlDatabasesListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesListRequest} SqlDatabasesListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlDatabasesListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlDatabasesListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlDatabasesListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesListRequest} SqlDatabasesListRequest
                         */
                        SqlDatabasesListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlDatabasesListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlDatabasesListRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlDatabasesListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesListRequest} message SqlDatabasesListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlDatabasesListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlDatabasesListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlDatabasesListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlDatabasesListRequest;
                    })();
    
                    v1beta4.SqlDatabasesUpdateRequest = (function() {
    
                        /**
                         * Properties of a SqlDatabasesUpdateRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlDatabasesUpdateRequest
                         * @property {string|null} [database] SqlDatabasesUpdateRequest database
                         * @property {string|null} [instance] SqlDatabasesUpdateRequest instance
                         * @property {string|null} [project] SqlDatabasesUpdateRequest project
                         * @property {google.cloud.sql.v1beta4.IDatabase|null} [body] SqlDatabasesUpdateRequest body
                         */
    
                        /**
                         * Constructs a new SqlDatabasesUpdateRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlDatabasesUpdateRequest.
                         * @implements ISqlDatabasesUpdateRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest=} [properties] Properties to set
                         */
                        function SqlDatabasesUpdateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlDatabasesUpdateRequest database.
                         * @member {string} database
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @instance
                         */
                        SqlDatabasesUpdateRequest.prototype.database = "";
    
                        /**
                         * SqlDatabasesUpdateRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @instance
                         */
                        SqlDatabasesUpdateRequest.prototype.instance = "";
    
                        /**
                         * SqlDatabasesUpdateRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @instance
                         */
                        SqlDatabasesUpdateRequest.prototype.project = "";
    
                        /**
                         * SqlDatabasesUpdateRequest body.
                         * @member {google.cloud.sql.v1beta4.IDatabase|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @instance
                         */
                        SqlDatabasesUpdateRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlDatabasesUpdateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest} SqlDatabasesUpdateRequest instance
                         */
                        SqlDatabasesUpdateRequest.create = function create(properties) {
                            return new SqlDatabasesUpdateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesUpdateRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest} message SqlDatabasesUpdateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesUpdateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.database != null && Object.hasOwnProperty.call(message, "database"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.database);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.Database.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlDatabasesUpdateRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlDatabasesUpdateRequest} message SqlDatabasesUpdateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlDatabasesUpdateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlDatabasesUpdateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest} SqlDatabasesUpdateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesUpdateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.database = reader.string();
                                    break;
                                case 2:
                                    message.instance = reader.string();
                                    break;
                                case 3:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.Database.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlDatabasesUpdateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest} SqlDatabasesUpdateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlDatabasesUpdateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlDatabasesUpdateRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlDatabasesUpdateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.database != null && message.hasOwnProperty("database"))
                                if (!$util.isString(message.database))
                                    return "database: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.Database.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlDatabasesUpdateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest} SqlDatabasesUpdateRequest
                         */
                        SqlDatabasesUpdateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest();
                            if (object.database != null)
                                message.database = String(object.database);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.Database.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlDatabasesUpdateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest} message SqlDatabasesUpdateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlDatabasesUpdateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.database = "";
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.database != null && message.hasOwnProperty("database"))
                                object.database = message.database;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.Database.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlDatabasesUpdateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlDatabasesUpdateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlDatabasesUpdateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlDatabasesUpdateRequest;
                    })();
    
                    v1beta4.SqlFlagsListRequest = (function() {
    
                        /**
                         * Properties of a SqlFlagsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlFlagsListRequest
                         * @property {string|null} [databaseVersion] SqlFlagsListRequest databaseVersion
                         */
    
                        /**
                         * Constructs a new SqlFlagsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlFlagsListRequest.
                         * @implements ISqlFlagsListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlFlagsListRequest=} [properties] Properties to set
                         */
                        function SqlFlagsListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlFlagsListRequest databaseVersion.
                         * @member {string} databaseVersion
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @instance
                         */
                        SqlFlagsListRequest.prototype.databaseVersion = "";
    
                        /**
                         * Creates a new SqlFlagsListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlFlagsListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlFlagsListRequest} SqlFlagsListRequest instance
                         */
                        SqlFlagsListRequest.create = function create(properties) {
                            return new SqlFlagsListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlFlagsListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlFlagsListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlFlagsListRequest} message SqlFlagsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlFlagsListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.databaseVersion != null && Object.hasOwnProperty.call(message, "databaseVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.databaseVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlFlagsListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlFlagsListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlFlagsListRequest} message SqlFlagsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlFlagsListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlFlagsListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlFlagsListRequest} SqlFlagsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlFlagsListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlFlagsListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.databaseVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlFlagsListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlFlagsListRequest} SqlFlagsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlFlagsListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlFlagsListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlFlagsListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.databaseVersion != null && message.hasOwnProperty("databaseVersion"))
                                if (!$util.isString(message.databaseVersion))
                                    return "databaseVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlFlagsListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlFlagsListRequest} SqlFlagsListRequest
                         */
                        SqlFlagsListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlFlagsListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlFlagsListRequest();
                            if (object.databaseVersion != null)
                                message.databaseVersion = String(object.databaseVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlFlagsListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlFlagsListRequest} message SqlFlagsListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlFlagsListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.databaseVersion = "";
                            if (message.databaseVersion != null && message.hasOwnProperty("databaseVersion"))
                                object.databaseVersion = message.databaseVersion;
                            return object;
                        };
    
                        /**
                         * Converts this SqlFlagsListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlFlagsListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlFlagsListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlFlagsListRequest;
                    })();
    
                    v1beta4.SqlInstancesAddServerCaRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesAddServerCaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesAddServerCaRequest
                         * @property {string|null} [instance] SqlInstancesAddServerCaRequest instance
                         * @property {string|null} [project] SqlInstancesAddServerCaRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesAddServerCaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesAddServerCaRequest.
                         * @implements ISqlInstancesAddServerCaRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesAddServerCaRequest=} [properties] Properties to set
                         */
                        function SqlInstancesAddServerCaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesAddServerCaRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @instance
                         */
                        SqlInstancesAddServerCaRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesAddServerCaRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @instance
                         */
                        SqlInstancesAddServerCaRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesAddServerCaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesAddServerCaRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest} SqlInstancesAddServerCaRequest instance
                         */
                        SqlInstancesAddServerCaRequest.create = function create(properties) {
                            return new SqlInstancesAddServerCaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesAddServerCaRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesAddServerCaRequest} message SqlInstancesAddServerCaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesAddServerCaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesAddServerCaRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesAddServerCaRequest} message SqlInstancesAddServerCaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesAddServerCaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesAddServerCaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest} SqlInstancesAddServerCaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesAddServerCaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesAddServerCaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest} SqlInstancesAddServerCaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesAddServerCaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesAddServerCaRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesAddServerCaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesAddServerCaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest} SqlInstancesAddServerCaRequest
                         */
                        SqlInstancesAddServerCaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesAddServerCaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest} message SqlInstancesAddServerCaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesAddServerCaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesAddServerCaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesAddServerCaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesAddServerCaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesAddServerCaRequest;
                    })();
    
                    v1beta4.SqlInstancesCloneRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesCloneRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesCloneRequest
                         * @property {string|null} [instance] SqlInstancesCloneRequest instance
                         * @property {string|null} [project] SqlInstancesCloneRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesCloneRequest|null} [body] SqlInstancesCloneRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesCloneRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesCloneRequest.
                         * @implements ISqlInstancesCloneRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCloneRequest=} [properties] Properties to set
                         */
                        function SqlInstancesCloneRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesCloneRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @instance
                         */
                        SqlInstancesCloneRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesCloneRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @instance
                         */
                        SqlInstancesCloneRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesCloneRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesCloneRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @instance
                         */
                        SqlInstancesCloneRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesCloneRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCloneRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCloneRequest} SqlInstancesCloneRequest instance
                         */
                        SqlInstancesCloneRequest.create = function create(properties) {
                            return new SqlInstancesCloneRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesCloneRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesCloneRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCloneRequest} message SqlInstancesCloneRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesCloneRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesCloneRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesCloneRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesCloneRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCloneRequest} message SqlInstancesCloneRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesCloneRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesCloneRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCloneRequest} SqlInstancesCloneRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesCloneRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesCloneRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesCloneRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesCloneRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCloneRequest} SqlInstancesCloneRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesCloneRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesCloneRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesCloneRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesCloneRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesCloneRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCloneRequest} SqlInstancesCloneRequest
                         */
                        SqlInstancesCloneRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesCloneRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesCloneRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesCloneRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesCloneRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesCloneRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesCloneRequest} message SqlInstancesCloneRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesCloneRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesCloneRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesCloneRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCloneRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesCloneRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesCloneRequest;
                    })();
    
                    v1beta4.SqlInstancesDeleteRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesDeleteRequest
                         * @property {string|null} [instance] SqlInstancesDeleteRequest instance
                         * @property {string|null} [project] SqlInstancesDeleteRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesDeleteRequest.
                         * @implements ISqlInstancesDeleteRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDeleteRequest=} [properties] Properties to set
                         */
                        function SqlInstancesDeleteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesDeleteRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @instance
                         */
                        SqlInstancesDeleteRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesDeleteRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @instance
                         */
                        SqlInstancesDeleteRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesDeleteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDeleteRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDeleteRequest} SqlInstancesDeleteRequest instance
                         */
                        SqlInstancesDeleteRequest.create = function create(properties) {
                            return new SqlInstancesDeleteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesDeleteRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesDeleteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDeleteRequest} message SqlInstancesDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesDeleteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesDeleteRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesDeleteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDeleteRequest} message SqlInstancesDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesDeleteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesDeleteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDeleteRequest} SqlInstancesDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesDeleteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesDeleteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesDeleteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDeleteRequest} SqlInstancesDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesDeleteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesDeleteRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesDeleteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesDeleteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDeleteRequest} SqlInstancesDeleteRequest
                         */
                        SqlInstancesDeleteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesDeleteRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesDeleteRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesDeleteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesDeleteRequest} message SqlInstancesDeleteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesDeleteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesDeleteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDeleteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesDeleteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesDeleteRequest;
                    })();
    
                    v1beta4.SqlInstancesDemoteMasterRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesDemoteMasterRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesDemoteMasterRequest
                         * @property {string|null} [instance] SqlInstancesDemoteMasterRequest instance
                         * @property {string|null} [project] SqlInstancesDemoteMasterRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesDemoteMasterRequest|null} [body] SqlInstancesDemoteMasterRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesDemoteMasterRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesDemoteMasterRequest.
                         * @implements ISqlInstancesDemoteMasterRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDemoteMasterRequest=} [properties] Properties to set
                         */
                        function SqlInstancesDemoteMasterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesDemoteMasterRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @instance
                         */
                        SqlInstancesDemoteMasterRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesDemoteMasterRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @instance
                         */
                        SqlInstancesDemoteMasterRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesDemoteMasterRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesDemoteMasterRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @instance
                         */
                        SqlInstancesDemoteMasterRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesDemoteMasterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDemoteMasterRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest} SqlInstancesDemoteMasterRequest instance
                         */
                        SqlInstancesDemoteMasterRequest.create = function create(properties) {
                            return new SqlInstancesDemoteMasterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesDemoteMasterRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDemoteMasterRequest} message SqlInstancesDemoteMasterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesDemoteMasterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesDemoteMasterRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesDemoteMasterRequest} message SqlInstancesDemoteMasterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesDemoteMasterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesDemoteMasterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest} SqlInstancesDemoteMasterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesDemoteMasterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesDemoteMasterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest} SqlInstancesDemoteMasterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesDemoteMasterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesDemoteMasterRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesDemoteMasterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesDemoteMasterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest} SqlInstancesDemoteMasterRequest
                         */
                        SqlInstancesDemoteMasterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesDemoteMasterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest} message SqlInstancesDemoteMasterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesDemoteMasterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesDemoteMasterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesDemoteMasterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesDemoteMasterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesDemoteMasterRequest;
                    })();
    
                    v1beta4.SqlInstancesExportRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesExportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesExportRequest
                         * @property {string|null} [instance] SqlInstancesExportRequest instance
                         * @property {string|null} [project] SqlInstancesExportRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesExportRequest|null} [body] SqlInstancesExportRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesExportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesExportRequest.
                         * @implements ISqlInstancesExportRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesExportRequest=} [properties] Properties to set
                         */
                        function SqlInstancesExportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesExportRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @instance
                         */
                        SqlInstancesExportRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesExportRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @instance
                         */
                        SqlInstancesExportRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesExportRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesExportRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @instance
                         */
                        SqlInstancesExportRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesExportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesExportRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesExportRequest} SqlInstancesExportRequest instance
                         */
                        SqlInstancesExportRequest.create = function create(properties) {
                            return new SqlInstancesExportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesExportRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesExportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesExportRequest} message SqlInstancesExportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesExportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesExportRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesExportRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesExportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesExportRequest} message SqlInstancesExportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesExportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesExportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesExportRequest} SqlInstancesExportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesExportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesExportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesExportRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesExportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesExportRequest} SqlInstancesExportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesExportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesExportRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesExportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesExportRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesExportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesExportRequest} SqlInstancesExportRequest
                         */
                        SqlInstancesExportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesExportRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesExportRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesExportRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesExportRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesExportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesExportRequest} message SqlInstancesExportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesExportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesExportRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesExportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesExportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesExportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesExportRequest;
                    })();
    
                    v1beta4.SqlInstancesFailoverRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesFailoverRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesFailoverRequest
                         * @property {string|null} [instance] SqlInstancesFailoverRequest instance
                         * @property {string|null} [project] SqlInstancesFailoverRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesFailoverRequest|null} [body] SqlInstancesFailoverRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesFailoverRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesFailoverRequest.
                         * @implements ISqlInstancesFailoverRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesFailoverRequest=} [properties] Properties to set
                         */
                        function SqlInstancesFailoverRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesFailoverRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @instance
                         */
                        SqlInstancesFailoverRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesFailoverRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @instance
                         */
                        SqlInstancesFailoverRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesFailoverRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesFailoverRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @instance
                         */
                        SqlInstancesFailoverRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesFailoverRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesFailoverRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesFailoverRequest} SqlInstancesFailoverRequest instance
                         */
                        SqlInstancesFailoverRequest.create = function create(properties) {
                            return new SqlInstancesFailoverRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesFailoverRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesFailoverRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesFailoverRequest} message SqlInstancesFailoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesFailoverRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesFailoverRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesFailoverRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesFailoverRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesFailoverRequest} message SqlInstancesFailoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesFailoverRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesFailoverRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesFailoverRequest} SqlInstancesFailoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesFailoverRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesFailoverRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesFailoverRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesFailoverRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesFailoverRequest} SqlInstancesFailoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesFailoverRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesFailoverRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesFailoverRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesFailoverRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesFailoverRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesFailoverRequest} SqlInstancesFailoverRequest
                         */
                        SqlInstancesFailoverRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesFailoverRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesFailoverRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesFailoverRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesFailoverRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesFailoverRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesFailoverRequest} message SqlInstancesFailoverRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesFailoverRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesFailoverRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesFailoverRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesFailoverRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesFailoverRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesFailoverRequest;
                    })();
    
                    v1beta4.SqlInstancesGetRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesGetRequest
                         * @property {string|null} [instance] SqlInstancesGetRequest instance
                         * @property {string|null} [project] SqlInstancesGetRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesGetRequest.
                         * @implements ISqlInstancesGetRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesGetRequest=} [properties] Properties to set
                         */
                        function SqlInstancesGetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesGetRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @instance
                         */
                        SqlInstancesGetRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesGetRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @instance
                         */
                        SqlInstancesGetRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesGetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesGetRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesGetRequest} SqlInstancesGetRequest instance
                         */
                        SqlInstancesGetRequest.create = function create(properties) {
                            return new SqlInstancesGetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesGetRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesGetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesGetRequest} message SqlInstancesGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesGetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesGetRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesGetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesGetRequest} message SqlInstancesGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesGetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesGetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesGetRequest} SqlInstancesGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesGetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesGetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesGetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesGetRequest} SqlInstancesGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesGetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesGetRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesGetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesGetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesGetRequest} SqlInstancesGetRequest
                         */
                        SqlInstancesGetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesGetRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesGetRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesGetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesGetRequest} message SqlInstancesGetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesGetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesGetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesGetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesGetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesGetRequest;
                    })();
    
                    v1beta4.SqlInstancesImportRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesImportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesImportRequest
                         * @property {string|null} [instance] SqlInstancesImportRequest instance
                         * @property {string|null} [project] SqlInstancesImportRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesImportRequest|null} [body] SqlInstancesImportRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesImportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesImportRequest.
                         * @implements ISqlInstancesImportRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesImportRequest=} [properties] Properties to set
                         */
                        function SqlInstancesImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesImportRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @instance
                         */
                        SqlInstancesImportRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesImportRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @instance
                         */
                        SqlInstancesImportRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesImportRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesImportRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @instance
                         */
                        SqlInstancesImportRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesImportRequest} SqlInstancesImportRequest instance
                         */
                        SqlInstancesImportRequest.create = function create(properties) {
                            return new SqlInstancesImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesImportRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesImportRequest} message SqlInstancesImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesImportRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesImportRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesImportRequest} message SqlInstancesImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesImportRequest} SqlInstancesImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesImportRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesImportRequest} SqlInstancesImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesImportRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesImportRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesImportRequest} SqlInstancesImportRequest
                         */
                        SqlInstancesImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesImportRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesImportRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesImportRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesImportRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesImportRequest} message SqlInstancesImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesImportRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesImportRequest;
                    })();
    
                    v1beta4.SqlInstancesInsertRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesInsertRequest
                         * @property {string|null} [project] SqlInstancesInsertRequest project
                         * @property {google.cloud.sql.v1beta4.IDatabaseInstance|null} [body] SqlInstancesInsertRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesInsertRequest.
                         * @implements ISqlInstancesInsertRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesInsertRequest=} [properties] Properties to set
                         */
                        function SqlInstancesInsertRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesInsertRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @instance
                         */
                        SqlInstancesInsertRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesInsertRequest body.
                         * @member {google.cloud.sql.v1beta4.IDatabaseInstance|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @instance
                         */
                        SqlInstancesInsertRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesInsertRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesInsertRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesInsertRequest} SqlInstancesInsertRequest instance
                         */
                        SqlInstancesInsertRequest.create = function create(properties) {
                            return new SqlInstancesInsertRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesInsertRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesInsertRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesInsertRequest} message SqlInstancesInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesInsertRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.DatabaseInstance.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesInsertRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesInsertRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesInsertRequest} message SqlInstancesInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesInsertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesInsertRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesInsertRequest} SqlInstancesInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesInsertRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesInsertRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesInsertRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesInsertRequest} SqlInstancesInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesInsertRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesInsertRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesInsertRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.DatabaseInstance.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesInsertRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesInsertRequest} SqlInstancesInsertRequest
                         */
                        SqlInstancesInsertRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesInsertRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesInsertRequest();
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesInsertRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesInsertRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesInsertRequest} message SqlInstancesInsertRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesInsertRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.project = "";
                                object.body = null;
                            }
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesInsertRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesInsertRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesInsertRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesInsertRequest;
                    })();
    
                    v1beta4.SqlInstancesListRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesListRequest
                         * @property {string|null} [filter] SqlInstancesListRequest filter
                         * @property {number|null} [maxResults] SqlInstancesListRequest maxResults
                         * @property {string|null} [pageToken] SqlInstancesListRequest pageToken
                         * @property {string|null} [project] SqlInstancesListRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesListRequest.
                         * @implements ISqlInstancesListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListRequest=} [properties] Properties to set
                         */
                        function SqlInstancesListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesListRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @instance
                         */
                        SqlInstancesListRequest.prototype.filter = "";
    
                        /**
                         * SqlInstancesListRequest maxResults.
                         * @member {number} maxResults
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @instance
                         */
                        SqlInstancesListRequest.prototype.maxResults = 0;
    
                        /**
                         * SqlInstancesListRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @instance
                         */
                        SqlInstancesListRequest.prototype.pageToken = "";
    
                        /**
                         * SqlInstancesListRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @instance
                         */
                        SqlInstancesListRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListRequest} SqlInstancesListRequest instance
                         */
                        SqlInstancesListRequest.create = function create(properties) {
                            return new SqlInstancesListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListRequest} message SqlInstancesListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                            if (message.maxResults != null && Object.hasOwnProperty.call(message, "maxResults"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxResults);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListRequest} message SqlInstancesListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListRequest} SqlInstancesListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.filter = reader.string();
                                    break;
                                case 2:
                                    message.maxResults = reader.uint32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListRequest} SqlInstancesListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.maxResults != null && message.hasOwnProperty("maxResults"))
                                if (!$util.isInteger(message.maxResults))
                                    return "maxResults: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListRequest} SqlInstancesListRequest
                         */
                        SqlInstancesListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesListRequest();
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.maxResults != null)
                                message.maxResults = object.maxResults >>> 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesListRequest} message SqlInstancesListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.filter = "";
                                object.maxResults = 0;
                                object.pageToken = "";
                                object.project = "";
                            }
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.maxResults != null && message.hasOwnProperty("maxResults"))
                                object.maxResults = message.maxResults;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesListRequest;
                    })();
    
                    v1beta4.SqlInstancesListServerCasRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesListServerCasRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesListServerCasRequest
                         * @property {string|null} [instance] SqlInstancesListServerCasRequest instance
                         * @property {string|null} [project] SqlInstancesListServerCasRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesListServerCasRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesListServerCasRequest.
                         * @implements ISqlInstancesListServerCasRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListServerCasRequest=} [properties] Properties to set
                         */
                        function SqlInstancesListServerCasRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesListServerCasRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @instance
                         */
                        SqlInstancesListServerCasRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesListServerCasRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @instance
                         */
                        SqlInstancesListServerCasRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesListServerCasRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListServerCasRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest} SqlInstancesListServerCasRequest instance
                         */
                        SqlInstancesListServerCasRequest.create = function create(properties) {
                            return new SqlInstancesListServerCasRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesListServerCasRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListServerCasRequest} message SqlInstancesListServerCasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesListServerCasRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesListServerCasRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesListServerCasRequest} message SqlInstancesListServerCasRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesListServerCasRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesListServerCasRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest} SqlInstancesListServerCasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesListServerCasRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesListServerCasRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest} SqlInstancesListServerCasRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesListServerCasRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesListServerCasRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesListServerCasRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesListServerCasRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest} SqlInstancesListServerCasRequest
                         */
                        SqlInstancesListServerCasRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesListServerCasRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest} message SqlInstancesListServerCasRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesListServerCasRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesListServerCasRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesListServerCasRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesListServerCasRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesListServerCasRequest;
                    })();
    
                    v1beta4.SqlInstancesPatchRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesPatchRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesPatchRequest
                         * @property {string|null} [instance] SqlInstancesPatchRequest instance
                         * @property {string|null} [project] SqlInstancesPatchRequest project
                         * @property {google.cloud.sql.v1beta4.IDatabaseInstance|null} [body] SqlInstancesPatchRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesPatchRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesPatchRequest.
                         * @implements ISqlInstancesPatchRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPatchRequest=} [properties] Properties to set
                         */
                        function SqlInstancesPatchRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesPatchRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @instance
                         */
                        SqlInstancesPatchRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesPatchRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @instance
                         */
                        SqlInstancesPatchRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesPatchRequest body.
                         * @member {google.cloud.sql.v1beta4.IDatabaseInstance|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @instance
                         */
                        SqlInstancesPatchRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesPatchRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPatchRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPatchRequest} SqlInstancesPatchRequest instance
                         */
                        SqlInstancesPatchRequest.create = function create(properties) {
                            return new SqlInstancesPatchRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesPatchRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesPatchRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPatchRequest} message SqlInstancesPatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesPatchRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.DatabaseInstance.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesPatchRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesPatchRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPatchRequest} message SqlInstancesPatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesPatchRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesPatchRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPatchRequest} SqlInstancesPatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesPatchRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesPatchRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesPatchRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPatchRequest} SqlInstancesPatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesPatchRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesPatchRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesPatchRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.DatabaseInstance.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesPatchRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPatchRequest} SqlInstancesPatchRequest
                         */
                        SqlInstancesPatchRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesPatchRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesPatchRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesPatchRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesPatchRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesPatchRequest} message SqlInstancesPatchRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesPatchRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesPatchRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPatchRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesPatchRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesPatchRequest;
                    })();
    
                    v1beta4.SqlInstancesPromoteReplicaRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesPromoteReplicaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesPromoteReplicaRequest
                         * @property {string|null} [instance] SqlInstancesPromoteReplicaRequest instance
                         * @property {string|null} [project] SqlInstancesPromoteReplicaRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesPromoteReplicaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesPromoteReplicaRequest.
                         * @implements ISqlInstancesPromoteReplicaRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPromoteReplicaRequest=} [properties] Properties to set
                         */
                        function SqlInstancesPromoteReplicaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesPromoteReplicaRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @instance
                         */
                        SqlInstancesPromoteReplicaRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesPromoteReplicaRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @instance
                         */
                        SqlInstancesPromoteReplicaRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesPromoteReplicaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPromoteReplicaRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest} SqlInstancesPromoteReplicaRequest instance
                         */
                        SqlInstancesPromoteReplicaRequest.create = function create(properties) {
                            return new SqlInstancesPromoteReplicaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesPromoteReplicaRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPromoteReplicaRequest} message SqlInstancesPromoteReplicaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesPromoteReplicaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesPromoteReplicaRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesPromoteReplicaRequest} message SqlInstancesPromoteReplicaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesPromoteReplicaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesPromoteReplicaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest} SqlInstancesPromoteReplicaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesPromoteReplicaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesPromoteReplicaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest} SqlInstancesPromoteReplicaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesPromoteReplicaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesPromoteReplicaRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesPromoteReplicaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesPromoteReplicaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest} SqlInstancesPromoteReplicaRequest
                         */
                        SqlInstancesPromoteReplicaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesPromoteReplicaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest} message SqlInstancesPromoteReplicaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesPromoteReplicaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesPromoteReplicaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesPromoteReplicaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesPromoteReplicaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesPromoteReplicaRequest;
                    })();
    
                    v1beta4.SqlInstancesResetSslConfigRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesResetSslConfigRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesResetSslConfigRequest
                         * @property {string|null} [instance] SqlInstancesResetSslConfigRequest instance
                         * @property {string|null} [project] SqlInstancesResetSslConfigRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesResetSslConfigRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesResetSslConfigRequest.
                         * @implements ISqlInstancesResetSslConfigRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesResetSslConfigRequest=} [properties] Properties to set
                         */
                        function SqlInstancesResetSslConfigRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesResetSslConfigRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @instance
                         */
                        SqlInstancesResetSslConfigRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesResetSslConfigRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @instance
                         */
                        SqlInstancesResetSslConfigRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesResetSslConfigRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesResetSslConfigRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest} SqlInstancesResetSslConfigRequest instance
                         */
                        SqlInstancesResetSslConfigRequest.create = function create(properties) {
                            return new SqlInstancesResetSslConfigRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesResetSslConfigRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesResetSslConfigRequest} message SqlInstancesResetSslConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesResetSslConfigRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesResetSslConfigRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesResetSslConfigRequest} message SqlInstancesResetSslConfigRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesResetSslConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesResetSslConfigRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest} SqlInstancesResetSslConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesResetSslConfigRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesResetSslConfigRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest} SqlInstancesResetSslConfigRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesResetSslConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesResetSslConfigRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesResetSslConfigRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesResetSslConfigRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest} SqlInstancesResetSslConfigRequest
                         */
                        SqlInstancesResetSslConfigRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesResetSslConfigRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest} message SqlInstancesResetSslConfigRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesResetSslConfigRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesResetSslConfigRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesResetSslConfigRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesResetSslConfigRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesResetSslConfigRequest;
                    })();
    
                    v1beta4.SqlInstancesRestartRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesRestartRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesRestartRequest
                         * @property {string|null} [instance] SqlInstancesRestartRequest instance
                         * @property {string|null} [project] SqlInstancesRestartRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesRestartRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesRestartRequest.
                         * @implements ISqlInstancesRestartRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestartRequest=} [properties] Properties to set
                         */
                        function SqlInstancesRestartRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesRestartRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @instance
                         */
                        SqlInstancesRestartRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesRestartRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @instance
                         */
                        SqlInstancesRestartRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesRestartRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestartRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestartRequest} SqlInstancesRestartRequest instance
                         */
                        SqlInstancesRestartRequest.create = function create(properties) {
                            return new SqlInstancesRestartRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRestartRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRestartRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestartRequest} message SqlInstancesRestartRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRestartRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRestartRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRestartRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestartRequest} message SqlInstancesRestartRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRestartRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesRestartRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestartRequest} SqlInstancesRestartRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRestartRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesRestartRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesRestartRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestartRequest} SqlInstancesRestartRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRestartRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesRestartRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesRestartRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesRestartRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestartRequest} SqlInstancesRestartRequest
                         */
                        SqlInstancesRestartRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesRestartRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesRestartRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesRestartRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesRestartRequest} message SqlInstancesRestartRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesRestartRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesRestartRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestartRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesRestartRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesRestartRequest;
                    })();
    
                    v1beta4.SqlInstancesRestoreBackupRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesRestoreBackupRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesRestoreBackupRequest
                         * @property {string|null} [instance] SqlInstancesRestoreBackupRequest instance
                         * @property {string|null} [project] SqlInstancesRestoreBackupRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesRestoreBackupRequest|null} [body] SqlInstancesRestoreBackupRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesRestoreBackupRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesRestoreBackupRequest.
                         * @implements ISqlInstancesRestoreBackupRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestoreBackupRequest=} [properties] Properties to set
                         */
                        function SqlInstancesRestoreBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesRestoreBackupRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @instance
                         */
                        SqlInstancesRestoreBackupRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesRestoreBackupRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @instance
                         */
                        SqlInstancesRestoreBackupRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesRestoreBackupRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesRestoreBackupRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @instance
                         */
                        SqlInstancesRestoreBackupRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesRestoreBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestoreBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest} SqlInstancesRestoreBackupRequest instance
                         */
                        SqlInstancesRestoreBackupRequest.create = function create(properties) {
                            return new SqlInstancesRestoreBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRestoreBackupRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestoreBackupRequest} message SqlInstancesRestoreBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRestoreBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRestoreBackupRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRestoreBackupRequest} message SqlInstancesRestoreBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRestoreBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesRestoreBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest} SqlInstancesRestoreBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRestoreBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesRestoreBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest} SqlInstancesRestoreBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRestoreBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesRestoreBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesRestoreBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesRestoreBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest} SqlInstancesRestoreBackupRequest
                         */
                        SqlInstancesRestoreBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesRestoreBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest} message SqlInstancesRestoreBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesRestoreBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesRestoreBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRestoreBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesRestoreBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesRestoreBackupRequest;
                    })();
    
                    v1beta4.SqlInstancesRotateServerCaRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesRotateServerCaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesRotateServerCaRequest
                         * @property {string|null} [instance] SqlInstancesRotateServerCaRequest instance
                         * @property {string|null} [project] SqlInstancesRotateServerCaRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesRotateServerCaRequest|null} [body] SqlInstancesRotateServerCaRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesRotateServerCaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesRotateServerCaRequest.
                         * @implements ISqlInstancesRotateServerCaRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRotateServerCaRequest=} [properties] Properties to set
                         */
                        function SqlInstancesRotateServerCaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesRotateServerCaRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @instance
                         */
                        SqlInstancesRotateServerCaRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesRotateServerCaRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @instance
                         */
                        SqlInstancesRotateServerCaRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesRotateServerCaRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesRotateServerCaRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @instance
                         */
                        SqlInstancesRotateServerCaRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesRotateServerCaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRotateServerCaRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest} SqlInstancesRotateServerCaRequest instance
                         */
                        SqlInstancesRotateServerCaRequest.create = function create(properties) {
                            return new SqlInstancesRotateServerCaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRotateServerCaRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRotateServerCaRequest} message SqlInstancesRotateServerCaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRotateServerCaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRotateServerCaRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRotateServerCaRequest} message SqlInstancesRotateServerCaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRotateServerCaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesRotateServerCaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest} SqlInstancesRotateServerCaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRotateServerCaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesRotateServerCaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest} SqlInstancesRotateServerCaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRotateServerCaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesRotateServerCaRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesRotateServerCaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesRotateServerCaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest} SqlInstancesRotateServerCaRequest
                         */
                        SqlInstancesRotateServerCaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesRotateServerCaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest} message SqlInstancesRotateServerCaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesRotateServerCaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesRotateServerCaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRotateServerCaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesRotateServerCaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesRotateServerCaRequest;
                    })();
    
                    v1beta4.SqlInstancesStartReplicaRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesStartReplicaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesStartReplicaRequest
                         * @property {string|null} [instance] SqlInstancesStartReplicaRequest instance
                         * @property {string|null} [project] SqlInstancesStartReplicaRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesStartReplicaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesStartReplicaRequest.
                         * @implements ISqlInstancesStartReplicaRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartReplicaRequest=} [properties] Properties to set
                         */
                        function SqlInstancesStartReplicaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesStartReplicaRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @instance
                         */
                        SqlInstancesStartReplicaRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesStartReplicaRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @instance
                         */
                        SqlInstancesStartReplicaRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesStartReplicaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartReplicaRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest} SqlInstancesStartReplicaRequest instance
                         */
                        SqlInstancesStartReplicaRequest.create = function create(properties) {
                            return new SqlInstancesStartReplicaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesStartReplicaRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartReplicaRequest} message SqlInstancesStartReplicaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesStartReplicaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesStartReplicaRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartReplicaRequest} message SqlInstancesStartReplicaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesStartReplicaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesStartReplicaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest} SqlInstancesStartReplicaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesStartReplicaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesStartReplicaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest} SqlInstancesStartReplicaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesStartReplicaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesStartReplicaRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesStartReplicaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesStartReplicaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest} SqlInstancesStartReplicaRequest
                         */
                        SqlInstancesStartReplicaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesStartReplicaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest} message SqlInstancesStartReplicaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesStartReplicaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesStartReplicaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartReplicaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesStartReplicaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesStartReplicaRequest;
                    })();
    
                    v1beta4.SqlInstancesStopReplicaRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesStopReplicaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesStopReplicaRequest
                         * @property {string|null} [instance] SqlInstancesStopReplicaRequest instance
                         * @property {string|null} [project] SqlInstancesStopReplicaRequest project
                         */
    
                        /**
                         * Constructs a new SqlInstancesStopReplicaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesStopReplicaRequest.
                         * @implements ISqlInstancesStopReplicaRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStopReplicaRequest=} [properties] Properties to set
                         */
                        function SqlInstancesStopReplicaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesStopReplicaRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @instance
                         */
                        SqlInstancesStopReplicaRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesStopReplicaRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @instance
                         */
                        SqlInstancesStopReplicaRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlInstancesStopReplicaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStopReplicaRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest} SqlInstancesStopReplicaRequest instance
                         */
                        SqlInstancesStopReplicaRequest.create = function create(properties) {
                            return new SqlInstancesStopReplicaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesStopReplicaRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStopReplicaRequest} message SqlInstancesStopReplicaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesStopReplicaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesStopReplicaRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStopReplicaRequest} message SqlInstancesStopReplicaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesStopReplicaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesStopReplicaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest} SqlInstancesStopReplicaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesStopReplicaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesStopReplicaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest} SqlInstancesStopReplicaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesStopReplicaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesStopReplicaRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesStopReplicaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesStopReplicaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest} SqlInstancesStopReplicaRequest
                         */
                        SqlInstancesStopReplicaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesStopReplicaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest} message SqlInstancesStopReplicaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesStopReplicaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesStopReplicaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStopReplicaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesStopReplicaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesStopReplicaRequest;
                    })();
    
                    v1beta4.SqlInstancesTruncateLogRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesTruncateLogRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesTruncateLogRequest
                         * @property {string|null} [instance] SqlInstancesTruncateLogRequest instance
                         * @property {string|null} [project] SqlInstancesTruncateLogRequest project
                         * @property {google.cloud.sql.v1beta4.IInstancesTruncateLogRequest|null} [body] SqlInstancesTruncateLogRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesTruncateLogRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesTruncateLogRequest.
                         * @implements ISqlInstancesTruncateLogRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesTruncateLogRequest=} [properties] Properties to set
                         */
                        function SqlInstancesTruncateLogRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesTruncateLogRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @instance
                         */
                        SqlInstancesTruncateLogRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesTruncateLogRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @instance
                         */
                        SqlInstancesTruncateLogRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesTruncateLogRequest body.
                         * @member {google.cloud.sql.v1beta4.IInstancesTruncateLogRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @instance
                         */
                        SqlInstancesTruncateLogRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesTruncateLogRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesTruncateLogRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest} SqlInstancesTruncateLogRequest instance
                         */
                        SqlInstancesTruncateLogRequest.create = function create(properties) {
                            return new SqlInstancesTruncateLogRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesTruncateLogRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesTruncateLogRequest} message SqlInstancesTruncateLogRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesTruncateLogRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesTruncateLogRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesTruncateLogRequest} message SqlInstancesTruncateLogRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesTruncateLogRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesTruncateLogRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest} SqlInstancesTruncateLogRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesTruncateLogRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesTruncateLogRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest} SqlInstancesTruncateLogRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesTruncateLogRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesTruncateLogRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesTruncateLogRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesTruncateLogRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest} SqlInstancesTruncateLogRequest
                         */
                        SqlInstancesTruncateLogRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesTruncateLogRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest} message SqlInstancesTruncateLogRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesTruncateLogRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesTruncateLogRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesTruncateLogRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesTruncateLogRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesTruncateLogRequest;
                    })();
    
                    v1beta4.SqlInstancesUpdateRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesUpdateRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesUpdateRequest
                         * @property {string|null} [instance] SqlInstancesUpdateRequest instance
                         * @property {string|null} [project] SqlInstancesUpdateRequest project
                         * @property {google.cloud.sql.v1beta4.IDatabaseInstance|null} [body] SqlInstancesUpdateRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesUpdateRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesUpdateRequest.
                         * @implements ISqlInstancesUpdateRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesUpdateRequest=} [properties] Properties to set
                         */
                        function SqlInstancesUpdateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesUpdateRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @instance
                         */
                        SqlInstancesUpdateRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesUpdateRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @instance
                         */
                        SqlInstancesUpdateRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesUpdateRequest body.
                         * @member {google.cloud.sql.v1beta4.IDatabaseInstance|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @instance
                         */
                        SqlInstancesUpdateRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesUpdateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesUpdateRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesUpdateRequest} SqlInstancesUpdateRequest instance
                         */
                        SqlInstancesUpdateRequest.create = function create(properties) {
                            return new SqlInstancesUpdateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesUpdateRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesUpdateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesUpdateRequest} message SqlInstancesUpdateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesUpdateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.DatabaseInstance.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesUpdateRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesUpdateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesUpdateRequest} message SqlInstancesUpdateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesUpdateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesUpdateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesUpdateRequest} SqlInstancesUpdateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesUpdateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesUpdateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesUpdateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesUpdateRequest} SqlInstancesUpdateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesUpdateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesUpdateRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesUpdateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.DatabaseInstance.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesUpdateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesUpdateRequest} SqlInstancesUpdateRequest
                         */
                        SqlInstancesUpdateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesUpdateRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesUpdateRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesUpdateRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesUpdateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesUpdateRequest} message SqlInstancesUpdateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesUpdateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.DatabaseInstance.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesUpdateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesUpdateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesUpdateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesUpdateRequest;
                    })();
    
                    v1beta4.SqlInstancesRescheduleMaintenanceRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesRescheduleMaintenanceRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesRescheduleMaintenanceRequest
                         * @property {string|null} [instance] SqlInstancesRescheduleMaintenanceRequest instance
                         * @property {string|null} [project] SqlInstancesRescheduleMaintenanceRequest project
                         * @property {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequestBody|null} [body] SqlInstancesRescheduleMaintenanceRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesRescheduleMaintenanceRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesRescheduleMaintenanceRequest.
                         * @implements ISqlInstancesRescheduleMaintenanceRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequest=} [properties] Properties to set
                         */
                        function SqlInstancesRescheduleMaintenanceRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesRescheduleMaintenanceRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @instance
                         */
                        SqlInstancesRescheduleMaintenanceRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesRescheduleMaintenanceRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @instance
                         */
                        SqlInstancesRescheduleMaintenanceRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesRescheduleMaintenanceRequest body.
                         * @member {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequestBody|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @instance
                         */
                        SqlInstancesRescheduleMaintenanceRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesRescheduleMaintenanceRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest} SqlInstancesRescheduleMaintenanceRequest instance
                         */
                        SqlInstancesRescheduleMaintenanceRequest.create = function create(properties) {
                            return new SqlInstancesRescheduleMaintenanceRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRescheduleMaintenanceRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequest} message SqlInstancesRescheduleMaintenanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRescheduleMaintenanceRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRescheduleMaintenanceRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequest} message SqlInstancesRescheduleMaintenanceRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRescheduleMaintenanceRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesRescheduleMaintenanceRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest} SqlInstancesRescheduleMaintenanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRescheduleMaintenanceRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesRescheduleMaintenanceRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest} SqlInstancesRescheduleMaintenanceRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRescheduleMaintenanceRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesRescheduleMaintenanceRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesRescheduleMaintenanceRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesRescheduleMaintenanceRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest} SqlInstancesRescheduleMaintenanceRequest
                         */
                        SqlInstancesRescheduleMaintenanceRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesRescheduleMaintenanceRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest} message SqlInstancesRescheduleMaintenanceRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesRescheduleMaintenanceRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesRescheduleMaintenanceRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesRescheduleMaintenanceRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesRescheduleMaintenanceRequest;
                    })();
    
                    v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesVerifyExternalSyncSettingsRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesVerifyExternalSyncSettingsRequest
                         * @property {string|null} [instance] SqlInstancesVerifyExternalSyncSettingsRequest instance
                         * @property {string|null} [project] SqlInstancesVerifyExternalSyncSettingsRequest project
                         * @property {boolean|null} [verifyConnectionOnly] SqlInstancesVerifyExternalSyncSettingsRequest verifyConnectionOnly
                         * @property {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode|null} [syncMode] SqlInstancesVerifyExternalSyncSettingsRequest syncMode
                         */
    
                        /**
                         * Constructs a new SqlInstancesVerifyExternalSyncSettingsRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesVerifyExternalSyncSettingsRequest.
                         * @implements ISqlInstancesVerifyExternalSyncSettingsRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsRequest=} [properties] Properties to set
                         */
                        function SqlInstancesVerifyExternalSyncSettingsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesVerifyExternalSyncSettingsRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesVerifyExternalSyncSettingsRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesVerifyExternalSyncSettingsRequest verifyConnectionOnly.
                         * @member {boolean} verifyConnectionOnly
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.prototype.verifyConnectionOnly = false;
    
                        /**
                         * SqlInstancesVerifyExternalSyncSettingsRequest syncMode.
                         * @member {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode} syncMode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.prototype.syncMode = 0;
    
                        /**
                         * Creates a new SqlInstancesVerifyExternalSyncSettingsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest} SqlInstancesVerifyExternalSyncSettingsRequest instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.create = function create(properties) {
                            return new SqlInstancesVerifyExternalSyncSettingsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesVerifyExternalSyncSettingsRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsRequest} message SqlInstancesVerifyExternalSyncSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.verifyConnectionOnly != null && Object.hasOwnProperty.call(message, "verifyConnectionOnly"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.verifyConnectionOnly);
                            if (message.syncMode != null && Object.hasOwnProperty.call(message, "syncMode"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.syncMode);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesVerifyExternalSyncSettingsRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsRequest} message SqlInstancesVerifyExternalSyncSettingsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesVerifyExternalSyncSettingsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest} SqlInstancesVerifyExternalSyncSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 3:
                                    message.verifyConnectionOnly = reader.bool();
                                    break;
                                case 4:
                                    message.syncMode = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesVerifyExternalSyncSettingsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest} SqlInstancesVerifyExternalSyncSettingsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesVerifyExternalSyncSettingsRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.verifyConnectionOnly != null && message.hasOwnProperty("verifyConnectionOnly"))
                                if (typeof message.verifyConnectionOnly !== "boolean")
                                    return "verifyConnectionOnly: boolean expected";
                            if (message.syncMode != null && message.hasOwnProperty("syncMode"))
                                switch (message.syncMode) {
                                default:
                                    return "syncMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesVerifyExternalSyncSettingsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest} SqlInstancesVerifyExternalSyncSettingsRequest
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.verifyConnectionOnly != null)
                                message.verifyConnectionOnly = Boolean(object.verifyConnectionOnly);
                            switch (object.syncMode) {
                            case "EXTERNAL_SYNC_MODE_UNSPECIFIED":
                            case 0:
                                message.syncMode = 0;
                                break;
                            case "ONLINE":
                            case 1:
                                message.syncMode = 1;
                                break;
                            case "OFFLINE":
                            case 2:
                                message.syncMode = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesVerifyExternalSyncSettingsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest} message SqlInstancesVerifyExternalSyncSettingsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.verifyConnectionOnly = false;
                                object.syncMode = options.enums === String ? "EXTERNAL_SYNC_MODE_UNSPECIFIED" : 0;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.verifyConnectionOnly != null && message.hasOwnProperty("verifyConnectionOnly"))
                                object.verifyConnectionOnly = message.verifyConnectionOnly;
                            if (message.syncMode != null && message.hasOwnProperty("syncMode"))
                                object.syncMode = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode[message.syncMode] : message.syncMode;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesVerifyExternalSyncSettingsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * ExternalSyncMode enum.
                         * @name google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode
                         * @enum {number}
                         * @property {number} EXTERNAL_SYNC_MODE_UNSPECIFIED=0 EXTERNAL_SYNC_MODE_UNSPECIFIED value
                         * @property {number} ONLINE=1 ONLINE value
                         * @property {number} OFFLINE=2 OFFLINE value
                         */
                        SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "EXTERNAL_SYNC_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ONLINE"] = 1;
                            values[valuesById[2] = "OFFLINE"] = 2;
                            return values;
                        })();
    
                        return SqlInstancesVerifyExternalSyncSettingsRequest;
                    })();
    
                    v1beta4.SqlInstancesStartExternalSyncRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesStartExternalSyncRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesStartExternalSyncRequest
                         * @property {string|null} [instance] SqlInstancesStartExternalSyncRequest instance
                         * @property {string|null} [project] SqlInstancesStartExternalSyncRequest project
                         * @property {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode|null} [syncMode] SqlInstancesStartExternalSyncRequest syncMode
                         * @property {boolean|null} [skipVerification] SqlInstancesStartExternalSyncRequest skipVerification
                         */
    
                        /**
                         * Constructs a new SqlInstancesStartExternalSyncRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesStartExternalSyncRequest.
                         * @implements ISqlInstancesStartExternalSyncRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartExternalSyncRequest=} [properties] Properties to set
                         */
                        function SqlInstancesStartExternalSyncRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesStartExternalSyncRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @instance
                         */
                        SqlInstancesStartExternalSyncRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesStartExternalSyncRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @instance
                         */
                        SqlInstancesStartExternalSyncRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesStartExternalSyncRequest syncMode.
                         * @member {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode} syncMode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @instance
                         */
                        SqlInstancesStartExternalSyncRequest.prototype.syncMode = 0;
    
                        /**
                         * SqlInstancesStartExternalSyncRequest skipVerification.
                         * @member {boolean} skipVerification
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @instance
                         */
                        SqlInstancesStartExternalSyncRequest.prototype.skipVerification = false;
    
                        /**
                         * Creates a new SqlInstancesStartExternalSyncRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartExternalSyncRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest} SqlInstancesStartExternalSyncRequest instance
                         */
                        SqlInstancesStartExternalSyncRequest.create = function create(properties) {
                            return new SqlInstancesStartExternalSyncRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesStartExternalSyncRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartExternalSyncRequest} message SqlInstancesStartExternalSyncRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesStartExternalSyncRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.syncMode != null && Object.hasOwnProperty.call(message, "syncMode"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.syncMode);
                            if (message.skipVerification != null && Object.hasOwnProperty.call(message, "skipVerification"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.skipVerification);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesStartExternalSyncRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesStartExternalSyncRequest} message SqlInstancesStartExternalSyncRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesStartExternalSyncRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesStartExternalSyncRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest} SqlInstancesStartExternalSyncRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesStartExternalSyncRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 3:
                                    message.syncMode = reader.int32();
                                    break;
                                case 4:
                                    message.skipVerification = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesStartExternalSyncRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest} SqlInstancesStartExternalSyncRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesStartExternalSyncRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesStartExternalSyncRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesStartExternalSyncRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.syncMode != null && message.hasOwnProperty("syncMode"))
                                switch (message.syncMode) {
                                default:
                                    return "syncMode: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.skipVerification != null && message.hasOwnProperty("skipVerification"))
                                if (typeof message.skipVerification !== "boolean")
                                    return "skipVerification: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesStartExternalSyncRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest} SqlInstancesStartExternalSyncRequest
                         */
                        SqlInstancesStartExternalSyncRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            switch (object.syncMode) {
                            case "EXTERNAL_SYNC_MODE_UNSPECIFIED":
                            case 0:
                                message.syncMode = 0;
                                break;
                            case "ONLINE":
                            case 1:
                                message.syncMode = 1;
                                break;
                            case "OFFLINE":
                            case 2:
                                message.syncMode = 2;
                                break;
                            }
                            if (object.skipVerification != null)
                                message.skipVerification = Boolean(object.skipVerification);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesStartExternalSyncRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest} message SqlInstancesStartExternalSyncRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesStartExternalSyncRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.syncMode = options.enums === String ? "EXTERNAL_SYNC_MODE_UNSPECIFIED" : 0;
                                object.skipVerification = false;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.syncMode != null && message.hasOwnProperty("syncMode"))
                                object.syncMode = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsRequest.ExternalSyncMode[message.syncMode] : message.syncMode;
                            if (message.skipVerification != null && message.hasOwnProperty("skipVerification"))
                                object.skipVerification = message.skipVerification;
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesStartExternalSyncRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesStartExternalSyncRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesStartExternalSyncRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesStartExternalSyncRequest;
                    })();
    
                    v1beta4.SqlOperationsGetRequest = (function() {
    
                        /**
                         * Properties of a SqlOperationsGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlOperationsGetRequest
                         * @property {string|null} [operation] SqlOperationsGetRequest operation
                         * @property {string|null} [project] SqlOperationsGetRequest project
                         */
    
                        /**
                         * Constructs a new SqlOperationsGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlOperationsGetRequest.
                         * @implements ISqlOperationsGetRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsGetRequest=} [properties] Properties to set
                         */
                        function SqlOperationsGetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlOperationsGetRequest operation.
                         * @member {string} operation
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @instance
                         */
                        SqlOperationsGetRequest.prototype.operation = "";
    
                        /**
                         * SqlOperationsGetRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @instance
                         */
                        SqlOperationsGetRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlOperationsGetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsGetRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsGetRequest} SqlOperationsGetRequest instance
                         */
                        SqlOperationsGetRequest.create = function create(properties) {
                            return new SqlOperationsGetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlOperationsGetRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlOperationsGetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsGetRequest} message SqlOperationsGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlOperationsGetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.operation);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlOperationsGetRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlOperationsGetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsGetRequest} message SqlOperationsGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlOperationsGetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlOperationsGetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsGetRequest} SqlOperationsGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlOperationsGetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlOperationsGetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.operation = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlOperationsGetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsGetRequest} SqlOperationsGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlOperationsGetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlOperationsGetRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlOperationsGetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                if (!$util.isString(message.operation))
                                    return "operation: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlOperationsGetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsGetRequest} SqlOperationsGetRequest
                         */
                        SqlOperationsGetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlOperationsGetRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlOperationsGetRequest();
                            if (object.operation != null)
                                message.operation = String(object.operation);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlOperationsGetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlOperationsGetRequest} message SqlOperationsGetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlOperationsGetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.operation = "";
                                object.project = "";
                            }
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                object.operation = message.operation;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlOperationsGetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsGetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlOperationsGetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlOperationsGetRequest;
                    })();
    
                    v1beta4.SqlOperationsListRequest = (function() {
    
                        /**
                         * Properties of a SqlOperationsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlOperationsListRequest
                         * @property {string|null} [instance] SqlOperationsListRequest instance
                         * @property {number|null} [maxResults] SqlOperationsListRequest maxResults
                         * @property {string|null} [pageToken] SqlOperationsListRequest pageToken
                         * @property {string|null} [project] SqlOperationsListRequest project
                         */
    
                        /**
                         * Constructs a new SqlOperationsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlOperationsListRequest.
                         * @implements ISqlOperationsListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsListRequest=} [properties] Properties to set
                         */
                        function SqlOperationsListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlOperationsListRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @instance
                         */
                        SqlOperationsListRequest.prototype.instance = "";
    
                        /**
                         * SqlOperationsListRequest maxResults.
                         * @member {number} maxResults
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @instance
                         */
                        SqlOperationsListRequest.prototype.maxResults = 0;
    
                        /**
                         * SqlOperationsListRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @instance
                         */
                        SqlOperationsListRequest.prototype.pageToken = "";
    
                        /**
                         * SqlOperationsListRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @instance
                         */
                        SqlOperationsListRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlOperationsListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsListRequest} SqlOperationsListRequest instance
                         */
                        SqlOperationsListRequest.create = function create(properties) {
                            return new SqlOperationsListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlOperationsListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlOperationsListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsListRequest} message SqlOperationsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlOperationsListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.maxResults != null && Object.hasOwnProperty.call(message, "maxResults"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxResults);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlOperationsListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlOperationsListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlOperationsListRequest} message SqlOperationsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlOperationsListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlOperationsListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsListRequest} SqlOperationsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlOperationsListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlOperationsListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.maxResults = reader.uint32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlOperationsListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsListRequest} SqlOperationsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlOperationsListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlOperationsListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlOperationsListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.maxResults != null && message.hasOwnProperty("maxResults"))
                                if (!$util.isInteger(message.maxResults))
                                    return "maxResults: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlOperationsListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlOperationsListRequest} SqlOperationsListRequest
                         */
                        SqlOperationsListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlOperationsListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlOperationsListRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.maxResults != null)
                                message.maxResults = object.maxResults >>> 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlOperationsListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlOperationsListRequest} message SqlOperationsListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlOperationsListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.maxResults = 0;
                                object.pageToken = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.maxResults != null && message.hasOwnProperty("maxResults"))
                                object.maxResults = message.maxResults;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlOperationsListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlOperationsListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlOperationsListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlOperationsListRequest;
                    })();
    
                    v1beta4.SqlInstancesCreateEphemeralCertRequest = (function() {
    
                        /**
                         * Properties of a SqlInstancesCreateEphemeralCertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesCreateEphemeralCertRequest
                         * @property {string|null} [instance] SqlInstancesCreateEphemeralCertRequest instance
                         * @property {string|null} [project] SqlInstancesCreateEphemeralCertRequest project
                         * @property {google.cloud.sql.v1beta4.ISslCertsCreateEphemeralRequest|null} [body] SqlInstancesCreateEphemeralCertRequest body
                         */
    
                        /**
                         * Constructs a new SqlInstancesCreateEphemeralCertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesCreateEphemeralCertRequest.
                         * @implements ISqlInstancesCreateEphemeralCertRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCreateEphemeralCertRequest=} [properties] Properties to set
                         */
                        function SqlInstancesCreateEphemeralCertRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesCreateEphemeralCertRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @instance
                         */
                        SqlInstancesCreateEphemeralCertRequest.prototype.instance = "";
    
                        /**
                         * SqlInstancesCreateEphemeralCertRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @instance
                         */
                        SqlInstancesCreateEphemeralCertRequest.prototype.project = "";
    
                        /**
                         * SqlInstancesCreateEphemeralCertRequest body.
                         * @member {google.cloud.sql.v1beta4.ISslCertsCreateEphemeralRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @instance
                         */
                        SqlInstancesCreateEphemeralCertRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlInstancesCreateEphemeralCertRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCreateEphemeralCertRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest} SqlInstancesCreateEphemeralCertRequest instance
                         */
                        SqlInstancesCreateEphemeralCertRequest.create = function create(properties) {
                            return new SqlInstancesCreateEphemeralCertRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesCreateEphemeralCertRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCreateEphemeralCertRequest} message SqlInstancesCreateEphemeralCertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesCreateEphemeralCertRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesCreateEphemeralCertRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesCreateEphemeralCertRequest} message SqlInstancesCreateEphemeralCertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesCreateEphemeralCertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesCreateEphemeralCertRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest} SqlInstancesCreateEphemeralCertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesCreateEphemeralCertRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesCreateEphemeralCertRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest} SqlInstancesCreateEphemeralCertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesCreateEphemeralCertRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesCreateEphemeralCertRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesCreateEphemeralCertRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesCreateEphemeralCertRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest} SqlInstancesCreateEphemeralCertRequest
                         */
                        SqlInstancesCreateEphemeralCertRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesCreateEphemeralCertRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest} message SqlInstancesCreateEphemeralCertRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesCreateEphemeralCertRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesCreateEphemeralCertRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesCreateEphemeralCertRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesCreateEphemeralCertRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesCreateEphemeralCertRequest;
                    })();
    
                    v1beta4.SqlSslCertsDeleteRequest = (function() {
    
                        /**
                         * Properties of a SqlSslCertsDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlSslCertsDeleteRequest
                         * @property {string|null} [instance] SqlSslCertsDeleteRequest instance
                         * @property {string|null} [project] SqlSslCertsDeleteRequest project
                         * @property {string|null} [sha1Fingerprint] SqlSslCertsDeleteRequest sha1Fingerprint
                         */
    
                        /**
                         * Constructs a new SqlSslCertsDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlSslCertsDeleteRequest.
                         * @implements ISqlSslCertsDeleteRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsDeleteRequest=} [properties] Properties to set
                         */
                        function SqlSslCertsDeleteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlSslCertsDeleteRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @instance
                         */
                        SqlSslCertsDeleteRequest.prototype.instance = "";
    
                        /**
                         * SqlSslCertsDeleteRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @instance
                         */
                        SqlSslCertsDeleteRequest.prototype.project = "";
    
                        /**
                         * SqlSslCertsDeleteRequest sha1Fingerprint.
                         * @member {string} sha1Fingerprint
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @instance
                         */
                        SqlSslCertsDeleteRequest.prototype.sha1Fingerprint = "";
    
                        /**
                         * Creates a new SqlSslCertsDeleteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsDeleteRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest} SqlSslCertsDeleteRequest instance
                         */
                        SqlSslCertsDeleteRequest.create = function create(properties) {
                            return new SqlSslCertsDeleteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsDeleteRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsDeleteRequest} message SqlSslCertsDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsDeleteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.sha1Fingerprint != null && Object.hasOwnProperty.call(message, "sha1Fingerprint"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.sha1Fingerprint);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsDeleteRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsDeleteRequest} message SqlSslCertsDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsDeleteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlSslCertsDeleteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest} SqlSslCertsDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsDeleteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 3:
                                    message.sha1Fingerprint = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlSslCertsDeleteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest} SqlSslCertsDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsDeleteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlSslCertsDeleteRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlSslCertsDeleteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.sha1Fingerprint != null && message.hasOwnProperty("sha1Fingerprint"))
                                if (!$util.isString(message.sha1Fingerprint))
                                    return "sha1Fingerprint: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlSslCertsDeleteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest} SqlSslCertsDeleteRequest
                         */
                        SqlSslCertsDeleteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.sha1Fingerprint != null)
                                message.sha1Fingerprint = String(object.sha1Fingerprint);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlSslCertsDeleteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest} message SqlSslCertsDeleteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlSslCertsDeleteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.sha1Fingerprint = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.sha1Fingerprint != null && message.hasOwnProperty("sha1Fingerprint"))
                                object.sha1Fingerprint = message.sha1Fingerprint;
                            return object;
                        };
    
                        /**
                         * Converts this SqlSslCertsDeleteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsDeleteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlSslCertsDeleteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlSslCertsDeleteRequest;
                    })();
    
                    v1beta4.SqlSslCertsGetRequest = (function() {
    
                        /**
                         * Properties of a SqlSslCertsGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlSslCertsGetRequest
                         * @property {string|null} [instance] SqlSslCertsGetRequest instance
                         * @property {string|null} [project] SqlSslCertsGetRequest project
                         * @property {string|null} [sha1Fingerprint] SqlSslCertsGetRequest sha1Fingerprint
                         */
    
                        /**
                         * Constructs a new SqlSslCertsGetRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlSslCertsGetRequest.
                         * @implements ISqlSslCertsGetRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsGetRequest=} [properties] Properties to set
                         */
                        function SqlSslCertsGetRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlSslCertsGetRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @instance
                         */
                        SqlSslCertsGetRequest.prototype.instance = "";
    
                        /**
                         * SqlSslCertsGetRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @instance
                         */
                        SqlSslCertsGetRequest.prototype.project = "";
    
                        /**
                         * SqlSslCertsGetRequest sha1Fingerprint.
                         * @member {string} sha1Fingerprint
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @instance
                         */
                        SqlSslCertsGetRequest.prototype.sha1Fingerprint = "";
    
                        /**
                         * Creates a new SqlSslCertsGetRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsGetRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsGetRequest} SqlSslCertsGetRequest instance
                         */
                        SqlSslCertsGetRequest.create = function create(properties) {
                            return new SqlSslCertsGetRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsGetRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsGetRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsGetRequest} message SqlSslCertsGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsGetRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.sha1Fingerprint != null && Object.hasOwnProperty.call(message, "sha1Fingerprint"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.sha1Fingerprint);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsGetRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsGetRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsGetRequest} message SqlSslCertsGetRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsGetRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlSslCertsGetRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsGetRequest} SqlSslCertsGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsGetRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlSslCertsGetRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 3:
                                    message.sha1Fingerprint = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlSslCertsGetRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsGetRequest} SqlSslCertsGetRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsGetRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlSslCertsGetRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlSslCertsGetRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.sha1Fingerprint != null && message.hasOwnProperty("sha1Fingerprint"))
                                if (!$util.isString(message.sha1Fingerprint))
                                    return "sha1Fingerprint: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlSslCertsGetRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsGetRequest} SqlSslCertsGetRequest
                         */
                        SqlSslCertsGetRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlSslCertsGetRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlSslCertsGetRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.sha1Fingerprint != null)
                                message.sha1Fingerprint = String(object.sha1Fingerprint);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlSslCertsGetRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsGetRequest} message SqlSslCertsGetRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlSslCertsGetRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.sha1Fingerprint = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.sha1Fingerprint != null && message.hasOwnProperty("sha1Fingerprint"))
                                object.sha1Fingerprint = message.sha1Fingerprint;
                            return object;
                        };
    
                        /**
                         * Converts this SqlSslCertsGetRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsGetRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlSslCertsGetRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlSslCertsGetRequest;
                    })();
    
                    v1beta4.SqlSslCertsInsertRequest = (function() {
    
                        /**
                         * Properties of a SqlSslCertsInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlSslCertsInsertRequest
                         * @property {string|null} [instance] SqlSslCertsInsertRequest instance
                         * @property {string|null} [project] SqlSslCertsInsertRequest project
                         * @property {google.cloud.sql.v1beta4.ISslCertsInsertRequest|null} [body] SqlSslCertsInsertRequest body
                         */
    
                        /**
                         * Constructs a new SqlSslCertsInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlSslCertsInsertRequest.
                         * @implements ISqlSslCertsInsertRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsInsertRequest=} [properties] Properties to set
                         */
                        function SqlSslCertsInsertRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlSslCertsInsertRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @instance
                         */
                        SqlSslCertsInsertRequest.prototype.instance = "";
    
                        /**
                         * SqlSslCertsInsertRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @instance
                         */
                        SqlSslCertsInsertRequest.prototype.project = "";
    
                        /**
                         * SqlSslCertsInsertRequest body.
                         * @member {google.cloud.sql.v1beta4.ISslCertsInsertRequest|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @instance
                         */
                        SqlSslCertsInsertRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlSslCertsInsertRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsInsertRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsInsertRequest} SqlSslCertsInsertRequest instance
                         */
                        SqlSslCertsInsertRequest.create = function create(properties) {
                            return new SqlSslCertsInsertRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsInsertRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsInsertRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsInsertRequest} message SqlSslCertsInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsInsertRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.SslCertsInsertRequest.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsInsertRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsInsertRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsInsertRequest} message SqlSslCertsInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsInsertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlSslCertsInsertRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsInsertRequest} SqlSslCertsInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsInsertRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlSslCertsInsertRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.SslCertsInsertRequest.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlSslCertsInsertRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsInsertRequest} SqlSslCertsInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsInsertRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlSslCertsInsertRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlSslCertsInsertRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.SslCertsInsertRequest.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlSslCertsInsertRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsInsertRequest} SqlSslCertsInsertRequest
                         */
                        SqlSslCertsInsertRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlSslCertsInsertRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlSslCertsInsertRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlSslCertsInsertRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.SslCertsInsertRequest.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlSslCertsInsertRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsInsertRequest} message SqlSslCertsInsertRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlSslCertsInsertRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.SslCertsInsertRequest.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlSslCertsInsertRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsInsertRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlSslCertsInsertRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlSslCertsInsertRequest;
                    })();
    
                    v1beta4.SqlSslCertsListRequest = (function() {
    
                        /**
                         * Properties of a SqlSslCertsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlSslCertsListRequest
                         * @property {string|null} [instance] SqlSslCertsListRequest instance
                         * @property {string|null} [project] SqlSslCertsListRequest project
                         */
    
                        /**
                         * Constructs a new SqlSslCertsListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlSslCertsListRequest.
                         * @implements ISqlSslCertsListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsListRequest=} [properties] Properties to set
                         */
                        function SqlSslCertsListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlSslCertsListRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @instance
                         */
                        SqlSslCertsListRequest.prototype.instance = "";
    
                        /**
                         * SqlSslCertsListRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @instance
                         */
                        SqlSslCertsListRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlSslCertsListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsListRequest} SqlSslCertsListRequest instance
                         */
                        SqlSslCertsListRequest.create = function create(properties) {
                            return new SqlSslCertsListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsListRequest} message SqlSslCertsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlSslCertsListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlSslCertsListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlSslCertsListRequest} message SqlSslCertsListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlSslCertsListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlSslCertsListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsListRequest} SqlSslCertsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlSslCertsListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlSslCertsListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsListRequest} SqlSslCertsListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlSslCertsListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlSslCertsListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlSslCertsListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlSslCertsListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlSslCertsListRequest} SqlSslCertsListRequest
                         */
                        SqlSslCertsListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlSslCertsListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlSslCertsListRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlSslCertsListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlSslCertsListRequest} message SqlSslCertsListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlSslCertsListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlSslCertsListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlSslCertsListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlSslCertsListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlSslCertsListRequest;
                    })();
    
                    v1beta4.AclEntry = (function() {
    
                        /**
                         * Properties of an AclEntry.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IAclEntry
                         * @property {string|null} [value] AclEntry value
                         * @property {google.protobuf.ITimestamp|null} [expirationTime] AclEntry expirationTime
                         * @property {string|null} [name] AclEntry name
                         * @property {string|null} [kind] AclEntry kind
                         */
    
                        /**
                         * Constructs a new AclEntry.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an AclEntry.
                         * @implements IAclEntry
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IAclEntry=} [properties] Properties to set
                         */
                        function AclEntry(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AclEntry value.
                         * @member {string} value
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @instance
                         */
                        AclEntry.prototype.value = "";
    
                        /**
                         * AclEntry expirationTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expirationTime
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @instance
                         */
                        AclEntry.prototype.expirationTime = null;
    
                        /**
                         * AclEntry name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @instance
                         */
                        AclEntry.prototype.name = "";
    
                        /**
                         * AclEntry kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @instance
                         */
                        AclEntry.prototype.kind = "";
    
                        /**
                         * Creates a new AclEntry instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {google.cloud.sql.v1beta4.IAclEntry=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.AclEntry} AclEntry instance
                         */
                        AclEntry.create = function create(properties) {
                            return new AclEntry(properties);
                        };
    
                        /**
                         * Encodes the specified AclEntry message. Does not implicitly {@link google.cloud.sql.v1beta4.AclEntry.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {google.cloud.sql.v1beta4.IAclEntry} message AclEntry message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AclEntry.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                            if (message.expirationTime != null && Object.hasOwnProperty.call(message, "expirationTime"))
                                $root.google.protobuf.Timestamp.encode(message.expirationTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AclEntry message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.AclEntry.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {google.cloud.sql.v1beta4.IAclEntry} message AclEntry message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AclEntry.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AclEntry message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.AclEntry} AclEntry
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AclEntry.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.AclEntry();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.value = reader.string();
                                    break;
                                case 2:
                                    message.expirationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.name = reader.string();
                                    break;
                                case 4:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AclEntry message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.AclEntry} AclEntry
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AclEntry.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AclEntry message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AclEntry.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            if (message.expirationTime != null && message.hasOwnProperty("expirationTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expirationTime);
                                if (error)
                                    return "expirationTime." + error;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AclEntry message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.AclEntry} AclEntry
                         */
                        AclEntry.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.AclEntry)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.AclEntry();
                            if (object.value != null)
                                message.value = String(object.value);
                            if (object.expirationTime != null) {
                                if (typeof object.expirationTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.AclEntry.expirationTime: object expected");
                                message.expirationTime = $root.google.protobuf.Timestamp.fromObject(object.expirationTime);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AclEntry message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @static
                         * @param {google.cloud.sql.v1beta4.AclEntry} message AclEntry
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AclEntry.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.value = "";
                                object.expirationTime = null;
                                object.name = "";
                                object.kind = "";
                            }
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            if (message.expirationTime != null && message.hasOwnProperty("expirationTime"))
                                object.expirationTime = $root.google.protobuf.Timestamp.toObject(message.expirationTime, options);
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this AclEntry to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.AclEntry
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AclEntry.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return AclEntry;
                    })();
    
                    v1beta4.ApiWarning = (function() {
    
                        /**
                         * Properties of an ApiWarning.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IApiWarning
                         * @property {google.cloud.sql.v1beta4.ApiWarning.SqlApiWarningCode|null} [code] ApiWarning code
                         * @property {string|null} [message] ApiWarning message
                         * @property {string|null} [region] ApiWarning region
                         */
    
                        /**
                         * Constructs a new ApiWarning.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an ApiWarning.
                         * @implements IApiWarning
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IApiWarning=} [properties] Properties to set
                         */
                        function ApiWarning(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ApiWarning code.
                         * @member {google.cloud.sql.v1beta4.ApiWarning.SqlApiWarningCode} code
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @instance
                         */
                        ApiWarning.prototype.code = 0;
    
                        /**
                         * ApiWarning message.
                         * @member {string} message
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @instance
                         */
                        ApiWarning.prototype.message = "";
    
                        /**
                         * ApiWarning region.
                         * @member {string} region
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @instance
                         */
                        ApiWarning.prototype.region = "";
    
                        /**
                         * Creates a new ApiWarning instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {google.cloud.sql.v1beta4.IApiWarning=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.ApiWarning} ApiWarning instance
                         */
                        ApiWarning.create = function create(properties) {
                            return new ApiWarning(properties);
                        };
    
                        /**
                         * Encodes the specified ApiWarning message. Does not implicitly {@link google.cloud.sql.v1beta4.ApiWarning.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {google.cloud.sql.v1beta4.IApiWarning} message ApiWarning message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApiWarning.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ApiWarning message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ApiWarning.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {google.cloud.sql.v1beta4.IApiWarning} message ApiWarning message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApiWarning.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ApiWarning message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.ApiWarning} ApiWarning
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApiWarning.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ApiWarning();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.code = reader.int32();
                                    break;
                                case 2:
                                    message.message = reader.string();
                                    break;
                                case 3:
                                    message.region = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ApiWarning message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.ApiWarning} ApiWarning
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApiWarning.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ApiWarning message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApiWarning.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                switch (message.code) {
                                default:
                                    return "code: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ApiWarning message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.ApiWarning} ApiWarning
                         */
                        ApiWarning.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.ApiWarning)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.ApiWarning();
                            switch (object.code) {
                            case "SQL_API_WARNING_CODE_UNSPECIFIED":
                            case 0:
                                message.code = 0;
                                break;
                            case "REGION_UNREACHABLE":
                            case 1:
                                message.code = 1;
                                break;
                            }
                            if (object.message != null)
                                message.message = String(object.message);
                            if (object.region != null)
                                message.region = String(object.region);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ApiWarning message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @static
                         * @param {google.cloud.sql.v1beta4.ApiWarning} message ApiWarning
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApiWarning.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.code = options.enums === String ? "SQL_API_WARNING_CODE_UNSPECIFIED" : 0;
                                object.message = "";
                                object.region = "";
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = options.enums === String ? $root.google.cloud.sql.v1beta4.ApiWarning.SqlApiWarningCode[message.code] : message.code;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            return object;
                        };
    
                        /**
                         * Converts this ApiWarning to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.ApiWarning
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApiWarning.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * SqlApiWarningCode enum.
                         * @name google.cloud.sql.v1beta4.ApiWarning.SqlApiWarningCode
                         * @enum {number}
                         * @property {number} SQL_API_WARNING_CODE_UNSPECIFIED=0 SQL_API_WARNING_CODE_UNSPECIFIED value
                         * @property {number} REGION_UNREACHABLE=1 REGION_UNREACHABLE value
                         */
                        ApiWarning.SqlApiWarningCode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SQL_API_WARNING_CODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "REGION_UNREACHABLE"] = 1;
                            return values;
                        })();
    
                        return ApiWarning;
                    })();
    
                    v1beta4.BackupRetentionSettings = (function() {
    
                        /**
                         * Properties of a BackupRetentionSettings.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IBackupRetentionSettings
                         * @property {google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit|null} [retentionUnit] BackupRetentionSettings retentionUnit
                         * @property {google.protobuf.IInt32Value|null} [retainedBackups] BackupRetentionSettings retainedBackups
                         */
    
                        /**
                         * Constructs a new BackupRetentionSettings.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a BackupRetentionSettings.
                         * @implements IBackupRetentionSettings
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IBackupRetentionSettings=} [properties] Properties to set
                         */
                        function BackupRetentionSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackupRetentionSettings retentionUnit.
                         * @member {google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit} retentionUnit
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @instance
                         */
                        BackupRetentionSettings.prototype.retentionUnit = 0;
    
                        /**
                         * BackupRetentionSettings retainedBackups.
                         * @member {google.protobuf.IInt32Value|null|undefined} retainedBackups
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @instance
                         */
                        BackupRetentionSettings.prototype.retainedBackups = null;
    
                        /**
                         * Creates a new BackupRetentionSettings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRetentionSettings=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.BackupRetentionSettings} BackupRetentionSettings instance
                         */
                        BackupRetentionSettings.create = function create(properties) {
                            return new BackupRetentionSettings(properties);
                        };
    
                        /**
                         * Encodes the specified BackupRetentionSettings message. Does not implicitly {@link google.cloud.sql.v1beta4.BackupRetentionSettings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRetentionSettings} message BackupRetentionSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupRetentionSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.retentionUnit != null && Object.hasOwnProperty.call(message, "retentionUnit"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.retentionUnit);
                            if (message.retainedBackups != null && Object.hasOwnProperty.call(message, "retainedBackups"))
                                $root.google.protobuf.Int32Value.encode(message.retainedBackups, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackupRetentionSettings message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.BackupRetentionSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRetentionSettings} message BackupRetentionSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupRetentionSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackupRetentionSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.BackupRetentionSettings} BackupRetentionSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupRetentionSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.BackupRetentionSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.retentionUnit = reader.int32();
                                    break;
                                case 2:
                                    message.retainedBackups = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackupRetentionSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.BackupRetentionSettings} BackupRetentionSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupRetentionSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackupRetentionSettings message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackupRetentionSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.retentionUnit != null && message.hasOwnProperty("retentionUnit"))
                                switch (message.retentionUnit) {
                                default:
                                    return "retentionUnit: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.retainedBackups != null && message.hasOwnProperty("retainedBackups")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.retainedBackups);
                                if (error)
                                    return "retainedBackups." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BackupRetentionSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.BackupRetentionSettings} BackupRetentionSettings
                         */
                        BackupRetentionSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.BackupRetentionSettings)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.BackupRetentionSettings();
                            switch (object.retentionUnit) {
                            case "RETENTION_UNIT_UNSPECIFIED":
                            case 0:
                                message.retentionUnit = 0;
                                break;
                            case "COUNT":
                            case 1:
                                message.retentionUnit = 1;
                                break;
                            }
                            if (object.retainedBackups != null) {
                                if (typeof object.retainedBackups !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRetentionSettings.retainedBackups: object expected");
                                message.retainedBackups = $root.google.protobuf.Int32Value.fromObject(object.retainedBackups);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackupRetentionSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @static
                         * @param {google.cloud.sql.v1beta4.BackupRetentionSettings} message BackupRetentionSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackupRetentionSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.retentionUnit = options.enums === String ? "RETENTION_UNIT_UNSPECIFIED" : 0;
                                object.retainedBackups = null;
                            }
                            if (message.retentionUnit != null && message.hasOwnProperty("retentionUnit"))
                                object.retentionUnit = options.enums === String ? $root.google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit[message.retentionUnit] : message.retentionUnit;
                            if (message.retainedBackups != null && message.hasOwnProperty("retainedBackups"))
                                object.retainedBackups = $root.google.protobuf.Int32Value.toObject(message.retainedBackups, options);
                            return object;
                        };
    
                        /**
                         * Converts this BackupRetentionSettings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.BackupRetentionSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackupRetentionSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * RetentionUnit enum.
                         * @name google.cloud.sql.v1beta4.BackupRetentionSettings.RetentionUnit
                         * @enum {number}
                         * @property {number} RETENTION_UNIT_UNSPECIFIED=0 RETENTION_UNIT_UNSPECIFIED value
                         * @property {number} COUNT=1 COUNT value
                         */
                        BackupRetentionSettings.RetentionUnit = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RETENTION_UNIT_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "COUNT"] = 1;
                            return values;
                        })();
    
                        return BackupRetentionSettings;
                    })();
    
                    v1beta4.BackupConfiguration = (function() {
    
                        /**
                         * Properties of a BackupConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IBackupConfiguration
                         * @property {string|null} [startTime] BackupConfiguration startTime
                         * @property {google.protobuf.IBoolValue|null} [enabled] BackupConfiguration enabled
                         * @property {string|null} [kind] BackupConfiguration kind
                         * @property {google.protobuf.IBoolValue|null} [binaryLogEnabled] BackupConfiguration binaryLogEnabled
                         * @property {google.protobuf.IBoolValue|null} [replicationLogArchivingEnabled] BackupConfiguration replicationLogArchivingEnabled
                         * @property {string|null} [location] BackupConfiguration location
                         * @property {google.protobuf.IBoolValue|null} [pointInTimeRecoveryEnabled] BackupConfiguration pointInTimeRecoveryEnabled
                         * @property {google.protobuf.IInt32Value|null} [transactionLogRetentionDays] BackupConfiguration transactionLogRetentionDays
                         * @property {google.cloud.sql.v1beta4.IBackupRetentionSettings|null} [backupRetentionSettings] BackupConfiguration backupRetentionSettings
                         */
    
                        /**
                         * Constructs a new BackupConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a BackupConfiguration.
                         * @implements IBackupConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IBackupConfiguration=} [properties] Properties to set
                         */
                        function BackupConfiguration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackupConfiguration startTime.
                         * @member {string} startTime
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.startTime = "";
    
                        /**
                         * BackupConfiguration enabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} enabled
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.enabled = null;
    
                        /**
                         * BackupConfiguration kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.kind = "";
    
                        /**
                         * BackupConfiguration binaryLogEnabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} binaryLogEnabled
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.binaryLogEnabled = null;
    
                        /**
                         * BackupConfiguration replicationLogArchivingEnabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} replicationLogArchivingEnabled
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.replicationLogArchivingEnabled = null;
    
                        /**
                         * BackupConfiguration location.
                         * @member {string} location
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.location = "";
    
                        /**
                         * BackupConfiguration pointInTimeRecoveryEnabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} pointInTimeRecoveryEnabled
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.pointInTimeRecoveryEnabled = null;
    
                        /**
                         * BackupConfiguration transactionLogRetentionDays.
                         * @member {google.protobuf.IInt32Value|null|undefined} transactionLogRetentionDays
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.transactionLogRetentionDays = null;
    
                        /**
                         * BackupConfiguration backupRetentionSettings.
                         * @member {google.cloud.sql.v1beta4.IBackupRetentionSettings|null|undefined} backupRetentionSettings
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         */
                        BackupConfiguration.prototype.backupRetentionSettings = null;
    
                        /**
                         * Creates a new BackupConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.BackupConfiguration} BackupConfiguration instance
                         */
                        BackupConfiguration.create = function create(properties) {
                            return new BackupConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified BackupConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.BackupConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupConfiguration} message BackupConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.startTime);
                            if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                $root.google.protobuf.BoolValue.encode(message.enabled, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                            if (message.binaryLogEnabled != null && Object.hasOwnProperty.call(message, "binaryLogEnabled"))
                                $root.google.protobuf.BoolValue.encode(message.binaryLogEnabled, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.replicationLogArchivingEnabled != null && Object.hasOwnProperty.call(message, "replicationLogArchivingEnabled"))
                                $root.google.protobuf.BoolValue.encode(message.replicationLogArchivingEnabled, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.location);
                            if (message.pointInTimeRecoveryEnabled != null && Object.hasOwnProperty.call(message, "pointInTimeRecoveryEnabled"))
                                $root.google.protobuf.BoolValue.encode(message.pointInTimeRecoveryEnabled, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.transactionLogRetentionDays != null && Object.hasOwnProperty.call(message, "transactionLogRetentionDays"))
                                $root.google.protobuf.Int32Value.encode(message.transactionLogRetentionDays, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.backupRetentionSettings != null && Object.hasOwnProperty.call(message, "backupRetentionSettings"))
                                $root.google.cloud.sql.v1beta4.BackupRetentionSettings.encode(message.backupRetentionSettings, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackupConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.BackupConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupConfiguration} message BackupConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackupConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.BackupConfiguration} BackupConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.BackupConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.startTime = reader.string();
                                    break;
                                case 2:
                                    message.enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.kind = reader.string();
                                    break;
                                case 4:
                                    message.binaryLogEnabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.replicationLogArchivingEnabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.location = reader.string();
                                    break;
                                case 7:
                                    message.pointInTimeRecoveryEnabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.transactionLogRetentionDays = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.backupRetentionSettings = $root.google.cloud.sql.v1beta4.BackupRetentionSettings.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackupConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.BackupConfiguration} BackupConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackupConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackupConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                if (!$util.isString(message.startTime))
                                    return "startTime: string expected";
                            if (message.enabled != null && message.hasOwnProperty("enabled")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.enabled);
                                if (error)
                                    return "enabled." + error;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.binaryLogEnabled != null && message.hasOwnProperty("binaryLogEnabled")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.binaryLogEnabled);
                                if (error)
                                    return "binaryLogEnabled." + error;
                            }
                            if (message.replicationLogArchivingEnabled != null && message.hasOwnProperty("replicationLogArchivingEnabled")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.replicationLogArchivingEnabled);
                                if (error)
                                    return "replicationLogArchivingEnabled." + error;
                            }
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            if (message.pointInTimeRecoveryEnabled != null && message.hasOwnProperty("pointInTimeRecoveryEnabled")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.pointInTimeRecoveryEnabled);
                                if (error)
                                    return "pointInTimeRecoveryEnabled." + error;
                            }
                            if (message.transactionLogRetentionDays != null && message.hasOwnProperty("transactionLogRetentionDays")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.transactionLogRetentionDays);
                                if (error)
                                    return "transactionLogRetentionDays." + error;
                            }
                            if (message.backupRetentionSettings != null && message.hasOwnProperty("backupRetentionSettings")) {
                                var error = $root.google.cloud.sql.v1beta4.BackupRetentionSettings.verify(message.backupRetentionSettings);
                                if (error)
                                    return "backupRetentionSettings." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BackupConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.BackupConfiguration} BackupConfiguration
                         */
                        BackupConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.BackupConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.BackupConfiguration();
                            if (object.startTime != null)
                                message.startTime = String(object.startTime);
                            if (object.enabled != null) {
                                if (typeof object.enabled !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupConfiguration.enabled: object expected");
                                message.enabled = $root.google.protobuf.BoolValue.fromObject(object.enabled);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.binaryLogEnabled != null) {
                                if (typeof object.binaryLogEnabled !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupConfiguration.binaryLogEnabled: object expected");
                                message.binaryLogEnabled = $root.google.protobuf.BoolValue.fromObject(object.binaryLogEnabled);
                            }
                            if (object.replicationLogArchivingEnabled != null) {
                                if (typeof object.replicationLogArchivingEnabled !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupConfiguration.replicationLogArchivingEnabled: object expected");
                                message.replicationLogArchivingEnabled = $root.google.protobuf.BoolValue.fromObject(object.replicationLogArchivingEnabled);
                            }
                            if (object.location != null)
                                message.location = String(object.location);
                            if (object.pointInTimeRecoveryEnabled != null) {
                                if (typeof object.pointInTimeRecoveryEnabled !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupConfiguration.pointInTimeRecoveryEnabled: object expected");
                                message.pointInTimeRecoveryEnabled = $root.google.protobuf.BoolValue.fromObject(object.pointInTimeRecoveryEnabled);
                            }
                            if (object.transactionLogRetentionDays != null) {
                                if (typeof object.transactionLogRetentionDays !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupConfiguration.transactionLogRetentionDays: object expected");
                                message.transactionLogRetentionDays = $root.google.protobuf.Int32Value.fromObject(object.transactionLogRetentionDays);
                            }
                            if (object.backupRetentionSettings != null) {
                                if (typeof object.backupRetentionSettings !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupConfiguration.backupRetentionSettings: object expected");
                                message.backupRetentionSettings = $root.google.cloud.sql.v1beta4.BackupRetentionSettings.fromObject(object.backupRetentionSettings);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackupConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.BackupConfiguration} message BackupConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackupConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startTime = "";
                                object.enabled = null;
                                object.kind = "";
                                object.binaryLogEnabled = null;
                                object.replicationLogArchivingEnabled = null;
                                object.location = "";
                                object.pointInTimeRecoveryEnabled = null;
                                object.transactionLogRetentionDays = null;
                                object.backupRetentionSettings = null;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = message.startTime;
                            if (message.enabled != null && message.hasOwnProperty("enabled"))
                                object.enabled = $root.google.protobuf.BoolValue.toObject(message.enabled, options);
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.binaryLogEnabled != null && message.hasOwnProperty("binaryLogEnabled"))
                                object.binaryLogEnabled = $root.google.protobuf.BoolValue.toObject(message.binaryLogEnabled, options);
                            if (message.replicationLogArchivingEnabled != null && message.hasOwnProperty("replicationLogArchivingEnabled"))
                                object.replicationLogArchivingEnabled = $root.google.protobuf.BoolValue.toObject(message.replicationLogArchivingEnabled, options);
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            if (message.pointInTimeRecoveryEnabled != null && message.hasOwnProperty("pointInTimeRecoveryEnabled"))
                                object.pointInTimeRecoveryEnabled = $root.google.protobuf.BoolValue.toObject(message.pointInTimeRecoveryEnabled, options);
                            if (message.transactionLogRetentionDays != null && message.hasOwnProperty("transactionLogRetentionDays"))
                                object.transactionLogRetentionDays = $root.google.protobuf.Int32Value.toObject(message.transactionLogRetentionDays, options);
                            if (message.backupRetentionSettings != null && message.hasOwnProperty("backupRetentionSettings"))
                                object.backupRetentionSettings = $root.google.cloud.sql.v1beta4.BackupRetentionSettings.toObject(message.backupRetentionSettings, options);
                            return object;
                        };
    
                        /**
                         * Converts this BackupConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.BackupConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackupConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BackupConfiguration;
                    })();
    
                    v1beta4.BackupRun = (function() {
    
                        /**
                         * Properties of a BackupRun.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IBackupRun
                         * @property {string|null} [kind] BackupRun kind
                         * @property {google.cloud.sql.v1beta4.SqlBackupRunStatus|null} [status] BackupRun status
                         * @property {google.protobuf.ITimestamp|null} [enqueuedTime] BackupRun enqueuedTime
                         * @property {number|Long|null} [id] BackupRun id
                         * @property {google.protobuf.ITimestamp|null} [startTime] BackupRun startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] BackupRun endTime
                         * @property {google.cloud.sql.v1beta4.IOperationError|null} [error] BackupRun error
                         * @property {google.cloud.sql.v1beta4.SqlBackupRunType|null} [type] BackupRun type
                         * @property {string|null} [description] BackupRun description
                         * @property {google.protobuf.ITimestamp|null} [windowStartTime] BackupRun windowStartTime
                         * @property {string|null} [instance] BackupRun instance
                         * @property {string|null} [selfLink] BackupRun selfLink
                         * @property {string|null} [location] BackupRun location
                         * @property {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration|null} [diskEncryptionConfiguration] BackupRun diskEncryptionConfiguration
                         * @property {google.cloud.sql.v1beta4.IDiskEncryptionStatus|null} [diskEncryptionStatus] BackupRun diskEncryptionStatus
                         * @property {google.cloud.sql.v1beta4.SqlBackupKind|null} [backupKind] BackupRun backupKind
                         */
    
                        /**
                         * Constructs a new BackupRun.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a BackupRun.
                         * @implements IBackupRun
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IBackupRun=} [properties] Properties to set
                         */
                        function BackupRun(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackupRun kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.kind = "";
    
                        /**
                         * BackupRun status.
                         * @member {google.cloud.sql.v1beta4.SqlBackupRunStatus} status
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.status = 0;
    
                        /**
                         * BackupRun enqueuedTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} enqueuedTime
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.enqueuedTime = null;
    
                        /**
                         * BackupRun id.
                         * @member {number|Long} id
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * BackupRun startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.startTime = null;
    
                        /**
                         * BackupRun endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.endTime = null;
    
                        /**
                         * BackupRun error.
                         * @member {google.cloud.sql.v1beta4.IOperationError|null|undefined} error
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.error = null;
    
                        /**
                         * BackupRun type.
                         * @member {google.cloud.sql.v1beta4.SqlBackupRunType} type
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.type = 0;
    
                        /**
                         * BackupRun description.
                         * @member {string} description
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.description = "";
    
                        /**
                         * BackupRun windowStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} windowStartTime
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.windowStartTime = null;
    
                        /**
                         * BackupRun instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.instance = "";
    
                        /**
                         * BackupRun selfLink.
                         * @member {string} selfLink
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.selfLink = "";
    
                        /**
                         * BackupRun location.
                         * @member {string} location
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.location = "";
    
                        /**
                         * BackupRun diskEncryptionConfiguration.
                         * @member {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration|null|undefined} diskEncryptionConfiguration
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.diskEncryptionConfiguration = null;
    
                        /**
                         * BackupRun diskEncryptionStatus.
                         * @member {google.cloud.sql.v1beta4.IDiskEncryptionStatus|null|undefined} diskEncryptionStatus
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.diskEncryptionStatus = null;
    
                        /**
                         * BackupRun backupKind.
                         * @member {google.cloud.sql.v1beta4.SqlBackupKind} backupKind
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         */
                        BackupRun.prototype.backupKind = 0;
    
                        /**
                         * Creates a new BackupRun instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRun=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.BackupRun} BackupRun instance
                         */
                        BackupRun.create = function create(properties) {
                            return new BackupRun(properties);
                        };
    
                        /**
                         * Encodes the specified BackupRun message. Does not implicitly {@link google.cloud.sql.v1beta4.BackupRun.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRun} message BackupRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupRun.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.status);
                            if (message.enqueuedTime != null && Object.hasOwnProperty.call(message, "enqueuedTime"))
                                $root.google.protobuf.Timestamp.encode(message.enqueuedTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.id);
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.cloud.sql.v1beta4.OperationError.encode(message.error, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.type);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.description);
                            if (message.windowStartTime != null && Object.hasOwnProperty.call(message, "windowStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.windowStartTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.instance);
                            if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.selfLink);
                            if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.location);
                            if (message.diskEncryptionConfiguration != null && Object.hasOwnProperty.call(message, "diskEncryptionConfiguration"))
                                $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.encode(message.diskEncryptionConfiguration, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.diskEncryptionStatus != null && Object.hasOwnProperty.call(message, "diskEncryptionStatus"))
                                $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.encode(message.diskEncryptionStatus, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.backupKind != null && Object.hasOwnProperty.call(message, "backupKind"))
                                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.backupKind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackupRun message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.BackupRun.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRun} message BackupRun message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupRun.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackupRun message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.BackupRun} BackupRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupRun.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.BackupRun();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.status = reader.int32();
                                    break;
                                case 3:
                                    message.enqueuedTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.id = reader.int64();
                                    break;
                                case 5:
                                    message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.error = $root.google.cloud.sql.v1beta4.OperationError.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.type = reader.int32();
                                    break;
                                case 9:
                                    message.description = reader.string();
                                    break;
                                case 10:
                                    message.windowStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    message.instance = reader.string();
                                    break;
                                case 12:
                                    message.selfLink = reader.string();
                                    break;
                                case 13:
                                    message.location = reader.string();
                                    break;
                                case 16:
                                    message.diskEncryptionConfiguration = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.decode(reader, reader.uint32());
                                    break;
                                case 17:
                                    message.diskEncryptionStatus = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.decode(reader, reader.uint32());
                                    break;
                                case 19:
                                    message.backupKind = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackupRun message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.BackupRun} BackupRun
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupRun.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackupRun message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackupRun.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.status != null && message.hasOwnProperty("status"))
                                switch (message.status) {
                                default:
                                    return "status: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                    break;
                                }
                            if (message.enqueuedTime != null && message.hasOwnProperty("enqueuedTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.enqueuedTime);
                                if (error)
                                    return "enqueuedTime." + error;
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                                    return "id: integer|Long expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.cloud.sql.v1beta4.OperationError.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.windowStartTime != null && message.hasOwnProperty("windowStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.windowStartTime);
                                if (error)
                                    return "windowStartTime." + error;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                if (!$util.isString(message.selfLink))
                                    return "selfLink: string expected";
                            if (message.location != null && message.hasOwnProperty("location"))
                                if (!$util.isString(message.location))
                                    return "location: string expected";
                            if (message.diskEncryptionConfiguration != null && message.hasOwnProperty("diskEncryptionConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.verify(message.diskEncryptionConfiguration);
                                if (error)
                                    return "diskEncryptionConfiguration." + error;
                            }
                            if (message.diskEncryptionStatus != null && message.hasOwnProperty("diskEncryptionStatus")) {
                                var error = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.verify(message.diskEncryptionStatus);
                                if (error)
                                    return "diskEncryptionStatus." + error;
                            }
                            if (message.backupKind != null && message.hasOwnProperty("backupKind"))
                                switch (message.backupKind) {
                                default:
                                    return "backupKind: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a BackupRun message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.BackupRun} BackupRun
                         */
                        BackupRun.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.BackupRun)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.BackupRun();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            switch (object.status) {
                            case "SQL_BACKUP_RUN_STATUS_UNSPECIFIED":
                            case 0:
                                message.status = 0;
                                break;
                            case "ENQUEUED":
                            case 1:
                                message.status = 1;
                                break;
                            case "OVERDUE":
                            case 2:
                                message.status = 2;
                                break;
                            case "RUNNING":
                            case 3:
                                message.status = 3;
                                break;
                            case "FAILED":
                            case 4:
                                message.status = 4;
                                break;
                            case "SUCCESSFUL":
                            case 5:
                                message.status = 5;
                                break;
                            case "SKIPPED":
                            case 6:
                                message.status = 6;
                                break;
                            case "DELETION_PENDING":
                            case 7:
                                message.status = 7;
                                break;
                            case "DELETION_FAILED":
                            case 8:
                                message.status = 8;
                                break;
                            case "DELETED":
                            case 9:
                                message.status = 9;
                                break;
                            }
                            if (object.enqueuedTime != null) {
                                if (typeof object.enqueuedTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRun.enqueuedTime: object expected");
                                message.enqueuedTime = $root.google.protobuf.Timestamp.fromObject(object.enqueuedTime);
                            }
                            if (object.id != null)
                                if ($util.Long)
                                    (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                                else if (typeof object.id === "string")
                                    message.id = parseInt(object.id, 10);
                                else if (typeof object.id === "number")
                                    message.id = object.id;
                                else if (typeof object.id === "object")
                                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRun.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRun.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRun.error: object expected");
                                message.error = $root.google.cloud.sql.v1beta4.OperationError.fromObject(object.error);
                            }
                            switch (object.type) {
                            case "SQL_BACKUP_RUN_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "AUTOMATED":
                            case 1:
                                message.type = 1;
                                break;
                            case "ON_DEMAND":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.windowStartTime != null) {
                                if (typeof object.windowStartTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRun.windowStartTime: object expected");
                                message.windowStartTime = $root.google.protobuf.Timestamp.fromObject(object.windowStartTime);
                            }
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.selfLink != null)
                                message.selfLink = String(object.selfLink);
                            if (object.location != null)
                                message.location = String(object.location);
                            if (object.diskEncryptionConfiguration != null) {
                                if (typeof object.diskEncryptionConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRun.diskEncryptionConfiguration: object expected");
                                message.diskEncryptionConfiguration = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.fromObject(object.diskEncryptionConfiguration);
                            }
                            if (object.diskEncryptionStatus != null) {
                                if (typeof object.diskEncryptionStatus !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRun.diskEncryptionStatus: object expected");
                                message.diskEncryptionStatus = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.fromObject(object.diskEncryptionStatus);
                            }
                            switch (object.backupKind) {
                            case "SQL_BACKUP_KIND_UNSPECIFIED":
                            case 0:
                                message.backupKind = 0;
                                break;
                            case "SNAPSHOT":
                            case 1:
                                message.backupKind = 1;
                                break;
                            case "PHYSICAL":
                            case 2:
                                message.backupKind = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackupRun message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @static
                         * @param {google.cloud.sql.v1beta4.BackupRun} message BackupRun
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackupRun.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.status = options.enums === String ? "SQL_BACKUP_RUN_STATUS_UNSPECIFIED" : 0;
                                object.enqueuedTime = null;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.id = options.longs === String ? "0" : 0;
                                object.startTime = null;
                                object.endTime = null;
                                object.error = null;
                                object.type = options.enums === String ? "SQL_BACKUP_RUN_TYPE_UNSPECIFIED" : 0;
                                object.description = "";
                                object.windowStartTime = null;
                                object.instance = "";
                                object.selfLink = "";
                                object.location = "";
                                object.diskEncryptionConfiguration = null;
                                object.diskEncryptionStatus = null;
                                object.backupKind = options.enums === String ? "SQL_BACKUP_KIND_UNSPECIFIED" : 0;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlBackupRunStatus[message.status] : message.status;
                            if (message.enqueuedTime != null && message.hasOwnProperty("enqueuedTime"))
                                object.enqueuedTime = $root.google.protobuf.Timestamp.toObject(message.enqueuedTime, options);
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (typeof message.id === "number")
                                    object.id = options.longs === String ? String(message.id) : message.id;
                                else
                                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.cloud.sql.v1beta4.OperationError.toObject(message.error, options);
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlBackupRunType[message.type] : message.type;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.windowStartTime != null && message.hasOwnProperty("windowStartTime"))
                                object.windowStartTime = $root.google.protobuf.Timestamp.toObject(message.windowStartTime, options);
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                object.selfLink = message.selfLink;
                            if (message.location != null && message.hasOwnProperty("location"))
                                object.location = message.location;
                            if (message.diskEncryptionConfiguration != null && message.hasOwnProperty("diskEncryptionConfiguration"))
                                object.diskEncryptionConfiguration = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.toObject(message.diskEncryptionConfiguration, options);
                            if (message.diskEncryptionStatus != null && message.hasOwnProperty("diskEncryptionStatus"))
                                object.diskEncryptionStatus = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.toObject(message.diskEncryptionStatus, options);
                            if (message.backupKind != null && message.hasOwnProperty("backupKind"))
                                object.backupKind = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlBackupKind[message.backupKind] : message.backupKind;
                            return object;
                        };
    
                        /**
                         * Converts this BackupRun to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.BackupRun
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackupRun.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BackupRun;
                    })();
    
                    v1beta4.BackupRunsListResponse = (function() {
    
                        /**
                         * Properties of a BackupRunsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IBackupRunsListResponse
                         * @property {string|null} [kind] BackupRunsListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.IBackupRun>|null} [items] BackupRunsListResponse items
                         * @property {string|null} [nextPageToken] BackupRunsListResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new BackupRunsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a BackupRunsListResponse.
                         * @implements IBackupRunsListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IBackupRunsListResponse=} [properties] Properties to set
                         */
                        function BackupRunsListResponse(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackupRunsListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @instance
                         */
                        BackupRunsListResponse.prototype.kind = "";
    
                        /**
                         * BackupRunsListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.IBackupRun>} items
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @instance
                         */
                        BackupRunsListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * BackupRunsListResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @instance
                         */
                        BackupRunsListResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new BackupRunsListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRunsListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.BackupRunsListResponse} BackupRunsListResponse instance
                         */
                        BackupRunsListResponse.create = function create(properties) {
                            return new BackupRunsListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified BackupRunsListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.BackupRunsListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRunsListResponse} message BackupRunsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupRunsListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.BackupRun.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackupRunsListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.BackupRunsListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupRunsListResponse} message BackupRunsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupRunsListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackupRunsListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.BackupRunsListResponse} BackupRunsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupRunsListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.BackupRunsListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.BackupRun.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackupRunsListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.BackupRunsListResponse} BackupRunsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupRunsListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackupRunsListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackupRunsListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.BackupRun.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BackupRunsListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.BackupRunsListResponse} BackupRunsListResponse
                         */
                        BackupRunsListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.BackupRunsListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.BackupRunsListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.BackupRunsListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.BackupRunsListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.BackupRun.fromObject(object.items[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackupRunsListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.BackupRunsListResponse} message BackupRunsListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackupRunsListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults) {
                                object.kind = "";
                                object.nextPageToken = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.BackupRun.toObject(message.items[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this BackupRunsListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.BackupRunsListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackupRunsListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BackupRunsListResponse;
                    })();
    
                    v1beta4.BinLogCoordinates = (function() {
    
                        /**
                         * Properties of a BinLogCoordinates.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IBinLogCoordinates
                         * @property {string|null} [binLogFileName] BinLogCoordinates binLogFileName
                         * @property {number|Long|null} [binLogPosition] BinLogCoordinates binLogPosition
                         * @property {string|null} [kind] BinLogCoordinates kind
                         */
    
                        /**
                         * Constructs a new BinLogCoordinates.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a BinLogCoordinates.
                         * @implements IBinLogCoordinates
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IBinLogCoordinates=} [properties] Properties to set
                         */
                        function BinLogCoordinates(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BinLogCoordinates binLogFileName.
                         * @member {string} binLogFileName
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @instance
                         */
                        BinLogCoordinates.prototype.binLogFileName = "";
    
                        /**
                         * BinLogCoordinates binLogPosition.
                         * @member {number|Long} binLogPosition
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @instance
                         */
                        BinLogCoordinates.prototype.binLogPosition = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * BinLogCoordinates kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @instance
                         */
                        BinLogCoordinates.prototype.kind = "";
    
                        /**
                         * Creates a new BinLogCoordinates instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBinLogCoordinates=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.BinLogCoordinates} BinLogCoordinates instance
                         */
                        BinLogCoordinates.create = function create(properties) {
                            return new BinLogCoordinates(properties);
                        };
    
                        /**
                         * Encodes the specified BinLogCoordinates message. Does not implicitly {@link google.cloud.sql.v1beta4.BinLogCoordinates.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBinLogCoordinates} message BinLogCoordinates message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BinLogCoordinates.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.binLogFileName != null && Object.hasOwnProperty.call(message, "binLogFileName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.binLogFileName);
                            if (message.binLogPosition != null && Object.hasOwnProperty.call(message, "binLogPosition"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.binLogPosition);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BinLogCoordinates message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.BinLogCoordinates.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBinLogCoordinates} message BinLogCoordinates message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BinLogCoordinates.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BinLogCoordinates message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.BinLogCoordinates} BinLogCoordinates
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BinLogCoordinates.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.BinLogCoordinates();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.binLogFileName = reader.string();
                                    break;
                                case 2:
                                    message.binLogPosition = reader.int64();
                                    break;
                                case 3:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BinLogCoordinates message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.BinLogCoordinates} BinLogCoordinates
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BinLogCoordinates.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BinLogCoordinates message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BinLogCoordinates.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.binLogFileName != null && message.hasOwnProperty("binLogFileName"))
                                if (!$util.isString(message.binLogFileName))
                                    return "binLogFileName: string expected";
                            if (message.binLogPosition != null && message.hasOwnProperty("binLogPosition"))
                                if (!$util.isInteger(message.binLogPosition) && !(message.binLogPosition && $util.isInteger(message.binLogPosition.low) && $util.isInteger(message.binLogPosition.high)))
                                    return "binLogPosition: integer|Long expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BinLogCoordinates message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.BinLogCoordinates} BinLogCoordinates
                         */
                        BinLogCoordinates.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.BinLogCoordinates)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.BinLogCoordinates();
                            if (object.binLogFileName != null)
                                message.binLogFileName = String(object.binLogFileName);
                            if (object.binLogPosition != null)
                                if ($util.Long)
                                    (message.binLogPosition = $util.Long.fromValue(object.binLogPosition)).unsigned = false;
                                else if (typeof object.binLogPosition === "string")
                                    message.binLogPosition = parseInt(object.binLogPosition, 10);
                                else if (typeof object.binLogPosition === "number")
                                    message.binLogPosition = object.binLogPosition;
                                else if (typeof object.binLogPosition === "object")
                                    message.binLogPosition = new $util.LongBits(object.binLogPosition.low >>> 0, object.binLogPosition.high >>> 0).toNumber();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BinLogCoordinates message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @static
                         * @param {google.cloud.sql.v1beta4.BinLogCoordinates} message BinLogCoordinates
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BinLogCoordinates.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.binLogFileName = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.binLogPosition = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.binLogPosition = options.longs === String ? "0" : 0;
                                object.kind = "";
                            }
                            if (message.binLogFileName != null && message.hasOwnProperty("binLogFileName"))
                                object.binLogFileName = message.binLogFileName;
                            if (message.binLogPosition != null && message.hasOwnProperty("binLogPosition"))
                                if (typeof message.binLogPosition === "number")
                                    object.binLogPosition = options.longs === String ? String(message.binLogPosition) : message.binLogPosition;
                                else
                                    object.binLogPosition = options.longs === String ? $util.Long.prototype.toString.call(message.binLogPosition) : options.longs === Number ? new $util.LongBits(message.binLogPosition.low >>> 0, message.binLogPosition.high >>> 0).toNumber() : message.binLogPosition;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this BinLogCoordinates to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.BinLogCoordinates
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BinLogCoordinates.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BinLogCoordinates;
                    })();
    
                    v1beta4.BackupContext = (function() {
    
                        /**
                         * Properties of a BackupContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IBackupContext
                         * @property {number|Long|null} [backupId] BackupContext backupId
                         * @property {string|null} [kind] BackupContext kind
                         */
    
                        /**
                         * Constructs a new BackupContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a BackupContext.
                         * @implements IBackupContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IBackupContext=} [properties] Properties to set
                         */
                        function BackupContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BackupContext backupId.
                         * @member {number|Long} backupId
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @instance
                         */
                        BackupContext.prototype.backupId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * BackupContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @instance
                         */
                        BackupContext.prototype.kind = "";
    
                        /**
                         * Creates a new BackupContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.BackupContext} BackupContext instance
                         */
                        BackupContext.create = function create(properties) {
                            return new BackupContext(properties);
                        };
    
                        /**
                         * Encodes the specified BackupContext message. Does not implicitly {@link google.cloud.sql.v1beta4.BackupContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupContext} message BackupContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.backupId != null && Object.hasOwnProperty.call(message, "backupId"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.backupId);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BackupContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.BackupContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IBackupContext} message BackupContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BackupContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BackupContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.BackupContext} BackupContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.BackupContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.backupId = reader.int64();
                                    break;
                                case 2:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BackupContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.BackupContext} BackupContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BackupContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BackupContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BackupContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                if (!$util.isInteger(message.backupId) && !(message.backupId && $util.isInteger(message.backupId.low) && $util.isInteger(message.backupId.high)))
                                    return "backupId: integer|Long expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a BackupContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.BackupContext} BackupContext
                         */
                        BackupContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.BackupContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.BackupContext();
                            if (object.backupId != null)
                                if ($util.Long)
                                    (message.backupId = $util.Long.fromValue(object.backupId)).unsigned = false;
                                else if (typeof object.backupId === "string")
                                    message.backupId = parseInt(object.backupId, 10);
                                else if (typeof object.backupId === "number")
                                    message.backupId = object.backupId;
                                else if (typeof object.backupId === "object")
                                    message.backupId = new $util.LongBits(object.backupId.low >>> 0, object.backupId.high >>> 0).toNumber();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BackupContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.BackupContext} message BackupContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BackupContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.backupId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.backupId = options.longs === String ? "0" : 0;
                                object.kind = "";
                            }
                            if (message.backupId != null && message.hasOwnProperty("backupId"))
                                if (typeof message.backupId === "number")
                                    object.backupId = options.longs === String ? String(message.backupId) : message.backupId;
                                else
                                    object.backupId = options.longs === String ? $util.Long.prototype.toString.call(message.backupId) : options.longs === Number ? new $util.LongBits(message.backupId.low >>> 0, message.backupId.high >>> 0).toNumber() : message.backupId;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this BackupContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.BackupContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BackupContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return BackupContext;
                    })();
    
                    v1beta4.CloneContext = (function() {
    
                        /**
                         * Properties of a CloneContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ICloneContext
                         * @property {string|null} [kind] CloneContext kind
                         * @property {number|Long|null} [pitrTimestampMs] CloneContext pitrTimestampMs
                         * @property {string|null} [destinationInstanceName] CloneContext destinationInstanceName
                         * @property {google.cloud.sql.v1beta4.IBinLogCoordinates|null} [binLogCoordinates] CloneContext binLogCoordinates
                         * @property {google.protobuf.ITimestamp|null} [pointInTime] CloneContext pointInTime
                         */
    
                        /**
                         * Constructs a new CloneContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a CloneContext.
                         * @implements ICloneContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ICloneContext=} [properties] Properties to set
                         */
                        function CloneContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CloneContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @instance
                         */
                        CloneContext.prototype.kind = "";
    
                        /**
                         * CloneContext pitrTimestampMs.
                         * @member {number|Long} pitrTimestampMs
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @instance
                         */
                        CloneContext.prototype.pitrTimestampMs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * CloneContext destinationInstanceName.
                         * @member {string} destinationInstanceName
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @instance
                         */
                        CloneContext.prototype.destinationInstanceName = "";
    
                        /**
                         * CloneContext binLogCoordinates.
                         * @member {google.cloud.sql.v1beta4.IBinLogCoordinates|null|undefined} binLogCoordinates
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @instance
                         */
                        CloneContext.prototype.binLogCoordinates = null;
    
                        /**
                         * CloneContext pointInTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} pointInTime
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @instance
                         */
                        CloneContext.prototype.pointInTime = null;
    
                        /**
                         * Creates a new CloneContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ICloneContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.CloneContext} CloneContext instance
                         */
                        CloneContext.create = function create(properties) {
                            return new CloneContext(properties);
                        };
    
                        /**
                         * Encodes the specified CloneContext message. Does not implicitly {@link google.cloud.sql.v1beta4.CloneContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ICloneContext} message CloneContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloneContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.pitrTimestampMs != null && Object.hasOwnProperty.call(message, "pitrTimestampMs"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.pitrTimestampMs);
                            if (message.destinationInstanceName != null && Object.hasOwnProperty.call(message, "destinationInstanceName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.destinationInstanceName);
                            if (message.binLogCoordinates != null && Object.hasOwnProperty.call(message, "binLogCoordinates"))
                                $root.google.cloud.sql.v1beta4.BinLogCoordinates.encode(message.binLogCoordinates, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pointInTime != null && Object.hasOwnProperty.call(message, "pointInTime"))
                                $root.google.protobuf.Timestamp.encode(message.pointInTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CloneContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.CloneContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ICloneContext} message CloneContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CloneContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CloneContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.CloneContext} CloneContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloneContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.CloneContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.pitrTimestampMs = reader.int64();
                                    break;
                                case 3:
                                    message.destinationInstanceName = reader.string();
                                    break;
                                case 4:
                                    message.binLogCoordinates = $root.google.cloud.sql.v1beta4.BinLogCoordinates.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.pointInTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CloneContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.CloneContext} CloneContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CloneContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CloneContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CloneContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.pitrTimestampMs != null && message.hasOwnProperty("pitrTimestampMs"))
                                if (!$util.isInteger(message.pitrTimestampMs) && !(message.pitrTimestampMs && $util.isInteger(message.pitrTimestampMs.low) && $util.isInteger(message.pitrTimestampMs.high)))
                                    return "pitrTimestampMs: integer|Long expected";
                            if (message.destinationInstanceName != null && message.hasOwnProperty("destinationInstanceName"))
                                if (!$util.isString(message.destinationInstanceName))
                                    return "destinationInstanceName: string expected";
                            if (message.binLogCoordinates != null && message.hasOwnProperty("binLogCoordinates")) {
                                var error = $root.google.cloud.sql.v1beta4.BinLogCoordinates.verify(message.binLogCoordinates);
                                if (error)
                                    return "binLogCoordinates." + error;
                            }
                            if (message.pointInTime != null && message.hasOwnProperty("pointInTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.pointInTime);
                                if (error)
                                    return "pointInTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CloneContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.CloneContext} CloneContext
                         */
                        CloneContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.CloneContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.CloneContext();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.pitrTimestampMs != null)
                                if ($util.Long)
                                    (message.pitrTimestampMs = $util.Long.fromValue(object.pitrTimestampMs)).unsigned = false;
                                else if (typeof object.pitrTimestampMs === "string")
                                    message.pitrTimestampMs = parseInt(object.pitrTimestampMs, 10);
                                else if (typeof object.pitrTimestampMs === "number")
                                    message.pitrTimestampMs = object.pitrTimestampMs;
                                else if (typeof object.pitrTimestampMs === "object")
                                    message.pitrTimestampMs = new $util.LongBits(object.pitrTimestampMs.low >>> 0, object.pitrTimestampMs.high >>> 0).toNumber();
                            if (object.destinationInstanceName != null)
                                message.destinationInstanceName = String(object.destinationInstanceName);
                            if (object.binLogCoordinates != null) {
                                if (typeof object.binLogCoordinates !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.CloneContext.binLogCoordinates: object expected");
                                message.binLogCoordinates = $root.google.cloud.sql.v1beta4.BinLogCoordinates.fromObject(object.binLogCoordinates);
                            }
                            if (object.pointInTime != null) {
                                if (typeof object.pointInTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.CloneContext.pointInTime: object expected");
                                message.pointInTime = $root.google.protobuf.Timestamp.fromObject(object.pointInTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CloneContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.CloneContext} message CloneContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CloneContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.pitrTimestampMs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.pitrTimestampMs = options.longs === String ? "0" : 0;
                                object.destinationInstanceName = "";
                                object.binLogCoordinates = null;
                                object.pointInTime = null;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.pitrTimestampMs != null && message.hasOwnProperty("pitrTimestampMs"))
                                if (typeof message.pitrTimestampMs === "number")
                                    object.pitrTimestampMs = options.longs === String ? String(message.pitrTimestampMs) : message.pitrTimestampMs;
                                else
                                    object.pitrTimestampMs = options.longs === String ? $util.Long.prototype.toString.call(message.pitrTimestampMs) : options.longs === Number ? new $util.LongBits(message.pitrTimestampMs.low >>> 0, message.pitrTimestampMs.high >>> 0).toNumber() : message.pitrTimestampMs;
                            if (message.destinationInstanceName != null && message.hasOwnProperty("destinationInstanceName"))
                                object.destinationInstanceName = message.destinationInstanceName;
                            if (message.binLogCoordinates != null && message.hasOwnProperty("binLogCoordinates"))
                                object.binLogCoordinates = $root.google.cloud.sql.v1beta4.BinLogCoordinates.toObject(message.binLogCoordinates, options);
                            if (message.pointInTime != null && message.hasOwnProperty("pointInTime"))
                                object.pointInTime = $root.google.protobuf.Timestamp.toObject(message.pointInTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this CloneContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.CloneContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CloneContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CloneContext;
                    })();
    
                    v1beta4.Database = (function() {
    
                        /**
                         * Properties of a Database.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDatabase
                         * @property {string|null} [kind] Database kind
                         * @property {string|null} [charset] Database charset
                         * @property {string|null} [collation] Database collation
                         * @property {string|null} [etag] Database etag
                         * @property {string|null} [name] Database name
                         * @property {string|null} [instance] Database instance
                         * @property {string|null} [selfLink] Database selfLink
                         * @property {string|null} [project] Database project
                         * @property {google.cloud.sql.v1beta4.ISqlServerDatabaseDetails|null} [sqlserverDatabaseDetails] Database sqlserverDatabaseDetails
                         */
    
                        /**
                         * Constructs a new Database.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a Database.
                         * @implements IDatabase
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDatabase=} [properties] Properties to set
                         */
                        function Database(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Database kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.kind = "";
    
                        /**
                         * Database charset.
                         * @member {string} charset
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.charset = "";
    
                        /**
                         * Database collation.
                         * @member {string} collation
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.collation = "";
    
                        /**
                         * Database etag.
                         * @member {string} etag
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.etag = "";
    
                        /**
                         * Database name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.name = "";
    
                        /**
                         * Database instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.instance = "";
    
                        /**
                         * Database selfLink.
                         * @member {string} selfLink
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.selfLink = "";
    
                        /**
                         * Database project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.project = "";
    
                        /**
                         * Database sqlserverDatabaseDetails.
                         * @member {google.cloud.sql.v1beta4.ISqlServerDatabaseDetails|null|undefined} sqlserverDatabaseDetails
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Database.prototype.sqlserverDatabaseDetails = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Database databaseDetails.
                         * @member {"sqlserverDatabaseDetails"|undefined} databaseDetails
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         */
                        Object.defineProperty(Database.prototype, "databaseDetails", {
                            get: $util.oneOfGetter($oneOfFields = ["sqlserverDatabaseDetails"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Database instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabase=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.Database} Database instance
                         */
                        Database.create = function create(properties) {
                            return new Database(properties);
                        };
    
                        /**
                         * Encodes the specified Database message. Does not implicitly {@link google.cloud.sql.v1beta4.Database.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabase} message Database message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Database.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.charset != null && Object.hasOwnProperty.call(message, "charset"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.charset);
                            if (message.collation != null && Object.hasOwnProperty.call(message, "collation"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.collation);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.etag);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.name);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.instance);
                            if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.selfLink);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.project);
                            if (message.sqlserverDatabaseDetails != null && Object.hasOwnProperty.call(message, "sqlserverDatabaseDetails"))
                                $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails.encode(message.sqlserverDatabaseDetails, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Database message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.Database.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabase} message Database message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Database.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Database message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.Database} Database
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Database.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.Database();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.charset = reader.string();
                                    break;
                                case 3:
                                    message.collation = reader.string();
                                    break;
                                case 4:
                                    message.etag = reader.string();
                                    break;
                                case 5:
                                    message.name = reader.string();
                                    break;
                                case 6:
                                    message.instance = reader.string();
                                    break;
                                case 7:
                                    message.selfLink = reader.string();
                                    break;
                                case 8:
                                    message.project = reader.string();
                                    break;
                                case 9:
                                    message.sqlserverDatabaseDetails = $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Database message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.Database} Database
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Database.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Database message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Database.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.charset != null && message.hasOwnProperty("charset"))
                                if (!$util.isString(message.charset))
                                    return "charset: string expected";
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                if (!$util.isString(message.collation))
                                    return "collation: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                if (!$util.isString(message.selfLink))
                                    return "selfLink: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.sqlserverDatabaseDetails != null && message.hasOwnProperty("sqlserverDatabaseDetails")) {
                                properties.databaseDetails = 1;
                                {
                                    var error = $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails.verify(message.sqlserverDatabaseDetails);
                                    if (error)
                                        return "sqlserverDatabaseDetails." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Database message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.Database} Database
                         */
                        Database.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.Database)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.Database();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.charset != null)
                                message.charset = String(object.charset);
                            if (object.collation != null)
                                message.collation = String(object.collation);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.selfLink != null)
                                message.selfLink = String(object.selfLink);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.sqlserverDatabaseDetails != null) {
                                if (typeof object.sqlserverDatabaseDetails !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Database.sqlserverDatabaseDetails: object expected");
                                message.sqlserverDatabaseDetails = $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails.fromObject(object.sqlserverDatabaseDetails);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Database message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @static
                         * @param {google.cloud.sql.v1beta4.Database} message Database
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Database.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.charset = "";
                                object.collation = "";
                                object.etag = "";
                                object.name = "";
                                object.instance = "";
                                object.selfLink = "";
                                object.project = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.charset != null && message.hasOwnProperty("charset"))
                                object.charset = message.charset;
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                object.collation = message.collation;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                object.selfLink = message.selfLink;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.sqlserverDatabaseDetails != null && message.hasOwnProperty("sqlserverDatabaseDetails")) {
                                object.sqlserverDatabaseDetails = $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails.toObject(message.sqlserverDatabaseDetails, options);
                                if (options.oneofs)
                                    object.databaseDetails = "sqlserverDatabaseDetails";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Database to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.Database
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Database.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Database;
                    })();
    
                    v1beta4.SqlServerDatabaseDetails = (function() {
    
                        /**
                         * Properties of a SqlServerDatabaseDetails.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlServerDatabaseDetails
                         * @property {number|null} [compatibilityLevel] SqlServerDatabaseDetails compatibilityLevel
                         * @property {string|null} [recoveryModel] SqlServerDatabaseDetails recoveryModel
                         */
    
                        /**
                         * Constructs a new SqlServerDatabaseDetails.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlServerDatabaseDetails.
                         * @implements ISqlServerDatabaseDetails
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlServerDatabaseDetails=} [properties] Properties to set
                         */
                        function SqlServerDatabaseDetails(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlServerDatabaseDetails compatibilityLevel.
                         * @member {number} compatibilityLevel
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @instance
                         */
                        SqlServerDatabaseDetails.prototype.compatibilityLevel = 0;
    
                        /**
                         * SqlServerDatabaseDetails recoveryModel.
                         * @member {string} recoveryModel
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @instance
                         */
                        SqlServerDatabaseDetails.prototype.recoveryModel = "";
    
                        /**
                         * Creates a new SqlServerDatabaseDetails instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlServerDatabaseDetails=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlServerDatabaseDetails} SqlServerDatabaseDetails instance
                         */
                        SqlServerDatabaseDetails.create = function create(properties) {
                            return new SqlServerDatabaseDetails(properties);
                        };
    
                        /**
                         * Encodes the specified SqlServerDatabaseDetails message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlServerDatabaseDetails.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlServerDatabaseDetails} message SqlServerDatabaseDetails message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlServerDatabaseDetails.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.compatibilityLevel != null && Object.hasOwnProperty.call(message, "compatibilityLevel"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.compatibilityLevel);
                            if (message.recoveryModel != null && Object.hasOwnProperty.call(message, "recoveryModel"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.recoveryModel);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlServerDatabaseDetails message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlServerDatabaseDetails.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlServerDatabaseDetails} message SqlServerDatabaseDetails message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlServerDatabaseDetails.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlServerDatabaseDetails message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlServerDatabaseDetails} SqlServerDatabaseDetails
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlServerDatabaseDetails.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.compatibilityLevel = reader.int32();
                                    break;
                                case 2:
                                    message.recoveryModel = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlServerDatabaseDetails message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlServerDatabaseDetails} SqlServerDatabaseDetails
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlServerDatabaseDetails.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlServerDatabaseDetails message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlServerDatabaseDetails.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.compatibilityLevel != null && message.hasOwnProperty("compatibilityLevel"))
                                if (!$util.isInteger(message.compatibilityLevel))
                                    return "compatibilityLevel: integer expected";
                            if (message.recoveryModel != null && message.hasOwnProperty("recoveryModel"))
                                if (!$util.isString(message.recoveryModel))
                                    return "recoveryModel: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlServerDatabaseDetails message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlServerDatabaseDetails} SqlServerDatabaseDetails
                         */
                        SqlServerDatabaseDetails.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlServerDatabaseDetails();
                            if (object.compatibilityLevel != null)
                                message.compatibilityLevel = object.compatibilityLevel | 0;
                            if (object.recoveryModel != null)
                                message.recoveryModel = String(object.recoveryModel);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlServerDatabaseDetails message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlServerDatabaseDetails} message SqlServerDatabaseDetails
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlServerDatabaseDetails.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.compatibilityLevel = 0;
                                object.recoveryModel = "";
                            }
                            if (message.compatibilityLevel != null && message.hasOwnProperty("compatibilityLevel"))
                                object.compatibilityLevel = message.compatibilityLevel;
                            if (message.recoveryModel != null && message.hasOwnProperty("recoveryModel"))
                                object.recoveryModel = message.recoveryModel;
                            return object;
                        };
    
                        /**
                         * Converts this SqlServerDatabaseDetails to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlServerDatabaseDetails
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlServerDatabaseDetails.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlServerDatabaseDetails;
                    })();
    
                    v1beta4.DatabaseFlags = (function() {
    
                        /**
                         * Properties of a DatabaseFlags.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDatabaseFlags
                         * @property {string|null} [name] DatabaseFlags name
                         * @property {string|null} [value] DatabaseFlags value
                         */
    
                        /**
                         * Constructs a new DatabaseFlags.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DatabaseFlags.
                         * @implements IDatabaseFlags
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDatabaseFlags=} [properties] Properties to set
                         */
                        function DatabaseFlags(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DatabaseFlags name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @instance
                         */
                        DatabaseFlags.prototype.name = "";
    
                        /**
                         * DatabaseFlags value.
                         * @member {string} value
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @instance
                         */
                        DatabaseFlags.prototype.value = "";
    
                        /**
                         * Creates a new DatabaseFlags instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabaseFlags=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DatabaseFlags} DatabaseFlags instance
                         */
                        DatabaseFlags.create = function create(properties) {
                            return new DatabaseFlags(properties);
                        };
    
                        /**
                         * Encodes the specified DatabaseFlags message. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseFlags.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabaseFlags} message DatabaseFlags message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseFlags.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DatabaseFlags message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseFlags.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabaseFlags} message DatabaseFlags message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseFlags.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DatabaseFlags message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DatabaseFlags} DatabaseFlags
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseFlags.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DatabaseFlags();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.value = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DatabaseFlags message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DatabaseFlags} DatabaseFlags
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseFlags.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DatabaseFlags message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DatabaseFlags.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.value != null && message.hasOwnProperty("value"))
                                if (!$util.isString(message.value))
                                    return "value: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DatabaseFlags message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DatabaseFlags} DatabaseFlags
                         */
                        DatabaseFlags.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DatabaseFlags)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DatabaseFlags();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.value != null)
                                message.value = String(object.value);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DatabaseFlags message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @static
                         * @param {google.cloud.sql.v1beta4.DatabaseFlags} message DatabaseFlags
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DatabaseFlags.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.value = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.value != null && message.hasOwnProperty("value"))
                                object.value = message.value;
                            return object;
                        };
    
                        /**
                         * Converts this DatabaseFlags to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DatabaseFlags
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DatabaseFlags.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DatabaseFlags;
                    })();
    
                    v1beta4.DatabaseInstance = (function() {
    
                        /**
                         * Properties of a DatabaseInstance.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDatabaseInstance
                         * @property {string|null} [kind] DatabaseInstance kind
                         * @property {google.cloud.sql.v1beta4.DatabaseInstance.SqlInstanceState|null} [state] DatabaseInstance state
                         * @property {google.cloud.sql.v1beta4.SqlDatabaseVersion|null} [databaseVersion] DatabaseInstance databaseVersion
                         * @property {google.cloud.sql.v1beta4.ISettings|null} [settings] DatabaseInstance settings
                         * @property {string|null} [etag] DatabaseInstance etag
                         * @property {google.cloud.sql.v1beta4.DatabaseInstance.ISqlFailoverReplica|null} [failoverReplica] DatabaseInstance failoverReplica
                         * @property {string|null} [masterInstanceName] DatabaseInstance masterInstanceName
                         * @property {Array.<string>|null} [replicaNames] DatabaseInstance replicaNames
                         * @property {google.protobuf.IInt64Value|null} [maxDiskSize] DatabaseInstance maxDiskSize
                         * @property {google.protobuf.IInt64Value|null} [currentDiskSize] DatabaseInstance currentDiskSize
                         * @property {Array.<google.cloud.sql.v1beta4.IIpMapping>|null} [ipAddresses] DatabaseInstance ipAddresses
                         * @property {google.cloud.sql.v1beta4.ISslCert|null} [serverCaCert] DatabaseInstance serverCaCert
                         * @property {google.cloud.sql.v1beta4.SqlInstanceType|null} [instanceType] DatabaseInstance instanceType
                         * @property {string|null} [project] DatabaseInstance project
                         * @property {string|null} [ipv6Address] DatabaseInstance ipv6Address
                         * @property {string|null} [serviceAccountEmailAddress] DatabaseInstance serviceAccountEmailAddress
                         * @property {google.cloud.sql.v1beta4.IOnPremisesConfiguration|null} [onPremisesConfiguration] DatabaseInstance onPremisesConfiguration
                         * @property {google.cloud.sql.v1beta4.IReplicaConfiguration|null} [replicaConfiguration] DatabaseInstance replicaConfiguration
                         * @property {google.cloud.sql.v1beta4.SqlBackendType|null} [backendType] DatabaseInstance backendType
                         * @property {string|null} [selfLink] DatabaseInstance selfLink
                         * @property {Array.<google.cloud.sql.v1beta4.SqlSuspensionReason>|null} [suspensionReason] DatabaseInstance suspensionReason
                         * @property {string|null} [connectionName] DatabaseInstance connectionName
                         * @property {string|null} [name] DatabaseInstance name
                         * @property {string|null} [region] DatabaseInstance region
                         * @property {string|null} [gceZone] DatabaseInstance gceZone
                         * @property {string|null} [secondaryGceZone] DatabaseInstance secondaryGceZone
                         * @property {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration|null} [diskEncryptionConfiguration] DatabaseInstance diskEncryptionConfiguration
                         * @property {google.cloud.sql.v1beta4.IDiskEncryptionStatus|null} [diskEncryptionStatus] DatabaseInstance diskEncryptionStatus
                         * @property {string|null} [rootPassword] DatabaseInstance rootPassword
                         * @property {google.cloud.sql.v1beta4.DatabaseInstance.ISqlScheduledMaintenance|null} [scheduledMaintenance] DatabaseInstance scheduledMaintenance
                         * @property {google.protobuf.IBoolValue|null} [satisfiesPzs] DatabaseInstance satisfiesPzs
                         * @property {google.cloud.sql.v1beta4.DatabaseInstance.ISqlOutOfDiskReport|null} [outOfDiskReport] DatabaseInstance outOfDiskReport
                         */
    
                        /**
                         * Constructs a new DatabaseInstance.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DatabaseInstance.
                         * @implements IDatabaseInstance
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDatabaseInstance=} [properties] Properties to set
                         */
                        function DatabaseInstance(properties) {
                            this.replicaNames = [];
                            this.ipAddresses = [];
                            this.suspensionReason = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DatabaseInstance kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.kind = "";
    
                        /**
                         * DatabaseInstance state.
                         * @member {google.cloud.sql.v1beta4.DatabaseInstance.SqlInstanceState} state
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.state = 0;
    
                        /**
                         * DatabaseInstance databaseVersion.
                         * @member {google.cloud.sql.v1beta4.SqlDatabaseVersion} databaseVersion
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.databaseVersion = 0;
    
                        /**
                         * DatabaseInstance settings.
                         * @member {google.cloud.sql.v1beta4.ISettings|null|undefined} settings
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.settings = null;
    
                        /**
                         * DatabaseInstance etag.
                         * @member {string} etag
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.etag = "";
    
                        /**
                         * DatabaseInstance failoverReplica.
                         * @member {google.cloud.sql.v1beta4.DatabaseInstance.ISqlFailoverReplica|null|undefined} failoverReplica
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.failoverReplica = null;
    
                        /**
                         * DatabaseInstance masterInstanceName.
                         * @member {string} masterInstanceName
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.masterInstanceName = "";
    
                        /**
                         * DatabaseInstance replicaNames.
                         * @member {Array.<string>} replicaNames
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.replicaNames = $util.emptyArray;
    
                        /**
                         * DatabaseInstance maxDiskSize.
                         * @member {google.protobuf.IInt64Value|null|undefined} maxDiskSize
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.maxDiskSize = null;
    
                        /**
                         * DatabaseInstance currentDiskSize.
                         * @member {google.protobuf.IInt64Value|null|undefined} currentDiskSize
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.currentDiskSize = null;
    
                        /**
                         * DatabaseInstance ipAddresses.
                         * @member {Array.<google.cloud.sql.v1beta4.IIpMapping>} ipAddresses
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.ipAddresses = $util.emptyArray;
    
                        /**
                         * DatabaseInstance serverCaCert.
                         * @member {google.cloud.sql.v1beta4.ISslCert|null|undefined} serverCaCert
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.serverCaCert = null;
    
                        /**
                         * DatabaseInstance instanceType.
                         * @member {google.cloud.sql.v1beta4.SqlInstanceType} instanceType
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.instanceType = 0;
    
                        /**
                         * DatabaseInstance project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.project = "";
    
                        /**
                         * DatabaseInstance ipv6Address.
                         * @member {string} ipv6Address
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.ipv6Address = "";
    
                        /**
                         * DatabaseInstance serviceAccountEmailAddress.
                         * @member {string} serviceAccountEmailAddress
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.serviceAccountEmailAddress = "";
    
                        /**
                         * DatabaseInstance onPremisesConfiguration.
                         * @member {google.cloud.sql.v1beta4.IOnPremisesConfiguration|null|undefined} onPremisesConfiguration
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.onPremisesConfiguration = null;
    
                        /**
                         * DatabaseInstance replicaConfiguration.
                         * @member {google.cloud.sql.v1beta4.IReplicaConfiguration|null|undefined} replicaConfiguration
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.replicaConfiguration = null;
    
                        /**
                         * DatabaseInstance backendType.
                         * @member {google.cloud.sql.v1beta4.SqlBackendType} backendType
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.backendType = 0;
    
                        /**
                         * DatabaseInstance selfLink.
                         * @member {string} selfLink
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.selfLink = "";
    
                        /**
                         * DatabaseInstance suspensionReason.
                         * @member {Array.<google.cloud.sql.v1beta4.SqlSuspensionReason>} suspensionReason
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.suspensionReason = $util.emptyArray;
    
                        /**
                         * DatabaseInstance connectionName.
                         * @member {string} connectionName
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.connectionName = "";
    
                        /**
                         * DatabaseInstance name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.name = "";
    
                        /**
                         * DatabaseInstance region.
                         * @member {string} region
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.region = "";
    
                        /**
                         * DatabaseInstance gceZone.
                         * @member {string} gceZone
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.gceZone = "";
    
                        /**
                         * DatabaseInstance secondaryGceZone.
                         * @member {string} secondaryGceZone
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.secondaryGceZone = "";
    
                        /**
                         * DatabaseInstance diskEncryptionConfiguration.
                         * @member {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration|null|undefined} diskEncryptionConfiguration
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.diskEncryptionConfiguration = null;
    
                        /**
                         * DatabaseInstance diskEncryptionStatus.
                         * @member {google.cloud.sql.v1beta4.IDiskEncryptionStatus|null|undefined} diskEncryptionStatus
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.diskEncryptionStatus = null;
    
                        /**
                         * DatabaseInstance rootPassword.
                         * @member {string} rootPassword
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.rootPassword = "";
    
                        /**
                         * DatabaseInstance scheduledMaintenance.
                         * @member {google.cloud.sql.v1beta4.DatabaseInstance.ISqlScheduledMaintenance|null|undefined} scheduledMaintenance
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.scheduledMaintenance = null;
    
                        /**
                         * DatabaseInstance satisfiesPzs.
                         * @member {google.protobuf.IBoolValue|null|undefined} satisfiesPzs
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.satisfiesPzs = null;
    
                        /**
                         * DatabaseInstance outOfDiskReport.
                         * @member {google.cloud.sql.v1beta4.DatabaseInstance.ISqlOutOfDiskReport|null|undefined} outOfDiskReport
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        DatabaseInstance.prototype.outOfDiskReport = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * DatabaseInstance _outOfDiskReport.
                         * @member {"outOfDiskReport"|undefined} _outOfDiskReport
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         */
                        Object.defineProperty(DatabaseInstance.prototype, "_outOfDiskReport", {
                            get: $util.oneOfGetter($oneOfFields = ["outOfDiskReport"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new DatabaseInstance instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabaseInstance=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DatabaseInstance} DatabaseInstance instance
                         */
                        DatabaseInstance.create = function create(properties) {
                            return new DatabaseInstance(properties);
                        };
    
                        /**
                         * Encodes the specified DatabaseInstance message. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabaseInstance} message DatabaseInstance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseInstance.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                            if (message.databaseVersion != null && Object.hasOwnProperty.call(message, "databaseVersion"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.databaseVersion);
                            if (message.settings != null && Object.hasOwnProperty.call(message, "settings"))
                                $root.google.cloud.sql.v1beta4.Settings.encode(message.settings, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.etag);
                            if (message.failoverReplica != null && Object.hasOwnProperty.call(message, "failoverReplica"))
                                $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.encode(message.failoverReplica, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.masterInstanceName != null && Object.hasOwnProperty.call(message, "masterInstanceName"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.masterInstanceName);
                            if (message.replicaNames != null && message.replicaNames.length)
                                for (var i = 0; i < message.replicaNames.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.replicaNames[i]);
                            if (message.maxDiskSize != null && Object.hasOwnProperty.call(message, "maxDiskSize"))
                                $root.google.protobuf.Int64Value.encode(message.maxDiskSize, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.currentDiskSize != null && Object.hasOwnProperty.call(message, "currentDiskSize"))
                                $root.google.protobuf.Int64Value.encode(message.currentDiskSize, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.ipAddresses != null && message.ipAddresses.length)
                                for (var i = 0; i < message.ipAddresses.length; ++i)
                                    $root.google.cloud.sql.v1beta4.IpMapping.encode(message.ipAddresses[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.serverCaCert != null && Object.hasOwnProperty.call(message, "serverCaCert"))
                                $root.google.cloud.sql.v1beta4.SslCert.encode(message.serverCaCert, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.instanceType != null && Object.hasOwnProperty.call(message, "instanceType"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.instanceType);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.project);
                            if (message.ipv6Address != null && Object.hasOwnProperty.call(message, "ipv6Address"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.ipv6Address);
                            if (message.serviceAccountEmailAddress != null && Object.hasOwnProperty.call(message, "serviceAccountEmailAddress"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.serviceAccountEmailAddress);
                            if (message.onPremisesConfiguration != null && Object.hasOwnProperty.call(message, "onPremisesConfiguration"))
                                $root.google.cloud.sql.v1beta4.OnPremisesConfiguration.encode(message.onPremisesConfiguration, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.replicaConfiguration != null && Object.hasOwnProperty.call(message, "replicaConfiguration"))
                                $root.google.cloud.sql.v1beta4.ReplicaConfiguration.encode(message.replicaConfiguration, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.backendType != null && Object.hasOwnProperty.call(message, "backendType"))
                                writer.uint32(/* id 19, wireType 0 =*/152).int32(message.backendType);
                            if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                                writer.uint32(/* id 20, wireType 2 =*/162).string(message.selfLink);
                            if (message.suspensionReason != null && message.suspensionReason.length) {
                                writer.uint32(/* id 21, wireType 2 =*/170).fork();
                                for (var i = 0; i < message.suspensionReason.length; ++i)
                                    writer.int32(message.suspensionReason[i]);
                                writer.ldelim();
                            }
                            if (message.connectionName != null && Object.hasOwnProperty.call(message, "connectionName"))
                                writer.uint32(/* id 22, wireType 2 =*/178).string(message.connectionName);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 23, wireType 2 =*/186).string(message.name);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 24, wireType 2 =*/194).string(message.region);
                            if (message.gceZone != null && Object.hasOwnProperty.call(message, "gceZone"))
                                writer.uint32(/* id 25, wireType 2 =*/202).string(message.gceZone);
                            if (message.diskEncryptionConfiguration != null && Object.hasOwnProperty.call(message, "diskEncryptionConfiguration"))
                                $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.encode(message.diskEncryptionConfiguration, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                            if (message.diskEncryptionStatus != null && Object.hasOwnProperty.call(message, "diskEncryptionStatus"))
                                $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.encode(message.diskEncryptionStatus, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                            if (message.rootPassword != null && Object.hasOwnProperty.call(message, "rootPassword"))
                                writer.uint32(/* id 29, wireType 2 =*/234).string(message.rootPassword);
                            if (message.scheduledMaintenance != null && Object.hasOwnProperty.call(message, "scheduledMaintenance"))
                                $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.encode(message.scheduledMaintenance, writer.uint32(/* id 30, wireType 2 =*/242).fork()).ldelim();
                            if (message.secondaryGceZone != null && Object.hasOwnProperty.call(message, "secondaryGceZone"))
                                writer.uint32(/* id 34, wireType 2 =*/274).string(message.secondaryGceZone);
                            if (message.satisfiesPzs != null && Object.hasOwnProperty.call(message, "satisfiesPzs"))
                                $root.google.protobuf.BoolValue.encode(message.satisfiesPzs, writer.uint32(/* id 35, wireType 2 =*/282).fork()).ldelim();
                            if (message.outOfDiskReport != null && Object.hasOwnProperty.call(message, "outOfDiskReport"))
                                $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.encode(message.outOfDiskReport, writer.uint32(/* id 38, wireType 2 =*/306).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DatabaseInstance message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabaseInstance} message DatabaseInstance message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabaseInstance.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DatabaseInstance message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DatabaseInstance} DatabaseInstance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseInstance.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DatabaseInstance();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.state = reader.int32();
                                    break;
                                case 3:
                                    message.databaseVersion = reader.int32();
                                    break;
                                case 4:
                                    message.settings = $root.google.cloud.sql.v1beta4.Settings.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.etag = reader.string();
                                    break;
                                case 6:
                                    message.failoverReplica = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.masterInstanceName = reader.string();
                                    break;
                                case 8:
                                    if (!(message.replicaNames && message.replicaNames.length))
                                        message.replicaNames = [];
                                    message.replicaNames.push(reader.string());
                                    break;
                                case 9:
                                    message.maxDiskSize = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.currentDiskSize = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    if (!(message.ipAddresses && message.ipAddresses.length))
                                        message.ipAddresses = [];
                                    message.ipAddresses.push($root.google.cloud.sql.v1beta4.IpMapping.decode(reader, reader.uint32()));
                                    break;
                                case 12:
                                    message.serverCaCert = $root.google.cloud.sql.v1beta4.SslCert.decode(reader, reader.uint32());
                                    break;
                                case 13:
                                    message.instanceType = reader.int32();
                                    break;
                                case 14:
                                    message.project = reader.string();
                                    break;
                                case 15:
                                    message.ipv6Address = reader.string();
                                    break;
                                case 16:
                                    message.serviceAccountEmailAddress = reader.string();
                                    break;
                                case 17:
                                    message.onPremisesConfiguration = $root.google.cloud.sql.v1beta4.OnPremisesConfiguration.decode(reader, reader.uint32());
                                    break;
                                case 18:
                                    message.replicaConfiguration = $root.google.cloud.sql.v1beta4.ReplicaConfiguration.decode(reader, reader.uint32());
                                    break;
                                case 19:
                                    message.backendType = reader.int32();
                                    break;
                                case 20:
                                    message.selfLink = reader.string();
                                    break;
                                case 21:
                                    if (!(message.suspensionReason && message.suspensionReason.length))
                                        message.suspensionReason = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.suspensionReason.push(reader.int32());
                                    } else
                                        message.suspensionReason.push(reader.int32());
                                    break;
                                case 22:
                                    message.connectionName = reader.string();
                                    break;
                                case 23:
                                    message.name = reader.string();
                                    break;
                                case 24:
                                    message.region = reader.string();
                                    break;
                                case 25:
                                    message.gceZone = reader.string();
                                    break;
                                case 34:
                                    message.secondaryGceZone = reader.string();
                                    break;
                                case 26:
                                    message.diskEncryptionConfiguration = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.decode(reader, reader.uint32());
                                    break;
                                case 27:
                                    message.diskEncryptionStatus = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.decode(reader, reader.uint32());
                                    break;
                                case 29:
                                    message.rootPassword = reader.string();
                                    break;
                                case 30:
                                    message.scheduledMaintenance = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.decode(reader, reader.uint32());
                                    break;
                                case 35:
                                    message.satisfiesPzs = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 38:
                                    message.outOfDiskReport = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DatabaseInstance message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DatabaseInstance} DatabaseInstance
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabaseInstance.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DatabaseInstance message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DatabaseInstance.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.databaseVersion != null && message.hasOwnProperty("databaseVersion"))
                                switch (message.databaseVersion) {
                                default:
                                    return "databaseVersion: enum value expected";
                                case 0:
                                case 2:
                                case 3:
                                case 5:
                                case 6:
                                case 9:
                                case 10:
                                case 11:
                                case 14:
                                case 15:
                                case 16:
                                case 18:
                                case 19:
                                case 20:
                                case 23:
                                    break;
                                }
                            if (message.settings != null && message.hasOwnProperty("settings")) {
                                var error = $root.google.cloud.sql.v1beta4.Settings.verify(message.settings);
                                if (error)
                                    return "settings." + error;
                            }
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.failoverReplica != null && message.hasOwnProperty("failoverReplica")) {
                                var error = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.verify(message.failoverReplica);
                                if (error)
                                    return "failoverReplica." + error;
                            }
                            if (message.masterInstanceName != null && message.hasOwnProperty("masterInstanceName"))
                                if (!$util.isString(message.masterInstanceName))
                                    return "masterInstanceName: string expected";
                            if (message.replicaNames != null && message.hasOwnProperty("replicaNames")) {
                                if (!Array.isArray(message.replicaNames))
                                    return "replicaNames: array expected";
                                for (var i = 0; i < message.replicaNames.length; ++i)
                                    if (!$util.isString(message.replicaNames[i]))
                                        return "replicaNames: string[] expected";
                            }
                            if (message.maxDiskSize != null && message.hasOwnProperty("maxDiskSize")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.maxDiskSize);
                                if (error)
                                    return "maxDiskSize." + error;
                            }
                            if (message.currentDiskSize != null && message.hasOwnProperty("currentDiskSize")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.currentDiskSize);
                                if (error)
                                    return "currentDiskSize." + error;
                            }
                            if (message.ipAddresses != null && message.hasOwnProperty("ipAddresses")) {
                                if (!Array.isArray(message.ipAddresses))
                                    return "ipAddresses: array expected";
                                for (var i = 0; i < message.ipAddresses.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.IpMapping.verify(message.ipAddresses[i]);
                                    if (error)
                                        return "ipAddresses." + error;
                                }
                            }
                            if (message.serverCaCert != null && message.hasOwnProperty("serverCaCert")) {
                                var error = $root.google.cloud.sql.v1beta4.SslCert.verify(message.serverCaCert);
                                if (error)
                                    return "serverCaCert." + error;
                            }
                            if (message.instanceType != null && message.hasOwnProperty("instanceType"))
                                switch (message.instanceType) {
                                default:
                                    return "instanceType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.ipv6Address != null && message.hasOwnProperty("ipv6Address"))
                                if (!$util.isString(message.ipv6Address))
                                    return "ipv6Address: string expected";
                            if (message.serviceAccountEmailAddress != null && message.hasOwnProperty("serviceAccountEmailAddress"))
                                if (!$util.isString(message.serviceAccountEmailAddress))
                                    return "serviceAccountEmailAddress: string expected";
                            if (message.onPremisesConfiguration != null && message.hasOwnProperty("onPremisesConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.OnPremisesConfiguration.verify(message.onPremisesConfiguration);
                                if (error)
                                    return "onPremisesConfiguration." + error;
                            }
                            if (message.replicaConfiguration != null && message.hasOwnProperty("replicaConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.ReplicaConfiguration.verify(message.replicaConfiguration);
                                if (error)
                                    return "replicaConfiguration." + error;
                            }
                            if (message.backendType != null && message.hasOwnProperty("backendType"))
                                switch (message.backendType) {
                                default:
                                    return "backendType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                if (!$util.isString(message.selfLink))
                                    return "selfLink: string expected";
                            if (message.suspensionReason != null && message.hasOwnProperty("suspensionReason")) {
                                if (!Array.isArray(message.suspensionReason))
                                    return "suspensionReason: array expected";
                                for (var i = 0; i < message.suspensionReason.length; ++i)
                                    switch (message.suspensionReason[i]) {
                                    default:
                                        return "suspensionReason: enum value[] expected";
                                    case 0:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                        break;
                                    }
                            }
                            if (message.connectionName != null && message.hasOwnProperty("connectionName"))
                                if (!$util.isString(message.connectionName))
                                    return "connectionName: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.gceZone != null && message.hasOwnProperty("gceZone"))
                                if (!$util.isString(message.gceZone))
                                    return "gceZone: string expected";
                            if (message.secondaryGceZone != null && message.hasOwnProperty("secondaryGceZone"))
                                if (!$util.isString(message.secondaryGceZone))
                                    return "secondaryGceZone: string expected";
                            if (message.diskEncryptionConfiguration != null && message.hasOwnProperty("diskEncryptionConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.verify(message.diskEncryptionConfiguration);
                                if (error)
                                    return "diskEncryptionConfiguration." + error;
                            }
                            if (message.diskEncryptionStatus != null && message.hasOwnProperty("diskEncryptionStatus")) {
                                var error = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.verify(message.diskEncryptionStatus);
                                if (error)
                                    return "diskEncryptionStatus." + error;
                            }
                            if (message.rootPassword != null && message.hasOwnProperty("rootPassword"))
                                if (!$util.isString(message.rootPassword))
                                    return "rootPassword: string expected";
                            if (message.scheduledMaintenance != null && message.hasOwnProperty("scheduledMaintenance")) {
                                var error = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.verify(message.scheduledMaintenance);
                                if (error)
                                    return "scheduledMaintenance." + error;
                            }
                            if (message.satisfiesPzs != null && message.hasOwnProperty("satisfiesPzs")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.satisfiesPzs);
                                if (error)
                                    return "satisfiesPzs." + error;
                            }
                            if (message.outOfDiskReport != null && message.hasOwnProperty("outOfDiskReport")) {
                                properties._outOfDiskReport = 1;
                                {
                                    var error = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.verify(message.outOfDiskReport);
                                    if (error)
                                        return "outOfDiskReport." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DatabaseInstance message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DatabaseInstance} DatabaseInstance
                         */
                        DatabaseInstance.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DatabaseInstance)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DatabaseInstance();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            switch (object.state) {
                            case "SQL_INSTANCE_STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "RUNNABLE":
                            case 1:
                                message.state = 1;
                                break;
                            case "SUSPENDED":
                            case 2:
                                message.state = 2;
                                break;
                            case "PENDING_DELETE":
                            case 3:
                                message.state = 3;
                                break;
                            case "PENDING_CREATE":
                            case 4:
                                message.state = 4;
                                break;
                            case "MAINTENANCE":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            switch (object.databaseVersion) {
                            case "SQL_DATABASE_VERSION_UNSPECIFIED":
                            case 0:
                                message.databaseVersion = 0;
                                break;
                            case "MYSQL_5_1":
                            case 2:
                                message.databaseVersion = 2;
                                break;
                            case "MYSQL_5_5":
                            case 3:
                                message.databaseVersion = 3;
                                break;
                            case "MYSQL_5_6":
                            case 5:
                                message.databaseVersion = 5;
                                break;
                            case "MYSQL_5_7":
                            case 6:
                                message.databaseVersion = 6;
                                break;
                            case "POSTGRES_9_6":
                            case 9:
                                message.databaseVersion = 9;
                                break;
                            case "POSTGRES_11":
                            case 10:
                                message.databaseVersion = 10;
                                break;
                            case "SQLSERVER_2017_STANDARD":
                            case 11:
                                message.databaseVersion = 11;
                                break;
                            case "SQLSERVER_2017_ENTERPRISE":
                            case 14:
                                message.databaseVersion = 14;
                                break;
                            case "SQLSERVER_2017_EXPRESS":
                            case 15:
                                message.databaseVersion = 15;
                                break;
                            case "SQLSERVER_2017_WEB":
                            case 16:
                                message.databaseVersion = 16;
                                break;
                            case "POSTGRES_10":
                            case 18:
                                message.databaseVersion = 18;
                                break;
                            case "POSTGRES_12":
                            case 19:
                                message.databaseVersion = 19;
                                break;
                            case "MYSQL_8_0":
                            case 20:
                                message.databaseVersion = 20;
                                break;
                            case "POSTGRES_13":
                            case 23:
                                message.databaseVersion = 23;
                                break;
                            }
                            if (object.settings != null) {
                                if (typeof object.settings !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.settings: object expected");
                                message.settings = $root.google.cloud.sql.v1beta4.Settings.fromObject(object.settings);
                            }
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.failoverReplica != null) {
                                if (typeof object.failoverReplica !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.failoverReplica: object expected");
                                message.failoverReplica = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.fromObject(object.failoverReplica);
                            }
                            if (object.masterInstanceName != null)
                                message.masterInstanceName = String(object.masterInstanceName);
                            if (object.replicaNames) {
                                if (!Array.isArray(object.replicaNames))
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.replicaNames: array expected");
                                message.replicaNames = [];
                                for (var i = 0; i < object.replicaNames.length; ++i)
                                    message.replicaNames[i] = String(object.replicaNames[i]);
                            }
                            if (object.maxDiskSize != null) {
                                if (typeof object.maxDiskSize !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.maxDiskSize: object expected");
                                message.maxDiskSize = $root.google.protobuf.Int64Value.fromObject(object.maxDiskSize);
                            }
                            if (object.currentDiskSize != null) {
                                if (typeof object.currentDiskSize !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.currentDiskSize: object expected");
                                message.currentDiskSize = $root.google.protobuf.Int64Value.fromObject(object.currentDiskSize);
                            }
                            if (object.ipAddresses) {
                                if (!Array.isArray(object.ipAddresses))
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.ipAddresses: array expected");
                                message.ipAddresses = [];
                                for (var i = 0; i < object.ipAddresses.length; ++i) {
                                    if (typeof object.ipAddresses[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.ipAddresses: object expected");
                                    message.ipAddresses[i] = $root.google.cloud.sql.v1beta4.IpMapping.fromObject(object.ipAddresses[i]);
                                }
                            }
                            if (object.serverCaCert != null) {
                                if (typeof object.serverCaCert !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.serverCaCert: object expected");
                                message.serverCaCert = $root.google.cloud.sql.v1beta4.SslCert.fromObject(object.serverCaCert);
                            }
                            switch (object.instanceType) {
                            case "SQL_INSTANCE_TYPE_UNSPECIFIED":
                            case 0:
                                message.instanceType = 0;
                                break;
                            case "CLOUD_SQL_INSTANCE":
                            case 1:
                                message.instanceType = 1;
                                break;
                            case "ON_PREMISES_INSTANCE":
                            case 2:
                                message.instanceType = 2;
                                break;
                            case "READ_REPLICA_INSTANCE":
                            case 3:
                                message.instanceType = 3;
                                break;
                            }
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.ipv6Address != null)
                                message.ipv6Address = String(object.ipv6Address);
                            if (object.serviceAccountEmailAddress != null)
                                message.serviceAccountEmailAddress = String(object.serviceAccountEmailAddress);
                            if (object.onPremisesConfiguration != null) {
                                if (typeof object.onPremisesConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.onPremisesConfiguration: object expected");
                                message.onPremisesConfiguration = $root.google.cloud.sql.v1beta4.OnPremisesConfiguration.fromObject(object.onPremisesConfiguration);
                            }
                            if (object.replicaConfiguration != null) {
                                if (typeof object.replicaConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.replicaConfiguration: object expected");
                                message.replicaConfiguration = $root.google.cloud.sql.v1beta4.ReplicaConfiguration.fromObject(object.replicaConfiguration);
                            }
                            switch (object.backendType) {
                            case "SQL_BACKEND_TYPE_UNSPECIFIED":
                            case 0:
                                message.backendType = 0;
                                break;
                            case "FIRST_GEN":
                            case 1:
                                message.backendType = 1;
                                break;
                            case "SECOND_GEN":
                            case 2:
                                message.backendType = 2;
                                break;
                            case "EXTERNAL":
                            case 3:
                                message.backendType = 3;
                                break;
                            }
                            if (object.selfLink != null)
                                message.selfLink = String(object.selfLink);
                            if (object.suspensionReason) {
                                if (!Array.isArray(object.suspensionReason))
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.suspensionReason: array expected");
                                message.suspensionReason = [];
                                for (var i = 0; i < object.suspensionReason.length; ++i)
                                    switch (object.suspensionReason[i]) {
                                    default:
                                    case "SQL_SUSPENSION_REASON_UNSPECIFIED":
                                    case 0:
                                        message.suspensionReason[i] = 0;
                                        break;
                                    case "BILLING_ISSUE":
                                    case 2:
                                        message.suspensionReason[i] = 2;
                                        break;
                                    case "LEGAL_ISSUE":
                                    case 3:
                                        message.suspensionReason[i] = 3;
                                        break;
                                    case "OPERATIONAL_ISSUE":
                                    case 4:
                                        message.suspensionReason[i] = 4;
                                        break;
                                    case "KMS_KEY_ISSUE":
                                    case 5:
                                        message.suspensionReason[i] = 5;
                                        break;
                                    }
                            }
                            if (object.connectionName != null)
                                message.connectionName = String(object.connectionName);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.gceZone != null)
                                message.gceZone = String(object.gceZone);
                            if (object.secondaryGceZone != null)
                                message.secondaryGceZone = String(object.secondaryGceZone);
                            if (object.diskEncryptionConfiguration != null) {
                                if (typeof object.diskEncryptionConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.diskEncryptionConfiguration: object expected");
                                message.diskEncryptionConfiguration = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.fromObject(object.diskEncryptionConfiguration);
                            }
                            if (object.diskEncryptionStatus != null) {
                                if (typeof object.diskEncryptionStatus !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.diskEncryptionStatus: object expected");
                                message.diskEncryptionStatus = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.fromObject(object.diskEncryptionStatus);
                            }
                            if (object.rootPassword != null)
                                message.rootPassword = String(object.rootPassword);
                            if (object.scheduledMaintenance != null) {
                                if (typeof object.scheduledMaintenance !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.scheduledMaintenance: object expected");
                                message.scheduledMaintenance = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.fromObject(object.scheduledMaintenance);
                            }
                            if (object.satisfiesPzs != null) {
                                if (typeof object.satisfiesPzs !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.satisfiesPzs: object expected");
                                message.satisfiesPzs = $root.google.protobuf.BoolValue.fromObject(object.satisfiesPzs);
                            }
                            if (object.outOfDiskReport != null) {
                                if (typeof object.outOfDiskReport !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.outOfDiskReport: object expected");
                                message.outOfDiskReport = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.fromObject(object.outOfDiskReport);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DatabaseInstance message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @static
                         * @param {google.cloud.sql.v1beta4.DatabaseInstance} message DatabaseInstance
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DatabaseInstance.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.replicaNames = [];
                                object.ipAddresses = [];
                                object.suspensionReason = [];
                            }
                            if (options.defaults) {
                                object.kind = "";
                                object.state = options.enums === String ? "SQL_INSTANCE_STATE_UNSPECIFIED" : 0;
                                object.databaseVersion = options.enums === String ? "SQL_DATABASE_VERSION_UNSPECIFIED" : 0;
                                object.settings = null;
                                object.etag = "";
                                object.failoverReplica = null;
                                object.masterInstanceName = "";
                                object.maxDiskSize = null;
                                object.currentDiskSize = null;
                                object.serverCaCert = null;
                                object.instanceType = options.enums === String ? "SQL_INSTANCE_TYPE_UNSPECIFIED" : 0;
                                object.project = "";
                                object.ipv6Address = "";
                                object.serviceAccountEmailAddress = "";
                                object.onPremisesConfiguration = null;
                                object.replicaConfiguration = null;
                                object.backendType = options.enums === String ? "SQL_BACKEND_TYPE_UNSPECIFIED" : 0;
                                object.selfLink = "";
                                object.connectionName = "";
                                object.name = "";
                                object.region = "";
                                object.gceZone = "";
                                object.diskEncryptionConfiguration = null;
                                object.diskEncryptionStatus = null;
                                object.rootPassword = "";
                                object.scheduledMaintenance = null;
                                object.secondaryGceZone = "";
                                object.satisfiesPzs = null;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlInstanceState[message.state] : message.state;
                            if (message.databaseVersion != null && message.hasOwnProperty("databaseVersion"))
                                object.databaseVersion = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlDatabaseVersion[message.databaseVersion] : message.databaseVersion;
                            if (message.settings != null && message.hasOwnProperty("settings"))
                                object.settings = $root.google.cloud.sql.v1beta4.Settings.toObject(message.settings, options);
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.failoverReplica != null && message.hasOwnProperty("failoverReplica"))
                                object.failoverReplica = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.toObject(message.failoverReplica, options);
                            if (message.masterInstanceName != null && message.hasOwnProperty("masterInstanceName"))
                                object.masterInstanceName = message.masterInstanceName;
                            if (message.replicaNames && message.replicaNames.length) {
                                object.replicaNames = [];
                                for (var j = 0; j < message.replicaNames.length; ++j)
                                    object.replicaNames[j] = message.replicaNames[j];
                            }
                            if (message.maxDiskSize != null && message.hasOwnProperty("maxDiskSize"))
                                object.maxDiskSize = $root.google.protobuf.Int64Value.toObject(message.maxDiskSize, options);
                            if (message.currentDiskSize != null && message.hasOwnProperty("currentDiskSize"))
                                object.currentDiskSize = $root.google.protobuf.Int64Value.toObject(message.currentDiskSize, options);
                            if (message.ipAddresses && message.ipAddresses.length) {
                                object.ipAddresses = [];
                                for (var j = 0; j < message.ipAddresses.length; ++j)
                                    object.ipAddresses[j] = $root.google.cloud.sql.v1beta4.IpMapping.toObject(message.ipAddresses[j], options);
                            }
                            if (message.serverCaCert != null && message.hasOwnProperty("serverCaCert"))
                                object.serverCaCert = $root.google.cloud.sql.v1beta4.SslCert.toObject(message.serverCaCert, options);
                            if (message.instanceType != null && message.hasOwnProperty("instanceType"))
                                object.instanceType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlInstanceType[message.instanceType] : message.instanceType;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.ipv6Address != null && message.hasOwnProperty("ipv6Address"))
                                object.ipv6Address = message.ipv6Address;
                            if (message.serviceAccountEmailAddress != null && message.hasOwnProperty("serviceAccountEmailAddress"))
                                object.serviceAccountEmailAddress = message.serviceAccountEmailAddress;
                            if (message.onPremisesConfiguration != null && message.hasOwnProperty("onPremisesConfiguration"))
                                object.onPremisesConfiguration = $root.google.cloud.sql.v1beta4.OnPremisesConfiguration.toObject(message.onPremisesConfiguration, options);
                            if (message.replicaConfiguration != null && message.hasOwnProperty("replicaConfiguration"))
                                object.replicaConfiguration = $root.google.cloud.sql.v1beta4.ReplicaConfiguration.toObject(message.replicaConfiguration, options);
                            if (message.backendType != null && message.hasOwnProperty("backendType"))
                                object.backendType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlBackendType[message.backendType] : message.backendType;
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                object.selfLink = message.selfLink;
                            if (message.suspensionReason && message.suspensionReason.length) {
                                object.suspensionReason = [];
                                for (var j = 0; j < message.suspensionReason.length; ++j)
                                    object.suspensionReason[j] = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlSuspensionReason[message.suspensionReason[j]] : message.suspensionReason[j];
                            }
                            if (message.connectionName != null && message.hasOwnProperty("connectionName"))
                                object.connectionName = message.connectionName;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.gceZone != null && message.hasOwnProperty("gceZone"))
                                object.gceZone = message.gceZone;
                            if (message.diskEncryptionConfiguration != null && message.hasOwnProperty("diskEncryptionConfiguration"))
                                object.diskEncryptionConfiguration = $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration.toObject(message.diskEncryptionConfiguration, options);
                            if (message.diskEncryptionStatus != null && message.hasOwnProperty("diskEncryptionStatus"))
                                object.diskEncryptionStatus = $root.google.cloud.sql.v1beta4.DiskEncryptionStatus.toObject(message.diskEncryptionStatus, options);
                            if (message.rootPassword != null && message.hasOwnProperty("rootPassword"))
                                object.rootPassword = message.rootPassword;
                            if (message.scheduledMaintenance != null && message.hasOwnProperty("scheduledMaintenance"))
                                object.scheduledMaintenance = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.toObject(message.scheduledMaintenance, options);
                            if (message.secondaryGceZone != null && message.hasOwnProperty("secondaryGceZone"))
                                object.secondaryGceZone = message.secondaryGceZone;
                            if (message.satisfiesPzs != null && message.hasOwnProperty("satisfiesPzs"))
                                object.satisfiesPzs = $root.google.protobuf.BoolValue.toObject(message.satisfiesPzs, options);
                            if (message.outOfDiskReport != null && message.hasOwnProperty("outOfDiskReport")) {
                                object.outOfDiskReport = $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.toObject(message.outOfDiskReport, options);
                                if (options.oneofs)
                                    object._outOfDiskReport = "outOfDiskReport";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DatabaseInstance to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DatabaseInstance.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        DatabaseInstance.SqlFailoverReplica = (function() {
    
                            /**
                             * Properties of a SqlFailoverReplica.
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                             * @interface ISqlFailoverReplica
                             * @property {string|null} [name] SqlFailoverReplica name
                             * @property {google.protobuf.IBoolValue|null} [available] SqlFailoverReplica available
                             */
    
                            /**
                             * Constructs a new SqlFailoverReplica.
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                             * @classdesc Represents a SqlFailoverReplica.
                             * @implements ISqlFailoverReplica
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlFailoverReplica=} [properties] Properties to set
                             */
                            function SqlFailoverReplica(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SqlFailoverReplica name.
                             * @member {string} name
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @instance
                             */
                            SqlFailoverReplica.prototype.name = "";
    
                            /**
                             * SqlFailoverReplica available.
                             * @member {google.protobuf.IBoolValue|null|undefined} available
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @instance
                             */
                            SqlFailoverReplica.prototype.available = null;
    
                            /**
                             * Creates a new SqlFailoverReplica instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlFailoverReplica=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica} SqlFailoverReplica instance
                             */
                            SqlFailoverReplica.create = function create(properties) {
                                return new SqlFailoverReplica(properties);
                            };
    
                            /**
                             * Encodes the specified SqlFailoverReplica message. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlFailoverReplica} message SqlFailoverReplica message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlFailoverReplica.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.available != null && Object.hasOwnProperty.call(message, "available"))
                                    $root.google.protobuf.BoolValue.encode(message.available, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SqlFailoverReplica message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlFailoverReplica} message SqlFailoverReplica message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlFailoverReplica.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SqlFailoverReplica message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica} SqlFailoverReplica
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlFailoverReplica.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.name = reader.string();
                                        break;
                                    case 2:
                                        message.available = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SqlFailoverReplica message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica} SqlFailoverReplica
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlFailoverReplica.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SqlFailoverReplica message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SqlFailoverReplica.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.available != null && message.hasOwnProperty("available")) {
                                    var error = $root.google.protobuf.BoolValue.verify(message.available);
                                    if (error)
                                        return "available." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SqlFailoverReplica message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica} SqlFailoverReplica
                             */
                            SqlFailoverReplica.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.available != null) {
                                    if (typeof object.available !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica.available: object expected");
                                    message.available = $root.google.protobuf.BoolValue.fromObject(object.available);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SqlFailoverReplica message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica} message SqlFailoverReplica
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SqlFailoverReplica.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.available = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.available != null && message.hasOwnProperty("available"))
                                    object.available = $root.google.protobuf.BoolValue.toObject(message.available, options);
                                return object;
                            };
    
                            /**
                             * Converts this SqlFailoverReplica to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlFailoverReplica
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SqlFailoverReplica.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SqlFailoverReplica;
                        })();
    
                        DatabaseInstance.SqlScheduledMaintenance = (function() {
    
                            /**
                             * Properties of a SqlScheduledMaintenance.
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                             * @interface ISqlScheduledMaintenance
                             * @property {google.protobuf.ITimestamp|null} [startTime] SqlScheduledMaintenance startTime
                             * @property {boolean|null} [canDefer] SqlScheduledMaintenance canDefer
                             * @property {boolean|null} [canReschedule] SqlScheduledMaintenance canReschedule
                             */
    
                            /**
                             * Constructs a new SqlScheduledMaintenance.
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                             * @classdesc Represents a SqlScheduledMaintenance.
                             * @implements ISqlScheduledMaintenance
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlScheduledMaintenance=} [properties] Properties to set
                             */
                            function SqlScheduledMaintenance(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SqlScheduledMaintenance startTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} startTime
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @instance
                             */
                            SqlScheduledMaintenance.prototype.startTime = null;
    
                            /**
                             * SqlScheduledMaintenance canDefer.
                             * @member {boolean} canDefer
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @instance
                             */
                            SqlScheduledMaintenance.prototype.canDefer = false;
    
                            /**
                             * SqlScheduledMaintenance canReschedule.
                             * @member {boolean} canReschedule
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @instance
                             */
                            SqlScheduledMaintenance.prototype.canReschedule = false;
    
                            /**
                             * Creates a new SqlScheduledMaintenance instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlScheduledMaintenance=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance} SqlScheduledMaintenance instance
                             */
                            SqlScheduledMaintenance.create = function create(properties) {
                                return new SqlScheduledMaintenance(properties);
                            };
    
                            /**
                             * Encodes the specified SqlScheduledMaintenance message. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlScheduledMaintenance} message SqlScheduledMaintenance message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlScheduledMaintenance.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                    $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.canDefer != null && Object.hasOwnProperty.call(message, "canDefer"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.canDefer);
                                if (message.canReschedule != null && Object.hasOwnProperty.call(message, "canReschedule"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.canReschedule);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SqlScheduledMaintenance message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlScheduledMaintenance} message SqlScheduledMaintenance message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlScheduledMaintenance.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SqlScheduledMaintenance message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance} SqlScheduledMaintenance
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlScheduledMaintenance.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.canDefer = reader.bool();
                                        break;
                                    case 3:
                                        message.canReschedule = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SqlScheduledMaintenance message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance} SqlScheduledMaintenance
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlScheduledMaintenance.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SqlScheduledMaintenance message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SqlScheduledMaintenance.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                    if (error)
                                        return "startTime." + error;
                                }
                                if (message.canDefer != null && message.hasOwnProperty("canDefer"))
                                    if (typeof message.canDefer !== "boolean")
                                        return "canDefer: boolean expected";
                                if (message.canReschedule != null && message.hasOwnProperty("canReschedule"))
                                    if (typeof message.canReschedule !== "boolean")
                                        return "canReschedule: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a SqlScheduledMaintenance message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance} SqlScheduledMaintenance
                             */
                            SqlScheduledMaintenance.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance();
                                if (object.startTime != null) {
                                    if (typeof object.startTime !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance.startTime: object expected");
                                    message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                                }
                                if (object.canDefer != null)
                                    message.canDefer = Boolean(object.canDefer);
                                if (object.canReschedule != null)
                                    message.canReschedule = Boolean(object.canReschedule);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SqlScheduledMaintenance message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance} message SqlScheduledMaintenance
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SqlScheduledMaintenance.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.startTime = null;
                                    object.canDefer = false;
                                    object.canReschedule = false;
                                }
                                if (message.startTime != null && message.hasOwnProperty("startTime"))
                                    object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                                if (message.canDefer != null && message.hasOwnProperty("canDefer"))
                                    object.canDefer = message.canDefer;
                                if (message.canReschedule != null && message.hasOwnProperty("canReschedule"))
                                    object.canReschedule = message.canReschedule;
                                return object;
                            };
    
                            /**
                             * Converts this SqlScheduledMaintenance to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlScheduledMaintenance
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SqlScheduledMaintenance.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SqlScheduledMaintenance;
                        })();
    
                        DatabaseInstance.SqlOutOfDiskReport = (function() {
    
                            /**
                             * Properties of a SqlOutOfDiskReport.
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                             * @interface ISqlOutOfDiskReport
                             * @property {google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState|null} [sqlOutOfDiskState] SqlOutOfDiskReport sqlOutOfDiskState
                             * @property {number|null} [sqlMinRecommendedIncreaseSizeGb] SqlOutOfDiskReport sqlMinRecommendedIncreaseSizeGb
                             */
    
                            /**
                             * Constructs a new SqlOutOfDiskReport.
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance
                             * @classdesc Represents a SqlOutOfDiskReport.
                             * @implements ISqlOutOfDiskReport
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlOutOfDiskReport=} [properties] Properties to set
                             */
                            function SqlOutOfDiskReport(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SqlOutOfDiskReport sqlOutOfDiskState.
                             * @member {google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState|null|undefined} sqlOutOfDiskState
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @instance
                             */
                            SqlOutOfDiskReport.prototype.sqlOutOfDiskState = null;
    
                            /**
                             * SqlOutOfDiskReport sqlMinRecommendedIncreaseSizeGb.
                             * @member {number|null|undefined} sqlMinRecommendedIncreaseSizeGb
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @instance
                             */
                            SqlOutOfDiskReport.prototype.sqlMinRecommendedIncreaseSizeGb = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * SqlOutOfDiskReport _sqlOutOfDiskState.
                             * @member {"sqlOutOfDiskState"|undefined} _sqlOutOfDiskState
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @instance
                             */
                            Object.defineProperty(SqlOutOfDiskReport.prototype, "_sqlOutOfDiskState", {
                                get: $util.oneOfGetter($oneOfFields = ["sqlOutOfDiskState"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * SqlOutOfDiskReport _sqlMinRecommendedIncreaseSizeGb.
                             * @member {"sqlMinRecommendedIncreaseSizeGb"|undefined} _sqlMinRecommendedIncreaseSizeGb
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @instance
                             */
                            Object.defineProperty(SqlOutOfDiskReport.prototype, "_sqlMinRecommendedIncreaseSizeGb", {
                                get: $util.oneOfGetter($oneOfFields = ["sqlMinRecommendedIncreaseSizeGb"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new SqlOutOfDiskReport instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlOutOfDiskReport=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport} SqlOutOfDiskReport instance
                             */
                            SqlOutOfDiskReport.create = function create(properties) {
                                return new SqlOutOfDiskReport(properties);
                            };
    
                            /**
                             * Encodes the specified SqlOutOfDiskReport message. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlOutOfDiskReport} message SqlOutOfDiskReport message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlOutOfDiskReport.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sqlOutOfDiskState != null && Object.hasOwnProperty.call(message, "sqlOutOfDiskState"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.sqlOutOfDiskState);
                                if (message.sqlMinRecommendedIncreaseSizeGb != null && Object.hasOwnProperty.call(message, "sqlMinRecommendedIncreaseSizeGb"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.sqlMinRecommendedIncreaseSizeGb);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SqlOutOfDiskReport message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.ISqlOutOfDiskReport} message SqlOutOfDiskReport message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlOutOfDiskReport.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SqlOutOfDiskReport message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport} SqlOutOfDiskReport
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlOutOfDiskReport.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.sqlOutOfDiskState = reader.int32();
                                        break;
                                    case 2:
                                        message.sqlMinRecommendedIncreaseSizeGb = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SqlOutOfDiskReport message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport} SqlOutOfDiskReport
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlOutOfDiskReport.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SqlOutOfDiskReport message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SqlOutOfDiskReport.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.sqlOutOfDiskState != null && message.hasOwnProperty("sqlOutOfDiskState")) {
                                    properties._sqlOutOfDiskState = 1;
                                    switch (message.sqlOutOfDiskState) {
                                    default:
                                        return "sqlOutOfDiskState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                }
                                if (message.sqlMinRecommendedIncreaseSizeGb != null && message.hasOwnProperty("sqlMinRecommendedIncreaseSizeGb")) {
                                    properties._sqlMinRecommendedIncreaseSizeGb = 1;
                                    if (!$util.isInteger(message.sqlMinRecommendedIncreaseSizeGb))
                                        return "sqlMinRecommendedIncreaseSizeGb: integer expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SqlOutOfDiskReport message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport} SqlOutOfDiskReport
                             */
                            SqlOutOfDiskReport.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport();
                                switch (object.sqlOutOfDiskState) {
                                case "SQL_OUT_OF_DISK_STATE_UNSPECIFIED":
                                case 0:
                                    message.sqlOutOfDiskState = 0;
                                    break;
                                case "NORMAL":
                                case 1:
                                    message.sqlOutOfDiskState = 1;
                                    break;
                                case "SOFT_SHUTDOWN":
                                case 2:
                                    message.sqlOutOfDiskState = 2;
                                    break;
                                }
                                if (object.sqlMinRecommendedIncreaseSizeGb != null)
                                    message.sqlMinRecommendedIncreaseSizeGb = object.sqlMinRecommendedIncreaseSizeGb | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SqlOutOfDiskReport message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @static
                             * @param {google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport} message SqlOutOfDiskReport
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SqlOutOfDiskReport.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.sqlOutOfDiskState != null && message.hasOwnProperty("sqlOutOfDiskState")) {
                                    object.sqlOutOfDiskState = options.enums === String ? $root.google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState[message.sqlOutOfDiskState] : message.sqlOutOfDiskState;
                                    if (options.oneofs)
                                        object._sqlOutOfDiskState = "sqlOutOfDiskState";
                                }
                                if (message.sqlMinRecommendedIncreaseSizeGb != null && message.hasOwnProperty("sqlMinRecommendedIncreaseSizeGb")) {
                                    object.sqlMinRecommendedIncreaseSizeGb = message.sqlMinRecommendedIncreaseSizeGb;
                                    if (options.oneofs)
                                        object._sqlMinRecommendedIncreaseSizeGb = "sqlMinRecommendedIncreaseSizeGb";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SqlOutOfDiskReport to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SqlOutOfDiskReport.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * SqlOutOfDiskState enum.
                             * @name google.cloud.sql.v1beta4.DatabaseInstance.SqlOutOfDiskReport.SqlOutOfDiskState
                             * @enum {number}
                             * @property {number} SQL_OUT_OF_DISK_STATE_UNSPECIFIED=0 SQL_OUT_OF_DISK_STATE_UNSPECIFIED value
                             * @property {number} NORMAL=1 NORMAL value
                             * @property {number} SOFT_SHUTDOWN=2 SOFT_SHUTDOWN value
                             */
                            SqlOutOfDiskReport.SqlOutOfDiskState = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "SQL_OUT_OF_DISK_STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "NORMAL"] = 1;
                                values[valuesById[2] = "SOFT_SHUTDOWN"] = 2;
                                return values;
                            })();
    
                            return SqlOutOfDiskReport;
                        })();
    
                        /**
                         * SqlInstanceState enum.
                         * @name google.cloud.sql.v1beta4.DatabaseInstance.SqlInstanceState
                         * @enum {number}
                         * @property {number} SQL_INSTANCE_STATE_UNSPECIFIED=0 SQL_INSTANCE_STATE_UNSPECIFIED value
                         * @property {number} RUNNABLE=1 RUNNABLE value
                         * @property {number} SUSPENDED=2 SUSPENDED value
                         * @property {number} PENDING_DELETE=3 PENDING_DELETE value
                         * @property {number} PENDING_CREATE=4 PENDING_CREATE value
                         * @property {number} MAINTENANCE=5 MAINTENANCE value
                         * @property {number} FAILED=6 FAILED value
                         */
                        DatabaseInstance.SqlInstanceState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SQL_INSTANCE_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "RUNNABLE"] = 1;
                            values[valuesById[2] = "SUSPENDED"] = 2;
                            values[valuesById[3] = "PENDING_DELETE"] = 3;
                            values[valuesById[4] = "PENDING_CREATE"] = 4;
                            values[valuesById[5] = "MAINTENANCE"] = 5;
                            values[valuesById[6] = "FAILED"] = 6;
                            return values;
                        })();
    
                        return DatabaseInstance;
                    })();
    
                    v1beta4.DatabasesListResponse = (function() {
    
                        /**
                         * Properties of a DatabasesListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDatabasesListResponse
                         * @property {string|null} [kind] DatabasesListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.IDatabase>|null} [items] DatabasesListResponse items
                         */
    
                        /**
                         * Constructs a new DatabasesListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DatabasesListResponse.
                         * @implements IDatabasesListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDatabasesListResponse=} [properties] Properties to set
                         */
                        function DatabasesListResponse(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DatabasesListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @instance
                         */
                        DatabasesListResponse.prototype.kind = "";
    
                        /**
                         * DatabasesListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.IDatabase>} items
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @instance
                         */
                        DatabasesListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * Creates a new DatabasesListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabasesListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DatabasesListResponse} DatabasesListResponse instance
                         */
                        DatabasesListResponse.create = function create(properties) {
                            return new DatabasesListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified DatabasesListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.DatabasesListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabasesListResponse} message DatabasesListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabasesListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.Database.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DatabasesListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DatabasesListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDatabasesListResponse} message DatabasesListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DatabasesListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DatabasesListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DatabasesListResponse} DatabasesListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabasesListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DatabasesListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.Database.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DatabasesListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DatabasesListResponse} DatabasesListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DatabasesListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DatabasesListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DatabasesListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.Database.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DatabasesListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DatabasesListResponse} DatabasesListResponse
                         */
                        DatabasesListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DatabasesListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DatabasesListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.DatabasesListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.DatabasesListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.Database.fromObject(object.items[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DatabasesListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.DatabasesListResponse} message DatabasesListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DatabasesListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults)
                                object.kind = "";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.Database.toObject(message.items[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DatabasesListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DatabasesListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DatabasesListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DatabasesListResponse;
                    })();
    
                    v1beta4.DemoteMasterConfiguration = (function() {
    
                        /**
                         * Properties of a DemoteMasterConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDemoteMasterConfiguration
                         * @property {string|null} [kind] DemoteMasterConfiguration kind
                         * @property {google.cloud.sql.v1beta4.IDemoteMasterMySqlReplicaConfiguration|null} [mysqlReplicaConfiguration] DemoteMasterConfiguration mysqlReplicaConfiguration
                         */
    
                        /**
                         * Constructs a new DemoteMasterConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DemoteMasterConfiguration.
                         * @implements IDemoteMasterConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterConfiguration=} [properties] Properties to set
                         */
                        function DemoteMasterConfiguration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DemoteMasterConfiguration kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @instance
                         */
                        DemoteMasterConfiguration.prototype.kind = "";
    
                        /**
                         * DemoteMasterConfiguration mysqlReplicaConfiguration.
                         * @member {google.cloud.sql.v1beta4.IDemoteMasterMySqlReplicaConfiguration|null|undefined} mysqlReplicaConfiguration
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @instance
                         */
                        DemoteMasterConfiguration.prototype.mysqlReplicaConfiguration = null;
    
                        /**
                         * Creates a new DemoteMasterConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterConfiguration} DemoteMasterConfiguration instance
                         */
                        DemoteMasterConfiguration.create = function create(properties) {
                            return new DemoteMasterConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified DemoteMasterConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.DemoteMasterConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterConfiguration} message DemoteMasterConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DemoteMasterConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.mysqlReplicaConfiguration != null && Object.hasOwnProperty.call(message, "mysqlReplicaConfiguration"))
                                $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.encode(message.mysqlReplicaConfiguration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DemoteMasterConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DemoteMasterConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterConfiguration} message DemoteMasterConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DemoteMasterConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DemoteMasterConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterConfiguration} DemoteMasterConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DemoteMasterConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.mysqlReplicaConfiguration = $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DemoteMasterConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterConfiguration} DemoteMasterConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DemoteMasterConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DemoteMasterConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DemoteMasterConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.mysqlReplicaConfiguration != null && message.hasOwnProperty("mysqlReplicaConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.verify(message.mysqlReplicaConfiguration);
                                if (error)
                                    return "mysqlReplicaConfiguration." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DemoteMasterConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterConfiguration} DemoteMasterConfiguration
                         */
                        DemoteMasterConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.mysqlReplicaConfiguration != null) {
                                if (typeof object.mysqlReplicaConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DemoteMasterConfiguration.mysqlReplicaConfiguration: object expected");
                                message.mysqlReplicaConfiguration = $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.fromObject(object.mysqlReplicaConfiguration);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DemoteMasterConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.DemoteMasterConfiguration} message DemoteMasterConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DemoteMasterConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.mysqlReplicaConfiguration = null;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.mysqlReplicaConfiguration != null && message.hasOwnProperty("mysqlReplicaConfiguration"))
                                object.mysqlReplicaConfiguration = $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.toObject(message.mysqlReplicaConfiguration, options);
                            return object;
                        };
    
                        /**
                         * Converts this DemoteMasterConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DemoteMasterConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DemoteMasterConfiguration;
                    })();
    
                    v1beta4.DemoteMasterContext = (function() {
    
                        /**
                         * Properties of a DemoteMasterContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDemoteMasterContext
                         * @property {string|null} [kind] DemoteMasterContext kind
                         * @property {google.protobuf.IBoolValue|null} [verifyGtidConsistency] DemoteMasterContext verifyGtidConsistency
                         * @property {string|null} [masterInstanceName] DemoteMasterContext masterInstanceName
                         * @property {google.cloud.sql.v1beta4.IDemoteMasterConfiguration|null} [replicaConfiguration] DemoteMasterContext replicaConfiguration
                         */
    
                        /**
                         * Constructs a new DemoteMasterContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DemoteMasterContext.
                         * @implements IDemoteMasterContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterContext=} [properties] Properties to set
                         */
                        function DemoteMasterContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DemoteMasterContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @instance
                         */
                        DemoteMasterContext.prototype.kind = "";
    
                        /**
                         * DemoteMasterContext verifyGtidConsistency.
                         * @member {google.protobuf.IBoolValue|null|undefined} verifyGtidConsistency
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @instance
                         */
                        DemoteMasterContext.prototype.verifyGtidConsistency = null;
    
                        /**
                         * DemoteMasterContext masterInstanceName.
                         * @member {string} masterInstanceName
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @instance
                         */
                        DemoteMasterContext.prototype.masterInstanceName = "";
    
                        /**
                         * DemoteMasterContext replicaConfiguration.
                         * @member {google.cloud.sql.v1beta4.IDemoteMasterConfiguration|null|undefined} replicaConfiguration
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @instance
                         */
                        DemoteMasterContext.prototype.replicaConfiguration = null;
    
                        /**
                         * Creates a new DemoteMasterContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterContext} DemoteMasterContext instance
                         */
                        DemoteMasterContext.create = function create(properties) {
                            return new DemoteMasterContext(properties);
                        };
    
                        /**
                         * Encodes the specified DemoteMasterContext message. Does not implicitly {@link google.cloud.sql.v1beta4.DemoteMasterContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterContext} message DemoteMasterContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DemoteMasterContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.verifyGtidConsistency != null && Object.hasOwnProperty.call(message, "verifyGtidConsistency"))
                                $root.google.protobuf.BoolValue.encode(message.verifyGtidConsistency, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.masterInstanceName != null && Object.hasOwnProperty.call(message, "masterInstanceName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.masterInstanceName);
                            if (message.replicaConfiguration != null && Object.hasOwnProperty.call(message, "replicaConfiguration"))
                                $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration.encode(message.replicaConfiguration, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DemoteMasterContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DemoteMasterContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterContext} message DemoteMasterContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DemoteMasterContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DemoteMasterContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterContext} DemoteMasterContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DemoteMasterContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DemoteMasterContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.verifyGtidConsistency = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.masterInstanceName = reader.string();
                                    break;
                                case 4:
                                    message.replicaConfiguration = $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DemoteMasterContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterContext} DemoteMasterContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DemoteMasterContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DemoteMasterContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DemoteMasterContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.verifyGtidConsistency != null && message.hasOwnProperty("verifyGtidConsistency")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.verifyGtidConsistency);
                                if (error)
                                    return "verifyGtidConsistency." + error;
                            }
                            if (message.masterInstanceName != null && message.hasOwnProperty("masterInstanceName"))
                                if (!$util.isString(message.masterInstanceName))
                                    return "masterInstanceName: string expected";
                            if (message.replicaConfiguration != null && message.hasOwnProperty("replicaConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration.verify(message.replicaConfiguration);
                                if (error)
                                    return "replicaConfiguration." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DemoteMasterContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterContext} DemoteMasterContext
                         */
                        DemoteMasterContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DemoteMasterContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DemoteMasterContext();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.verifyGtidConsistency != null) {
                                if (typeof object.verifyGtidConsistency !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DemoteMasterContext.verifyGtidConsistency: object expected");
                                message.verifyGtidConsistency = $root.google.protobuf.BoolValue.fromObject(object.verifyGtidConsistency);
                            }
                            if (object.masterInstanceName != null)
                                message.masterInstanceName = String(object.masterInstanceName);
                            if (object.replicaConfiguration != null) {
                                if (typeof object.replicaConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.DemoteMasterContext.replicaConfiguration: object expected");
                                message.replicaConfiguration = $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration.fromObject(object.replicaConfiguration);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DemoteMasterContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.DemoteMasterContext} message DemoteMasterContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DemoteMasterContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.verifyGtidConsistency = null;
                                object.masterInstanceName = "";
                                object.replicaConfiguration = null;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.verifyGtidConsistency != null && message.hasOwnProperty("verifyGtidConsistency"))
                                object.verifyGtidConsistency = $root.google.protobuf.BoolValue.toObject(message.verifyGtidConsistency, options);
                            if (message.masterInstanceName != null && message.hasOwnProperty("masterInstanceName"))
                                object.masterInstanceName = message.masterInstanceName;
                            if (message.replicaConfiguration != null && message.hasOwnProperty("replicaConfiguration"))
                                object.replicaConfiguration = $root.google.cloud.sql.v1beta4.DemoteMasterConfiguration.toObject(message.replicaConfiguration, options);
                            return object;
                        };
    
                        /**
                         * Converts this DemoteMasterContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DemoteMasterContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DemoteMasterContext;
                    })();
    
                    v1beta4.DemoteMasterMySqlReplicaConfiguration = (function() {
    
                        /**
                         * Properties of a DemoteMasterMySqlReplicaConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDemoteMasterMySqlReplicaConfiguration
                         * @property {string|null} [kind] DemoteMasterMySqlReplicaConfiguration kind
                         * @property {string|null} [username] DemoteMasterMySqlReplicaConfiguration username
                         * @property {string|null} [password] DemoteMasterMySqlReplicaConfiguration password
                         * @property {string|null} [clientKey] DemoteMasterMySqlReplicaConfiguration clientKey
                         * @property {string|null} [clientCertificate] DemoteMasterMySqlReplicaConfiguration clientCertificate
                         * @property {string|null} [caCertificate] DemoteMasterMySqlReplicaConfiguration caCertificate
                         */
    
                        /**
                         * Constructs a new DemoteMasterMySqlReplicaConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DemoteMasterMySqlReplicaConfiguration.
                         * @implements IDemoteMasterMySqlReplicaConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterMySqlReplicaConfiguration=} [properties] Properties to set
                         */
                        function DemoteMasterMySqlReplicaConfiguration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DemoteMasterMySqlReplicaConfiguration kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @instance
                         */
                        DemoteMasterMySqlReplicaConfiguration.prototype.kind = "";
    
                        /**
                         * DemoteMasterMySqlReplicaConfiguration username.
                         * @member {string} username
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @instance
                         */
                        DemoteMasterMySqlReplicaConfiguration.prototype.username = "";
    
                        /**
                         * DemoteMasterMySqlReplicaConfiguration password.
                         * @member {string} password
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @instance
                         */
                        DemoteMasterMySqlReplicaConfiguration.prototype.password = "";
    
                        /**
                         * DemoteMasterMySqlReplicaConfiguration clientKey.
                         * @member {string} clientKey
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @instance
                         */
                        DemoteMasterMySqlReplicaConfiguration.prototype.clientKey = "";
    
                        /**
                         * DemoteMasterMySqlReplicaConfiguration clientCertificate.
                         * @member {string} clientCertificate
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @instance
                         */
                        DemoteMasterMySqlReplicaConfiguration.prototype.clientCertificate = "";
    
                        /**
                         * DemoteMasterMySqlReplicaConfiguration caCertificate.
                         * @member {string} caCertificate
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @instance
                         */
                        DemoteMasterMySqlReplicaConfiguration.prototype.caCertificate = "";
    
                        /**
                         * Creates a new DemoteMasterMySqlReplicaConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterMySqlReplicaConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration} DemoteMasterMySqlReplicaConfiguration instance
                         */
                        DemoteMasterMySqlReplicaConfiguration.create = function create(properties) {
                            return new DemoteMasterMySqlReplicaConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified DemoteMasterMySqlReplicaConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterMySqlReplicaConfiguration} message DemoteMasterMySqlReplicaConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DemoteMasterMySqlReplicaConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.password);
                            if (message.clientKey != null && Object.hasOwnProperty.call(message, "clientKey"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.clientKey);
                            if (message.clientCertificate != null && Object.hasOwnProperty.call(message, "clientCertificate"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.clientCertificate);
                            if (message.caCertificate != null && Object.hasOwnProperty.call(message, "caCertificate"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.caCertificate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DemoteMasterMySqlReplicaConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDemoteMasterMySqlReplicaConfiguration} message DemoteMasterMySqlReplicaConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DemoteMasterMySqlReplicaConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DemoteMasterMySqlReplicaConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration} DemoteMasterMySqlReplicaConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DemoteMasterMySqlReplicaConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.username = reader.string();
                                    break;
                                case 3:
                                    message.password = reader.string();
                                    break;
                                case 4:
                                    message.clientKey = reader.string();
                                    break;
                                case 5:
                                    message.clientCertificate = reader.string();
                                    break;
                                case 6:
                                    message.caCertificate = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DemoteMasterMySqlReplicaConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration} DemoteMasterMySqlReplicaConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DemoteMasterMySqlReplicaConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DemoteMasterMySqlReplicaConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DemoteMasterMySqlReplicaConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                if (!$util.isString(message.clientKey))
                                    return "clientKey: string expected";
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                if (!$util.isString(message.clientCertificate))
                                    return "clientCertificate: string expected";
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                if (!$util.isString(message.caCertificate))
                                    return "caCertificate: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DemoteMasterMySqlReplicaConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration} DemoteMasterMySqlReplicaConfiguration
                         */
                        DemoteMasterMySqlReplicaConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.clientKey != null)
                                message.clientKey = String(object.clientKey);
                            if (object.clientCertificate != null)
                                message.clientCertificate = String(object.clientCertificate);
                            if (object.caCertificate != null)
                                message.caCertificate = String(object.caCertificate);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DemoteMasterMySqlReplicaConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration} message DemoteMasterMySqlReplicaConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DemoteMasterMySqlReplicaConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.username = "";
                                object.password = "";
                                object.clientKey = "";
                                object.clientCertificate = "";
                                object.caCertificate = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                object.clientKey = message.clientKey;
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                object.clientCertificate = message.clientCertificate;
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                object.caCertificate = message.caCertificate;
                            return object;
                        };
    
                        /**
                         * Converts this DemoteMasterMySqlReplicaConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DemoteMasterMySqlReplicaConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DemoteMasterMySqlReplicaConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DemoteMasterMySqlReplicaConfiguration;
                    })();
    
                    v1beta4.ExportContext = (function() {
    
                        /**
                         * Properties of an ExportContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IExportContext
                         * @property {string|null} [uri] ExportContext uri
                         * @property {Array.<string>|null} [databases] ExportContext databases
                         * @property {string|null} [kind] ExportContext kind
                         * @property {google.cloud.sql.v1beta4.ExportContext.ISqlExportOptions|null} [sqlExportOptions] ExportContext sqlExportOptions
                         * @property {google.cloud.sql.v1beta4.ExportContext.ISqlCsvExportOptions|null} [csvExportOptions] ExportContext csvExportOptions
                         * @property {google.cloud.sql.v1beta4.SqlFileType|null} [fileType] ExportContext fileType
                         * @property {google.protobuf.IBoolValue|null} [offload] ExportContext offload
                         */
    
                        /**
                         * Constructs a new ExportContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an ExportContext.
                         * @implements IExportContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IExportContext=} [properties] Properties to set
                         */
                        function ExportContext(properties) {
                            this.databases = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExportContext uri.
                         * @member {string} uri
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         */
                        ExportContext.prototype.uri = "";
    
                        /**
                         * ExportContext databases.
                         * @member {Array.<string>} databases
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         */
                        ExportContext.prototype.databases = $util.emptyArray;
    
                        /**
                         * ExportContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         */
                        ExportContext.prototype.kind = "";
    
                        /**
                         * ExportContext sqlExportOptions.
                         * @member {google.cloud.sql.v1beta4.ExportContext.ISqlExportOptions|null|undefined} sqlExportOptions
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         */
                        ExportContext.prototype.sqlExportOptions = null;
    
                        /**
                         * ExportContext csvExportOptions.
                         * @member {google.cloud.sql.v1beta4.ExportContext.ISqlCsvExportOptions|null|undefined} csvExportOptions
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         */
                        ExportContext.prototype.csvExportOptions = null;
    
                        /**
                         * ExportContext fileType.
                         * @member {google.cloud.sql.v1beta4.SqlFileType} fileType
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         */
                        ExportContext.prototype.fileType = 0;
    
                        /**
                         * ExportContext offload.
                         * @member {google.protobuf.IBoolValue|null|undefined} offload
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         */
                        ExportContext.prototype.offload = null;
    
                        /**
                         * Creates a new ExportContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IExportContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.ExportContext} ExportContext instance
                         */
                        ExportContext.create = function create(properties) {
                            return new ExportContext(properties);
                        };
    
                        /**
                         * Encodes the specified ExportContext message. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IExportContext} message ExportContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.databases != null && message.databases.length)
                                for (var i = 0; i < message.databases.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.databases[i]);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                            if (message.sqlExportOptions != null && Object.hasOwnProperty.call(message, "sqlExportOptions"))
                                $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.encode(message.sqlExportOptions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.csvExportOptions != null && Object.hasOwnProperty.call(message, "csvExportOptions"))
                                $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.encode(message.csvExportOptions, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.fileType != null && Object.hasOwnProperty.call(message, "fileType"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.fileType);
                            if (message.offload != null && Object.hasOwnProperty.call(message, "offload"))
                                $root.google.protobuf.BoolValue.encode(message.offload, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExportContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IExportContext} message ExportContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExportContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExportContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.ExportContext} ExportContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ExportContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.uri = reader.string();
                                    break;
                                case 2:
                                    if (!(message.databases && message.databases.length))
                                        message.databases = [];
                                    message.databases.push(reader.string());
                                    break;
                                case 3:
                                    message.kind = reader.string();
                                    break;
                                case 4:
                                    message.sqlExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.csvExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.fileType = reader.int32();
                                    break;
                                case 8:
                                    message.offload = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExportContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.ExportContext} ExportContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExportContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExportContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExportContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.databases != null && message.hasOwnProperty("databases")) {
                                if (!Array.isArray(message.databases))
                                    return "databases: array expected";
                                for (var i = 0; i < message.databases.length; ++i)
                                    if (!$util.isString(message.databases[i]))
                                        return "databases: string[] expected";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.sqlExportOptions != null && message.hasOwnProperty("sqlExportOptions")) {
                                var error = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.verify(message.sqlExportOptions);
                                if (error)
                                    return "sqlExportOptions." + error;
                            }
                            if (message.csvExportOptions != null && message.hasOwnProperty("csvExportOptions")) {
                                var error = $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.verify(message.csvExportOptions);
                                if (error)
                                    return "csvExportOptions." + error;
                            }
                            if (message.fileType != null && message.hasOwnProperty("fileType"))
                                switch (message.fileType) {
                                default:
                                    return "fileType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 4:
                                    break;
                                }
                            if (message.offload != null && message.hasOwnProperty("offload")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.offload);
                                if (error)
                                    return "offload." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ExportContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.ExportContext} ExportContext
                         */
                        ExportContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.ExportContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.ExportContext();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.databases) {
                                if (!Array.isArray(object.databases))
                                    throw TypeError(".google.cloud.sql.v1beta4.ExportContext.databases: array expected");
                                message.databases = [];
                                for (var i = 0; i < object.databases.length; ++i)
                                    message.databases[i] = String(object.databases[i]);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.sqlExportOptions != null) {
                                if (typeof object.sqlExportOptions !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.ExportContext.sqlExportOptions: object expected");
                                message.sqlExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.fromObject(object.sqlExportOptions);
                            }
                            if (object.csvExportOptions != null) {
                                if (typeof object.csvExportOptions !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.ExportContext.csvExportOptions: object expected");
                                message.csvExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.fromObject(object.csvExportOptions);
                            }
                            switch (object.fileType) {
                            case "SQL_FILE_TYPE_UNSPECIFIED":
                            case 0:
                                message.fileType = 0;
                                break;
                            case "SQL":
                            case 1:
                                message.fileType = 1;
                                break;
                            case "CSV":
                            case 2:
                                message.fileType = 2;
                                break;
                            case "BAK":
                            case 4:
                                message.fileType = 4;
                                break;
                            }
                            if (object.offload != null) {
                                if (typeof object.offload !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.ExportContext.offload: object expected");
                                message.offload = $root.google.protobuf.BoolValue.fromObject(object.offload);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExportContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ExportContext} message ExportContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExportContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.databases = [];
                            if (options.defaults) {
                                object.uri = "";
                                object.kind = "";
                                object.sqlExportOptions = null;
                                object.csvExportOptions = null;
                                object.fileType = options.enums === String ? "SQL_FILE_TYPE_UNSPECIFIED" : 0;
                                object.offload = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.databases && message.databases.length) {
                                object.databases = [];
                                for (var j = 0; j < message.databases.length; ++j)
                                    object.databases[j] = message.databases[j];
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.sqlExportOptions != null && message.hasOwnProperty("sqlExportOptions"))
                                object.sqlExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.toObject(message.sqlExportOptions, options);
                            if (message.csvExportOptions != null && message.hasOwnProperty("csvExportOptions"))
                                object.csvExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.toObject(message.csvExportOptions, options);
                            if (message.fileType != null && message.hasOwnProperty("fileType"))
                                object.fileType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlFileType[message.fileType] : message.fileType;
                            if (message.offload != null && message.hasOwnProperty("offload"))
                                object.offload = $root.google.protobuf.BoolValue.toObject(message.offload, options);
                            return object;
                        };
    
                        /**
                         * Converts this ExportContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.ExportContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExportContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        ExportContext.SqlCsvExportOptions = (function() {
    
                            /**
                             * Properties of a SqlCsvExportOptions.
                             * @memberof google.cloud.sql.v1beta4.ExportContext
                             * @interface ISqlCsvExportOptions
                             * @property {string|null} [selectQuery] SqlCsvExportOptions selectQuery
                             */
    
                            /**
                             * Constructs a new SqlCsvExportOptions.
                             * @memberof google.cloud.sql.v1beta4.ExportContext
                             * @classdesc Represents a SqlCsvExportOptions.
                             * @implements ISqlCsvExportOptions
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlCsvExportOptions=} [properties] Properties to set
                             */
                            function SqlCsvExportOptions(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SqlCsvExportOptions selectQuery.
                             * @member {string} selectQuery
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @instance
                             */
                            SqlCsvExportOptions.prototype.selectQuery = "";
    
                            /**
                             * Creates a new SqlCsvExportOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlCsvExportOptions=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions} SqlCsvExportOptions instance
                             */
                            SqlCsvExportOptions.create = function create(properties) {
                                return new SqlCsvExportOptions(properties);
                            };
    
                            /**
                             * Encodes the specified SqlCsvExportOptions message. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlCsvExportOptions} message SqlCsvExportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlCsvExportOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.selectQuery != null && Object.hasOwnProperty.call(message, "selectQuery"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.selectQuery);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SqlCsvExportOptions message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlCsvExportOptions} message SqlCsvExportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlCsvExportOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SqlCsvExportOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions} SqlCsvExportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlCsvExportOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.selectQuery = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SqlCsvExportOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions} SqlCsvExportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlCsvExportOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SqlCsvExportOptions message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SqlCsvExportOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.selectQuery != null && message.hasOwnProperty("selectQuery"))
                                    if (!$util.isString(message.selectQuery))
                                        return "selectQuery: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a SqlCsvExportOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions} SqlCsvExportOptions
                             */
                            SqlCsvExportOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions();
                                if (object.selectQuery != null)
                                    message.selectQuery = String(object.selectQuery);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SqlCsvExportOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions} message SqlCsvExportOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SqlCsvExportOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.selectQuery = "";
                                if (message.selectQuery != null && message.hasOwnProperty("selectQuery"))
                                    object.selectQuery = message.selectQuery;
                                return object;
                            };
    
                            /**
                             * Converts this SqlCsvExportOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlCsvExportOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SqlCsvExportOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SqlCsvExportOptions;
                        })();
    
                        ExportContext.SqlExportOptions = (function() {
    
                            /**
                             * Properties of a SqlExportOptions.
                             * @memberof google.cloud.sql.v1beta4.ExportContext
                             * @interface ISqlExportOptions
                             * @property {Array.<string>|null} [tables] SqlExportOptions tables
                             * @property {google.protobuf.IBoolValue|null} [schemaOnly] SqlExportOptions schemaOnly
                             * @property {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.IMysqlExportOptions|null} [mysqlExportOptions] SqlExportOptions mysqlExportOptions
                             */
    
                            /**
                             * Constructs a new SqlExportOptions.
                             * @memberof google.cloud.sql.v1beta4.ExportContext
                             * @classdesc Represents a SqlExportOptions.
                             * @implements ISqlExportOptions
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlExportOptions=} [properties] Properties to set
                             */
                            function SqlExportOptions(properties) {
                                this.tables = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SqlExportOptions tables.
                             * @member {Array.<string>} tables
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @instance
                             */
                            SqlExportOptions.prototype.tables = $util.emptyArray;
    
                            /**
                             * SqlExportOptions schemaOnly.
                             * @member {google.protobuf.IBoolValue|null|undefined} schemaOnly
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @instance
                             */
                            SqlExportOptions.prototype.schemaOnly = null;
    
                            /**
                             * SqlExportOptions mysqlExportOptions.
                             * @member {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.IMysqlExportOptions|null|undefined} mysqlExportOptions
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @instance
                             */
                            SqlExportOptions.prototype.mysqlExportOptions = null;
    
                            /**
                             * Creates a new SqlExportOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlExportOptions=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions} SqlExportOptions instance
                             */
                            SqlExportOptions.create = function create(properties) {
                                return new SqlExportOptions(properties);
                            };
    
                            /**
                             * Encodes the specified SqlExportOptions message. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlExportOptions} message SqlExportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlExportOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.tables != null && message.tables.length)
                                    for (var i = 0; i < message.tables.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.tables[i]);
                                if (message.schemaOnly != null && Object.hasOwnProperty.call(message, "schemaOnly"))
                                    $root.google.protobuf.BoolValue.encode(message.schemaOnly, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.mysqlExportOptions != null && Object.hasOwnProperty.call(message, "mysqlExportOptions"))
                                    $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.encode(message.mysqlExportOptions, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SqlExportOptions message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.ISqlExportOptions} message SqlExportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlExportOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SqlExportOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions} SqlExportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlExportOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        if (!(message.tables && message.tables.length))
                                            message.tables = [];
                                        message.tables.push(reader.string());
                                        break;
                                    case 2:
                                        message.schemaOnly = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.mysqlExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SqlExportOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions} SqlExportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlExportOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SqlExportOptions message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SqlExportOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.tables != null && message.hasOwnProperty("tables")) {
                                    if (!Array.isArray(message.tables))
                                        return "tables: array expected";
                                    for (var i = 0; i < message.tables.length; ++i)
                                        if (!$util.isString(message.tables[i]))
                                            return "tables: string[] expected";
                                }
                                if (message.schemaOnly != null && message.hasOwnProperty("schemaOnly")) {
                                    var error = $root.google.protobuf.BoolValue.verify(message.schemaOnly);
                                    if (error)
                                        return "schemaOnly." + error;
                                }
                                if (message.mysqlExportOptions != null && message.hasOwnProperty("mysqlExportOptions")) {
                                    var error = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.verify(message.mysqlExportOptions);
                                    if (error)
                                        return "mysqlExportOptions." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SqlExportOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions} SqlExportOptions
                             */
                            SqlExportOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions();
                                if (object.tables) {
                                    if (!Array.isArray(object.tables))
                                        throw TypeError(".google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.tables: array expected");
                                    message.tables = [];
                                    for (var i = 0; i < object.tables.length; ++i)
                                        message.tables[i] = String(object.tables[i]);
                                }
                                if (object.schemaOnly != null) {
                                    if (typeof object.schemaOnly !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.schemaOnly: object expected");
                                    message.schemaOnly = $root.google.protobuf.BoolValue.fromObject(object.schemaOnly);
                                }
                                if (object.mysqlExportOptions != null) {
                                    if (typeof object.mysqlExportOptions !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.mysqlExportOptions: object expected");
                                    message.mysqlExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.fromObject(object.mysqlExportOptions);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SqlExportOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions} message SqlExportOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SqlExportOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.tables = [];
                                if (options.defaults) {
                                    object.schemaOnly = null;
                                    object.mysqlExportOptions = null;
                                }
                                if (message.tables && message.tables.length) {
                                    object.tables = [];
                                    for (var j = 0; j < message.tables.length; ++j)
                                        object.tables[j] = message.tables[j];
                                }
                                if (message.schemaOnly != null && message.hasOwnProperty("schemaOnly"))
                                    object.schemaOnly = $root.google.protobuf.BoolValue.toObject(message.schemaOnly, options);
                                if (message.mysqlExportOptions != null && message.hasOwnProperty("mysqlExportOptions"))
                                    object.mysqlExportOptions = $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.toObject(message.mysqlExportOptions, options);
                                return object;
                            };
    
                            /**
                             * Converts this SqlExportOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SqlExportOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            SqlExportOptions.MysqlExportOptions = (function() {
    
                                /**
                                 * Properties of a MysqlExportOptions.
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                                 * @interface IMysqlExportOptions
                                 * @property {google.protobuf.IInt32Value|null} [masterData] MysqlExportOptions masterData
                                 */
    
                                /**
                                 * Constructs a new MysqlExportOptions.
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions
                                 * @classdesc Represents a MysqlExportOptions.
                                 * @implements IMysqlExportOptions
                                 * @constructor
                                 * @param {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.IMysqlExportOptions=} [properties] Properties to set
                                 */
                                function MysqlExportOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * MysqlExportOptions masterData.
                                 * @member {google.protobuf.IInt32Value|null|undefined} masterData
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @instance
                                 */
                                MysqlExportOptions.prototype.masterData = null;
    
                                /**
                                 * Creates a new MysqlExportOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.IMysqlExportOptions=} [properties] Properties to set
                                 * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions} MysqlExportOptions instance
                                 */
                                MysqlExportOptions.create = function create(properties) {
                                    return new MysqlExportOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified MysqlExportOptions message. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.IMysqlExportOptions} message MysqlExportOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                MysqlExportOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.masterData != null && Object.hasOwnProperty.call(message, "masterData"))
                                        $root.google.protobuf.Int32Value.encode(message.masterData, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified MysqlExportOptions message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.IMysqlExportOptions} message MysqlExportOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                MysqlExportOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a MysqlExportOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions} MysqlExportOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                MysqlExportOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1:
                                            message.masterData = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a MysqlExportOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions} MysqlExportOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                MysqlExportOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a MysqlExportOptions message.
                                 * @function verify
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                MysqlExportOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.masterData != null && message.hasOwnProperty("masterData")) {
                                        var error = $root.google.protobuf.Int32Value.verify(message.masterData);
                                        if (error)
                                            return "masterData." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a MysqlExportOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions} MysqlExportOptions
                                 */
                                MysqlExportOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions)
                                        return object;
                                    var message = new $root.google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions();
                                    if (object.masterData != null) {
                                        if (typeof object.masterData !== "object")
                                            throw TypeError(".google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions.masterData: object expected");
                                        message.masterData = $root.google.protobuf.Int32Value.fromObject(object.masterData);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a MysqlExportOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions} message MysqlExportOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                MysqlExportOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.masterData = null;
                                    if (message.masterData != null && message.hasOwnProperty("masterData"))
                                        object.masterData = $root.google.protobuf.Int32Value.toObject(message.masterData, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this MysqlExportOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.sql.v1beta4.ExportContext.SqlExportOptions.MysqlExportOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                MysqlExportOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                return MysqlExportOptions;
                            })();
    
                            return SqlExportOptions;
                        })();
    
                        return ExportContext;
                    })();
    
                    v1beta4.FailoverContext = (function() {
    
                        /**
                         * Properties of a FailoverContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IFailoverContext
                         * @property {number|Long|null} [settingsVersion] FailoverContext settingsVersion
                         * @property {string|null} [kind] FailoverContext kind
                         */
    
                        /**
                         * Constructs a new FailoverContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a FailoverContext.
                         * @implements IFailoverContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IFailoverContext=} [properties] Properties to set
                         */
                        function FailoverContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FailoverContext settingsVersion.
                         * @member {number|Long} settingsVersion
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @instance
                         */
                        FailoverContext.prototype.settingsVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * FailoverContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @instance
                         */
                        FailoverContext.prototype.kind = "";
    
                        /**
                         * Creates a new FailoverContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFailoverContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.FailoverContext} FailoverContext instance
                         */
                        FailoverContext.create = function create(properties) {
                            return new FailoverContext(properties);
                        };
    
                        /**
                         * Encodes the specified FailoverContext message. Does not implicitly {@link google.cloud.sql.v1beta4.FailoverContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFailoverContext} message FailoverContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FailoverContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.settingsVersion != null && Object.hasOwnProperty.call(message, "settingsVersion"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.settingsVersion);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FailoverContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.FailoverContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFailoverContext} message FailoverContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FailoverContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FailoverContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.FailoverContext} FailoverContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FailoverContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.FailoverContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.settingsVersion = reader.int64();
                                    break;
                                case 2:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FailoverContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.FailoverContext} FailoverContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FailoverContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FailoverContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FailoverContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.settingsVersion != null && message.hasOwnProperty("settingsVersion"))
                                if (!$util.isInteger(message.settingsVersion) && !(message.settingsVersion && $util.isInteger(message.settingsVersion.low) && $util.isInteger(message.settingsVersion.high)))
                                    return "settingsVersion: integer|Long expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a FailoverContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.FailoverContext} FailoverContext
                         */
                        FailoverContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.FailoverContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.FailoverContext();
                            if (object.settingsVersion != null)
                                if ($util.Long)
                                    (message.settingsVersion = $util.Long.fromValue(object.settingsVersion)).unsigned = false;
                                else if (typeof object.settingsVersion === "string")
                                    message.settingsVersion = parseInt(object.settingsVersion, 10);
                                else if (typeof object.settingsVersion === "number")
                                    message.settingsVersion = object.settingsVersion;
                                else if (typeof object.settingsVersion === "object")
                                    message.settingsVersion = new $util.LongBits(object.settingsVersion.low >>> 0, object.settingsVersion.high >>> 0).toNumber();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FailoverContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.FailoverContext} message FailoverContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FailoverContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.settingsVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.settingsVersion = options.longs === String ? "0" : 0;
                                object.kind = "";
                            }
                            if (message.settingsVersion != null && message.hasOwnProperty("settingsVersion"))
                                if (typeof message.settingsVersion === "number")
                                    object.settingsVersion = options.longs === String ? String(message.settingsVersion) : message.settingsVersion;
                                else
                                    object.settingsVersion = options.longs === String ? $util.Long.prototype.toString.call(message.settingsVersion) : options.longs === Number ? new $util.LongBits(message.settingsVersion.low >>> 0, message.settingsVersion.high >>> 0).toNumber() : message.settingsVersion;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this FailoverContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.FailoverContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FailoverContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return FailoverContext;
                    })();
    
                    v1beta4.Flag = (function() {
    
                        /**
                         * Properties of a Flag.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IFlag
                         * @property {string|null} [name] Flag name
                         * @property {google.cloud.sql.v1beta4.SqlFlagType|null} [type] Flag type
                         * @property {Array.<google.cloud.sql.v1beta4.SqlDatabaseVersion>|null} [appliesTo] Flag appliesTo
                         * @property {Array.<string>|null} [allowedStringValues] Flag allowedStringValues
                         * @property {google.protobuf.IInt64Value|null} [minValue] Flag minValue
                         * @property {google.protobuf.IInt64Value|null} [maxValue] Flag maxValue
                         * @property {google.protobuf.IBoolValue|null} [requiresRestart] Flag requiresRestart
                         * @property {string|null} [kind] Flag kind
                         * @property {google.protobuf.IBoolValue|null} [inBeta] Flag inBeta
                         * @property {Array.<number|Long>|null} [allowedIntValues] Flag allowedIntValues
                         */
    
                        /**
                         * Constructs a new Flag.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a Flag.
                         * @implements IFlag
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IFlag=} [properties] Properties to set
                         */
                        function Flag(properties) {
                            this.appliesTo = [];
                            this.allowedStringValues = [];
                            this.allowedIntValues = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Flag name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.name = "";
    
                        /**
                         * Flag type.
                         * @member {google.cloud.sql.v1beta4.SqlFlagType} type
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.type = 0;
    
                        /**
                         * Flag appliesTo.
                         * @member {Array.<google.cloud.sql.v1beta4.SqlDatabaseVersion>} appliesTo
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.appliesTo = $util.emptyArray;
    
                        /**
                         * Flag allowedStringValues.
                         * @member {Array.<string>} allowedStringValues
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.allowedStringValues = $util.emptyArray;
    
                        /**
                         * Flag minValue.
                         * @member {google.protobuf.IInt64Value|null|undefined} minValue
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.minValue = null;
    
                        /**
                         * Flag maxValue.
                         * @member {google.protobuf.IInt64Value|null|undefined} maxValue
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.maxValue = null;
    
                        /**
                         * Flag requiresRestart.
                         * @member {google.protobuf.IBoolValue|null|undefined} requiresRestart
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.requiresRestart = null;
    
                        /**
                         * Flag kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.kind = "";
    
                        /**
                         * Flag inBeta.
                         * @member {google.protobuf.IBoolValue|null|undefined} inBeta
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.inBeta = null;
    
                        /**
                         * Flag allowedIntValues.
                         * @member {Array.<number|Long>} allowedIntValues
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         */
                        Flag.prototype.allowedIntValues = $util.emptyArray;
    
                        /**
                         * Creates a new Flag instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFlag=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.Flag} Flag instance
                         */
                        Flag.create = function create(properties) {
                            return new Flag(properties);
                        };
    
                        /**
                         * Encodes the specified Flag message. Does not implicitly {@link google.cloud.sql.v1beta4.Flag.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFlag} message Flag message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Flag.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.appliesTo != null && message.appliesTo.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.appliesTo.length; ++i)
                                    writer.int32(message.appliesTo[i]);
                                writer.ldelim();
                            }
                            if (message.allowedStringValues != null && message.allowedStringValues.length)
                                for (var i = 0; i < message.allowedStringValues.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.allowedStringValues[i]);
                            if (message.minValue != null && Object.hasOwnProperty.call(message, "minValue"))
                                $root.google.protobuf.Int64Value.encode(message.minValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.maxValue != null && Object.hasOwnProperty.call(message, "maxValue"))
                                $root.google.protobuf.Int64Value.encode(message.maxValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.requiresRestart != null && Object.hasOwnProperty.call(message, "requiresRestart"))
                                $root.google.protobuf.BoolValue.encode(message.requiresRestart, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.kind);
                            if (message.inBeta != null && Object.hasOwnProperty.call(message, "inBeta"))
                                $root.google.protobuf.BoolValue.encode(message.inBeta, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.allowedIntValues != null && message.allowedIntValues.length) {
                                writer.uint32(/* id 10, wireType 2 =*/82).fork();
                                for (var i = 0; i < message.allowedIntValues.length; ++i)
                                    writer.int64(message.allowedIntValues[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Flag message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.Flag.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFlag} message Flag message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Flag.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Flag message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.Flag} Flag
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Flag.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.Flag();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.type = reader.int32();
                                    break;
                                case 3:
                                    if (!(message.appliesTo && message.appliesTo.length))
                                        message.appliesTo = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.appliesTo.push(reader.int32());
                                    } else
                                        message.appliesTo.push(reader.int32());
                                    break;
                                case 4:
                                    if (!(message.allowedStringValues && message.allowedStringValues.length))
                                        message.allowedStringValues = [];
                                    message.allowedStringValues.push(reader.string());
                                    break;
                                case 5:
                                    message.minValue = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.maxValue = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.requiresRestart = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.kind = reader.string();
                                    break;
                                case 9:
                                    message.inBeta = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    if (!(message.allowedIntValues && message.allowedIntValues.length))
                                        message.allowedIntValues = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.allowedIntValues.push(reader.int64());
                                    } else
                                        message.allowedIntValues.push(reader.int64());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Flag message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.Flag} Flag
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Flag.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Flag message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Flag.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                    break;
                                }
                            if (message.appliesTo != null && message.hasOwnProperty("appliesTo")) {
                                if (!Array.isArray(message.appliesTo))
                                    return "appliesTo: array expected";
                                for (var i = 0; i < message.appliesTo.length; ++i)
                                    switch (message.appliesTo[i]) {
                                    default:
                                        return "appliesTo: enum value[] expected";
                                    case 0:
                                    case 2:
                                    case 3:
                                    case 5:
                                    case 6:
                                    case 9:
                                    case 10:
                                    case 11:
                                    case 14:
                                    case 15:
                                    case 16:
                                    case 18:
                                    case 19:
                                    case 20:
                                    case 23:
                                        break;
                                    }
                            }
                            if (message.allowedStringValues != null && message.hasOwnProperty("allowedStringValues")) {
                                if (!Array.isArray(message.allowedStringValues))
                                    return "allowedStringValues: array expected";
                                for (var i = 0; i < message.allowedStringValues.length; ++i)
                                    if (!$util.isString(message.allowedStringValues[i]))
                                        return "allowedStringValues: string[] expected";
                            }
                            if (message.minValue != null && message.hasOwnProperty("minValue")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.minValue);
                                if (error)
                                    return "minValue." + error;
                            }
                            if (message.maxValue != null && message.hasOwnProperty("maxValue")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.maxValue);
                                if (error)
                                    return "maxValue." + error;
                            }
                            if (message.requiresRestart != null && message.hasOwnProperty("requiresRestart")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.requiresRestart);
                                if (error)
                                    return "requiresRestart." + error;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.inBeta != null && message.hasOwnProperty("inBeta")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.inBeta);
                                if (error)
                                    return "inBeta." + error;
                            }
                            if (message.allowedIntValues != null && message.hasOwnProperty("allowedIntValues")) {
                                if (!Array.isArray(message.allowedIntValues))
                                    return "allowedIntValues: array expected";
                                for (var i = 0; i < message.allowedIntValues.length; ++i)
                                    if (!$util.isInteger(message.allowedIntValues[i]) && !(message.allowedIntValues[i] && $util.isInteger(message.allowedIntValues[i].low) && $util.isInteger(message.allowedIntValues[i].high)))
                                        return "allowedIntValues: integer|Long[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Flag message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.Flag} Flag
                         */
                        Flag.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.Flag)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.Flag();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.type) {
                            case "SQL_FLAG_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "BOOLEAN":
                            case 1:
                                message.type = 1;
                                break;
                            case "STRING":
                            case 2:
                                message.type = 2;
                                break;
                            case "INTEGER":
                            case 3:
                                message.type = 3;
                                break;
                            case "NONE":
                            case 4:
                                message.type = 4;
                                break;
                            case "MYSQL_TIMEZONE_OFFSET":
                            case 5:
                                message.type = 5;
                                break;
                            case "FLOAT":
                            case 6:
                                message.type = 6;
                                break;
                            case "REPEATED_STRING":
                            case 7:
                                message.type = 7;
                                break;
                            }
                            if (object.appliesTo) {
                                if (!Array.isArray(object.appliesTo))
                                    throw TypeError(".google.cloud.sql.v1beta4.Flag.appliesTo: array expected");
                                message.appliesTo = [];
                                for (var i = 0; i < object.appliesTo.length; ++i)
                                    switch (object.appliesTo[i]) {
                                    default:
                                    case "SQL_DATABASE_VERSION_UNSPECIFIED":
                                    case 0:
                                        message.appliesTo[i] = 0;
                                        break;
                                    case "MYSQL_5_1":
                                    case 2:
                                        message.appliesTo[i] = 2;
                                        break;
                                    case "MYSQL_5_5":
                                    case 3:
                                        message.appliesTo[i] = 3;
                                        break;
                                    case "MYSQL_5_6":
                                    case 5:
                                        message.appliesTo[i] = 5;
                                        break;
                                    case "MYSQL_5_7":
                                    case 6:
                                        message.appliesTo[i] = 6;
                                        break;
                                    case "POSTGRES_9_6":
                                    case 9:
                                        message.appliesTo[i] = 9;
                                        break;
                                    case "POSTGRES_11":
                                    case 10:
                                        message.appliesTo[i] = 10;
                                        break;
                                    case "SQLSERVER_2017_STANDARD":
                                    case 11:
                                        message.appliesTo[i] = 11;
                                        break;
                                    case "SQLSERVER_2017_ENTERPRISE":
                                    case 14:
                                        message.appliesTo[i] = 14;
                                        break;
                                    case "SQLSERVER_2017_EXPRESS":
                                    case 15:
                                        message.appliesTo[i] = 15;
                                        break;
                                    case "SQLSERVER_2017_WEB":
                                    case 16:
                                        message.appliesTo[i] = 16;
                                        break;
                                    case "POSTGRES_10":
                                    case 18:
                                        message.appliesTo[i] = 18;
                                        break;
                                    case "POSTGRES_12":
                                    case 19:
                                        message.appliesTo[i] = 19;
                                        break;
                                    case "MYSQL_8_0":
                                    case 20:
                                        message.appliesTo[i] = 20;
                                        break;
                                    case "POSTGRES_13":
                                    case 23:
                                        message.appliesTo[i] = 23;
                                        break;
                                    }
                            }
                            if (object.allowedStringValues) {
                                if (!Array.isArray(object.allowedStringValues))
                                    throw TypeError(".google.cloud.sql.v1beta4.Flag.allowedStringValues: array expected");
                                message.allowedStringValues = [];
                                for (var i = 0; i < object.allowedStringValues.length; ++i)
                                    message.allowedStringValues[i] = String(object.allowedStringValues[i]);
                            }
                            if (object.minValue != null) {
                                if (typeof object.minValue !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Flag.minValue: object expected");
                                message.minValue = $root.google.protobuf.Int64Value.fromObject(object.minValue);
                            }
                            if (object.maxValue != null) {
                                if (typeof object.maxValue !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Flag.maxValue: object expected");
                                message.maxValue = $root.google.protobuf.Int64Value.fromObject(object.maxValue);
                            }
                            if (object.requiresRestart != null) {
                                if (typeof object.requiresRestart !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Flag.requiresRestart: object expected");
                                message.requiresRestart = $root.google.protobuf.BoolValue.fromObject(object.requiresRestart);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.inBeta != null) {
                                if (typeof object.inBeta !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Flag.inBeta: object expected");
                                message.inBeta = $root.google.protobuf.BoolValue.fromObject(object.inBeta);
                            }
                            if (object.allowedIntValues) {
                                if (!Array.isArray(object.allowedIntValues))
                                    throw TypeError(".google.cloud.sql.v1beta4.Flag.allowedIntValues: array expected");
                                message.allowedIntValues = [];
                                for (var i = 0; i < object.allowedIntValues.length; ++i)
                                    if ($util.Long)
                                        (message.allowedIntValues[i] = $util.Long.fromValue(object.allowedIntValues[i])).unsigned = false;
                                    else if (typeof object.allowedIntValues[i] === "string")
                                        message.allowedIntValues[i] = parseInt(object.allowedIntValues[i], 10);
                                    else if (typeof object.allowedIntValues[i] === "number")
                                        message.allowedIntValues[i] = object.allowedIntValues[i];
                                    else if (typeof object.allowedIntValues[i] === "object")
                                        message.allowedIntValues[i] = new $util.LongBits(object.allowedIntValues[i].low >>> 0, object.allowedIntValues[i].high >>> 0).toNumber();
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Flag message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @static
                         * @param {google.cloud.sql.v1beta4.Flag} message Flag
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Flag.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.appliesTo = [];
                                object.allowedStringValues = [];
                                object.allowedIntValues = [];
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.type = options.enums === String ? "SQL_FLAG_TYPE_UNSPECIFIED" : 0;
                                object.minValue = null;
                                object.maxValue = null;
                                object.requiresRestart = null;
                                object.kind = "";
                                object.inBeta = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlFlagType[message.type] : message.type;
                            if (message.appliesTo && message.appliesTo.length) {
                                object.appliesTo = [];
                                for (var j = 0; j < message.appliesTo.length; ++j)
                                    object.appliesTo[j] = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlDatabaseVersion[message.appliesTo[j]] : message.appliesTo[j];
                            }
                            if (message.allowedStringValues && message.allowedStringValues.length) {
                                object.allowedStringValues = [];
                                for (var j = 0; j < message.allowedStringValues.length; ++j)
                                    object.allowedStringValues[j] = message.allowedStringValues[j];
                            }
                            if (message.minValue != null && message.hasOwnProperty("minValue"))
                                object.minValue = $root.google.protobuf.Int64Value.toObject(message.minValue, options);
                            if (message.maxValue != null && message.hasOwnProperty("maxValue"))
                                object.maxValue = $root.google.protobuf.Int64Value.toObject(message.maxValue, options);
                            if (message.requiresRestart != null && message.hasOwnProperty("requiresRestart"))
                                object.requiresRestart = $root.google.protobuf.BoolValue.toObject(message.requiresRestart, options);
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.inBeta != null && message.hasOwnProperty("inBeta"))
                                object.inBeta = $root.google.protobuf.BoolValue.toObject(message.inBeta, options);
                            if (message.allowedIntValues && message.allowedIntValues.length) {
                                object.allowedIntValues = [];
                                for (var j = 0; j < message.allowedIntValues.length; ++j)
                                    if (typeof message.allowedIntValues[j] === "number")
                                        object.allowedIntValues[j] = options.longs === String ? String(message.allowedIntValues[j]) : message.allowedIntValues[j];
                                    else
                                        object.allowedIntValues[j] = options.longs === String ? $util.Long.prototype.toString.call(message.allowedIntValues[j]) : options.longs === Number ? new $util.LongBits(message.allowedIntValues[j].low >>> 0, message.allowedIntValues[j].high >>> 0).toNumber() : message.allowedIntValues[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Flag to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.Flag
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Flag.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Flag;
                    })();
    
                    v1beta4.FlagsListResponse = (function() {
    
                        /**
                         * Properties of a FlagsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IFlagsListResponse
                         * @property {string|null} [kind] FlagsListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.IFlag>|null} [items] FlagsListResponse items
                         */
    
                        /**
                         * Constructs a new FlagsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a FlagsListResponse.
                         * @implements IFlagsListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IFlagsListResponse=} [properties] Properties to set
                         */
                        function FlagsListResponse(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FlagsListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @instance
                         */
                        FlagsListResponse.prototype.kind = "";
    
                        /**
                         * FlagsListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.IFlag>} items
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @instance
                         */
                        FlagsListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * Creates a new FlagsListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFlagsListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.FlagsListResponse} FlagsListResponse instance
                         */
                        FlagsListResponse.create = function create(properties) {
                            return new FlagsListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified FlagsListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.FlagsListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFlagsListResponse} message FlagsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FlagsListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.Flag.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FlagsListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.FlagsListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IFlagsListResponse} message FlagsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FlagsListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FlagsListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.FlagsListResponse} FlagsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FlagsListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.FlagsListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.Flag.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FlagsListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.FlagsListResponse} FlagsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FlagsListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FlagsListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FlagsListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.Flag.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FlagsListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.FlagsListResponse} FlagsListResponse
                         */
                        FlagsListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.FlagsListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.FlagsListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.FlagsListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.FlagsListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.Flag.fromObject(object.items[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FlagsListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.FlagsListResponse} message FlagsListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FlagsListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults)
                                object.kind = "";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.Flag.toObject(message.items[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this FlagsListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.FlagsListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FlagsListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return FlagsListResponse;
                    })();
    
                    v1beta4.ImportContext = (function() {
    
                        /**
                         * Properties of an ImportContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IImportContext
                         * @property {string|null} [uri] ImportContext uri
                         * @property {string|null} [database] ImportContext database
                         * @property {string|null} [kind] ImportContext kind
                         * @property {google.cloud.sql.v1beta4.SqlFileType|null} [fileType] ImportContext fileType
                         * @property {google.cloud.sql.v1beta4.ImportContext.ISqlCsvImportOptions|null} [csvImportOptions] ImportContext csvImportOptions
                         * @property {string|null} [importUser] ImportContext importUser
                         * @property {google.cloud.sql.v1beta4.ImportContext.ISqlBakImportOptions|null} [bakImportOptions] ImportContext bakImportOptions
                         */
    
                        /**
                         * Constructs a new ImportContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an ImportContext.
                         * @implements IImportContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IImportContext=} [properties] Properties to set
                         */
                        function ImportContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ImportContext uri.
                         * @member {string} uri
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         */
                        ImportContext.prototype.uri = "";
    
                        /**
                         * ImportContext database.
                         * @member {string} database
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         */
                        ImportContext.prototype.database = "";
    
                        /**
                         * ImportContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         */
                        ImportContext.prototype.kind = "";
    
                        /**
                         * ImportContext fileType.
                         * @member {google.cloud.sql.v1beta4.SqlFileType} fileType
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         */
                        ImportContext.prototype.fileType = 0;
    
                        /**
                         * ImportContext csvImportOptions.
                         * @member {google.cloud.sql.v1beta4.ImportContext.ISqlCsvImportOptions|null|undefined} csvImportOptions
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         */
                        ImportContext.prototype.csvImportOptions = null;
    
                        /**
                         * ImportContext importUser.
                         * @member {string} importUser
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         */
                        ImportContext.prototype.importUser = "";
    
                        /**
                         * ImportContext bakImportOptions.
                         * @member {google.cloud.sql.v1beta4.ImportContext.ISqlBakImportOptions|null|undefined} bakImportOptions
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         */
                        ImportContext.prototype.bakImportOptions = null;
    
                        /**
                         * Creates a new ImportContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IImportContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.ImportContext} ImportContext instance
                         */
                        ImportContext.create = function create(properties) {
                            return new ImportContext(properties);
                        };
    
                        /**
                         * Encodes the specified ImportContext message. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IImportContext} message ImportContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.uri != null && Object.hasOwnProperty.call(message, "uri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.uri);
                            if (message.database != null && Object.hasOwnProperty.call(message, "database"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.database);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                            if (message.fileType != null && Object.hasOwnProperty.call(message, "fileType"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.fileType);
                            if (message.csvImportOptions != null && Object.hasOwnProperty.call(message, "csvImportOptions"))
                                $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.encode(message.csvImportOptions, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.importUser != null && Object.hasOwnProperty.call(message, "importUser"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.importUser);
                            if (message.bakImportOptions != null && Object.hasOwnProperty.call(message, "bakImportOptions"))
                                $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.encode(message.bakImportOptions, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ImportContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IImportContext} message ImportContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ImportContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ImportContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.ImportContext} ImportContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ImportContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.uri = reader.string();
                                    break;
                                case 2:
                                    message.database = reader.string();
                                    break;
                                case 3:
                                    message.kind = reader.string();
                                    break;
                                case 4:
                                    message.fileType = reader.int32();
                                    break;
                                case 5:
                                    message.csvImportOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.importUser = reader.string();
                                    break;
                                case 7:
                                    message.bakImportOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ImportContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.ImportContext} ImportContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ImportContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ImportContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ImportContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                if (!$util.isString(message.uri))
                                    return "uri: string expected";
                            if (message.database != null && message.hasOwnProperty("database"))
                                if (!$util.isString(message.database))
                                    return "database: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.fileType != null && message.hasOwnProperty("fileType"))
                                switch (message.fileType) {
                                default:
                                    return "fileType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 4:
                                    break;
                                }
                            if (message.csvImportOptions != null && message.hasOwnProperty("csvImportOptions")) {
                                var error = $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.verify(message.csvImportOptions);
                                if (error)
                                    return "csvImportOptions." + error;
                            }
                            if (message.importUser != null && message.hasOwnProperty("importUser"))
                                if (!$util.isString(message.importUser))
                                    return "importUser: string expected";
                            if (message.bakImportOptions != null && message.hasOwnProperty("bakImportOptions")) {
                                var error = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.verify(message.bakImportOptions);
                                if (error)
                                    return "bakImportOptions." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an ImportContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.ImportContext} ImportContext
                         */
                        ImportContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.ImportContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.ImportContext();
                            if (object.uri != null)
                                message.uri = String(object.uri);
                            if (object.database != null)
                                message.database = String(object.database);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            switch (object.fileType) {
                            case "SQL_FILE_TYPE_UNSPECIFIED":
                            case 0:
                                message.fileType = 0;
                                break;
                            case "SQL":
                            case 1:
                                message.fileType = 1;
                                break;
                            case "CSV":
                            case 2:
                                message.fileType = 2;
                                break;
                            case "BAK":
                            case 4:
                                message.fileType = 4;
                                break;
                            }
                            if (object.csvImportOptions != null) {
                                if (typeof object.csvImportOptions !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.ImportContext.csvImportOptions: object expected");
                                message.csvImportOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.fromObject(object.csvImportOptions);
                            }
                            if (object.importUser != null)
                                message.importUser = String(object.importUser);
                            if (object.bakImportOptions != null) {
                                if (typeof object.bakImportOptions !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.ImportContext.bakImportOptions: object expected");
                                message.bakImportOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.fromObject(object.bakImportOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ImportContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ImportContext} message ImportContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ImportContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.uri = "";
                                object.database = "";
                                object.kind = "";
                                object.fileType = options.enums === String ? "SQL_FILE_TYPE_UNSPECIFIED" : 0;
                                object.csvImportOptions = null;
                                object.importUser = "";
                                object.bakImportOptions = null;
                            }
                            if (message.uri != null && message.hasOwnProperty("uri"))
                                object.uri = message.uri;
                            if (message.database != null && message.hasOwnProperty("database"))
                                object.database = message.database;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.fileType != null && message.hasOwnProperty("fileType"))
                                object.fileType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlFileType[message.fileType] : message.fileType;
                            if (message.csvImportOptions != null && message.hasOwnProperty("csvImportOptions"))
                                object.csvImportOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.toObject(message.csvImportOptions, options);
                            if (message.importUser != null && message.hasOwnProperty("importUser"))
                                object.importUser = message.importUser;
                            if (message.bakImportOptions != null && message.hasOwnProperty("bakImportOptions"))
                                object.bakImportOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.toObject(message.bakImportOptions, options);
                            return object;
                        };
    
                        /**
                         * Converts this ImportContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.ImportContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ImportContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        ImportContext.SqlCsvImportOptions = (function() {
    
                            /**
                             * Properties of a SqlCsvImportOptions.
                             * @memberof google.cloud.sql.v1beta4.ImportContext
                             * @interface ISqlCsvImportOptions
                             * @property {string|null} [table] SqlCsvImportOptions table
                             * @property {Array.<string>|null} [columns] SqlCsvImportOptions columns
                             */
    
                            /**
                             * Constructs a new SqlCsvImportOptions.
                             * @memberof google.cloud.sql.v1beta4.ImportContext
                             * @classdesc Represents a SqlCsvImportOptions.
                             * @implements ISqlCsvImportOptions
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlCsvImportOptions=} [properties] Properties to set
                             */
                            function SqlCsvImportOptions(properties) {
                                this.columns = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SqlCsvImportOptions table.
                             * @member {string} table
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @instance
                             */
                            SqlCsvImportOptions.prototype.table = "";
    
                            /**
                             * SqlCsvImportOptions columns.
                             * @member {Array.<string>} columns
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @instance
                             */
                            SqlCsvImportOptions.prototype.columns = $util.emptyArray;
    
                            /**
                             * Creates a new SqlCsvImportOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlCsvImportOptions=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions} SqlCsvImportOptions instance
                             */
                            SqlCsvImportOptions.create = function create(properties) {
                                return new SqlCsvImportOptions(properties);
                            };
    
                            /**
                             * Encodes the specified SqlCsvImportOptions message. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlCsvImportOptions} message SqlCsvImportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlCsvImportOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.table != null && Object.hasOwnProperty.call(message, "table"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.table);
                                if (message.columns != null && message.columns.length)
                                    for (var i = 0; i < message.columns.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.columns[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SqlCsvImportOptions message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlCsvImportOptions} message SqlCsvImportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlCsvImportOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SqlCsvImportOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions} SqlCsvImportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlCsvImportOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.table = reader.string();
                                        break;
                                    case 2:
                                        if (!(message.columns && message.columns.length))
                                            message.columns = [];
                                        message.columns.push(reader.string());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SqlCsvImportOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions} SqlCsvImportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlCsvImportOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SqlCsvImportOptions message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SqlCsvImportOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.table != null && message.hasOwnProperty("table"))
                                    if (!$util.isString(message.table))
                                        return "table: string expected";
                                if (message.columns != null && message.hasOwnProperty("columns")) {
                                    if (!Array.isArray(message.columns))
                                        return "columns: array expected";
                                    for (var i = 0; i < message.columns.length; ++i)
                                        if (!$util.isString(message.columns[i]))
                                            return "columns: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SqlCsvImportOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions} SqlCsvImportOptions
                             */
                            SqlCsvImportOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions();
                                if (object.table != null)
                                    message.table = String(object.table);
                                if (object.columns) {
                                    if (!Array.isArray(object.columns))
                                        throw TypeError(".google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions.columns: array expected");
                                    message.columns = [];
                                    for (var i = 0; i < object.columns.length; ++i)
                                        message.columns[i] = String(object.columns[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SqlCsvImportOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions} message SqlCsvImportOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SqlCsvImportOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.columns = [];
                                if (options.defaults)
                                    object.table = "";
                                if (message.table != null && message.hasOwnProperty("table"))
                                    object.table = message.table;
                                if (message.columns && message.columns.length) {
                                    object.columns = [];
                                    for (var j = 0; j < message.columns.length; ++j)
                                        object.columns[j] = message.columns[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SqlCsvImportOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlCsvImportOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SqlCsvImportOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SqlCsvImportOptions;
                        })();
    
                        ImportContext.SqlBakImportOptions = (function() {
    
                            /**
                             * Properties of a SqlBakImportOptions.
                             * @memberof google.cloud.sql.v1beta4.ImportContext
                             * @interface ISqlBakImportOptions
                             * @property {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.IEncryptionOptions|null} [encryptionOptions] SqlBakImportOptions encryptionOptions
                             */
    
                            /**
                             * Constructs a new SqlBakImportOptions.
                             * @memberof google.cloud.sql.v1beta4.ImportContext
                             * @classdesc Represents a SqlBakImportOptions.
                             * @implements ISqlBakImportOptions
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlBakImportOptions=} [properties] Properties to set
                             */
                            function SqlBakImportOptions(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SqlBakImportOptions encryptionOptions.
                             * @member {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.IEncryptionOptions|null|undefined} encryptionOptions
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @instance
                             */
                            SqlBakImportOptions.prototype.encryptionOptions = null;
    
                            /**
                             * Creates a new SqlBakImportOptions instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlBakImportOptions=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions} SqlBakImportOptions instance
                             */
                            SqlBakImportOptions.create = function create(properties) {
                                return new SqlBakImportOptions(properties);
                            };
    
                            /**
                             * Encodes the specified SqlBakImportOptions message. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlBakImportOptions} message SqlBakImportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlBakImportOptions.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.encryptionOptions != null && Object.hasOwnProperty.call(message, "encryptionOptions"))
                                    $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.encode(message.encryptionOptions, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SqlBakImportOptions message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.ISqlBakImportOptions} message SqlBakImportOptions message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SqlBakImportOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SqlBakImportOptions message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions} SqlBakImportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlBakImportOptions.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.encryptionOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SqlBakImportOptions message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions} SqlBakImportOptions
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SqlBakImportOptions.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SqlBakImportOptions message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SqlBakImportOptions.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.encryptionOptions != null && message.hasOwnProperty("encryptionOptions")) {
                                    var error = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.verify(message.encryptionOptions);
                                    if (error)
                                        return "encryptionOptions." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SqlBakImportOptions message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions} SqlBakImportOptions
                             */
                            SqlBakImportOptions.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions();
                                if (object.encryptionOptions != null) {
                                    if (typeof object.encryptionOptions !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.encryptionOptions: object expected");
                                    message.encryptionOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.fromObject(object.encryptionOptions);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SqlBakImportOptions message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @static
                             * @param {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions} message SqlBakImportOptions
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SqlBakImportOptions.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.encryptionOptions = null;
                                if (message.encryptionOptions != null && message.hasOwnProperty("encryptionOptions"))
                                    object.encryptionOptions = $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.toObject(message.encryptionOptions, options);
                                return object;
                            };
    
                            /**
                             * Converts this SqlBakImportOptions to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SqlBakImportOptions.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            SqlBakImportOptions.EncryptionOptions = (function() {
    
                                /**
                                 * Properties of an EncryptionOptions.
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                                 * @interface IEncryptionOptions
                                 * @property {string|null} [certPath] EncryptionOptions certPath
                                 * @property {string|null} [pvkPath] EncryptionOptions pvkPath
                                 * @property {string|null} [pvkPassword] EncryptionOptions pvkPassword
                                 */
    
                                /**
                                 * Constructs a new EncryptionOptions.
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions
                                 * @classdesc Represents an EncryptionOptions.
                                 * @implements IEncryptionOptions
                                 * @constructor
                                 * @param {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.IEncryptionOptions=} [properties] Properties to set
                                 */
                                function EncryptionOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * EncryptionOptions certPath.
                                 * @member {string} certPath
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @instance
                                 */
                                EncryptionOptions.prototype.certPath = "";
    
                                /**
                                 * EncryptionOptions pvkPath.
                                 * @member {string} pvkPath
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @instance
                                 */
                                EncryptionOptions.prototype.pvkPath = "";
    
                                /**
                                 * EncryptionOptions pvkPassword.
                                 * @member {string} pvkPassword
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @instance
                                 */
                                EncryptionOptions.prototype.pvkPassword = "";
    
                                /**
                                 * Creates a new EncryptionOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.IEncryptionOptions=} [properties] Properties to set
                                 * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions} EncryptionOptions instance
                                 */
                                EncryptionOptions.create = function create(properties) {
                                    return new EncryptionOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified EncryptionOptions message. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.IEncryptionOptions} message EncryptionOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                EncryptionOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.certPath != null && Object.hasOwnProperty.call(message, "certPath"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.certPath);
                                    if (message.pvkPath != null && Object.hasOwnProperty.call(message, "pvkPath"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.pvkPath);
                                    if (message.pvkPassword != null && Object.hasOwnProperty.call(message, "pvkPassword"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pvkPassword);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified EncryptionOptions message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.IEncryptionOptions} message EncryptionOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                EncryptionOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an EncryptionOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions} EncryptionOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                EncryptionOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1:
                                            message.certPath = reader.string();
                                            break;
                                        case 2:
                                            message.pvkPath = reader.string();
                                            break;
                                        case 3:
                                            message.pvkPassword = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an EncryptionOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions} EncryptionOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                EncryptionOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an EncryptionOptions message.
                                 * @function verify
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                EncryptionOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.certPath != null && message.hasOwnProperty("certPath"))
                                        if (!$util.isString(message.certPath))
                                            return "certPath: string expected";
                                    if (message.pvkPath != null && message.hasOwnProperty("pvkPath"))
                                        if (!$util.isString(message.pvkPath))
                                            return "pvkPath: string expected";
                                    if (message.pvkPassword != null && message.hasOwnProperty("pvkPassword"))
                                        if (!$util.isString(message.pvkPassword))
                                            return "pvkPassword: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an EncryptionOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions} EncryptionOptions
                                 */
                                EncryptionOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions)
                                        return object;
                                    var message = new $root.google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions();
                                    if (object.certPath != null)
                                        message.certPath = String(object.certPath);
                                    if (object.pvkPath != null)
                                        message.pvkPath = String(object.pvkPath);
                                    if (object.pvkPassword != null)
                                        message.pvkPassword = String(object.pvkPassword);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an EncryptionOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @static
                                 * @param {google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions} message EncryptionOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                EncryptionOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.certPath = "";
                                        object.pvkPath = "";
                                        object.pvkPassword = "";
                                    }
                                    if (message.certPath != null && message.hasOwnProperty("certPath"))
                                        object.certPath = message.certPath;
                                    if (message.pvkPath != null && message.hasOwnProperty("pvkPath"))
                                        object.pvkPath = message.pvkPath;
                                    if (message.pvkPassword != null && message.hasOwnProperty("pvkPassword"))
                                        object.pvkPassword = message.pvkPassword;
                                    return object;
                                };
    
                                /**
                                 * Converts this EncryptionOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.sql.v1beta4.ImportContext.SqlBakImportOptions.EncryptionOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                EncryptionOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                return EncryptionOptions;
                            })();
    
                            return SqlBakImportOptions;
                        })();
    
                        return ImportContext;
                    })();
    
                    /**
                     * SqlFileType enum.
                     * @name google.cloud.sql.v1beta4.SqlFileType
                     * @enum {number}
                     * @property {number} SQL_FILE_TYPE_UNSPECIFIED=0 SQL_FILE_TYPE_UNSPECIFIED value
                     * @property {number} SQL=1 SQL value
                     * @property {number} CSV=2 CSV value
                     * @property {number} BAK=4 BAK value
                     */
                    v1beta4.SqlFileType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_FILE_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SQL"] = 1;
                        values[valuesById[2] = "CSV"] = 2;
                        values[valuesById[4] = "BAK"] = 4;
                        return values;
                    })();
    
                    v1beta4.InstancesCloneRequest = (function() {
    
                        /**
                         * Properties of an InstancesCloneRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesCloneRequest
                         * @property {google.cloud.sql.v1beta4.ICloneContext|null} [cloneContext] InstancesCloneRequest cloneContext
                         */
    
                        /**
                         * Constructs a new InstancesCloneRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesCloneRequest.
                         * @implements IInstancesCloneRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesCloneRequest=} [properties] Properties to set
                         */
                        function InstancesCloneRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesCloneRequest cloneContext.
                         * @member {google.cloud.sql.v1beta4.ICloneContext|null|undefined} cloneContext
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @instance
                         */
                        InstancesCloneRequest.prototype.cloneContext = null;
    
                        /**
                         * Creates a new InstancesCloneRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesCloneRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesCloneRequest} InstancesCloneRequest instance
                         */
                        InstancesCloneRequest.create = function create(properties) {
                            return new InstancesCloneRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesCloneRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesCloneRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesCloneRequest} message InstancesCloneRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesCloneRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.cloneContext != null && Object.hasOwnProperty.call(message, "cloneContext"))
                                $root.google.cloud.sql.v1beta4.CloneContext.encode(message.cloneContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesCloneRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesCloneRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesCloneRequest} message InstancesCloneRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesCloneRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesCloneRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesCloneRequest} InstancesCloneRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesCloneRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesCloneRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.cloneContext = $root.google.cloud.sql.v1beta4.CloneContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesCloneRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesCloneRequest} InstancesCloneRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesCloneRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesCloneRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesCloneRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.cloneContext != null && message.hasOwnProperty("cloneContext")) {
                                var error = $root.google.cloud.sql.v1beta4.CloneContext.verify(message.cloneContext);
                                if (error)
                                    return "cloneContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesCloneRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesCloneRequest} InstancesCloneRequest
                         */
                        InstancesCloneRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesCloneRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesCloneRequest();
                            if (object.cloneContext != null) {
                                if (typeof object.cloneContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesCloneRequest.cloneContext: object expected");
                                message.cloneContext = $root.google.cloud.sql.v1beta4.CloneContext.fromObject(object.cloneContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesCloneRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesCloneRequest} message InstancesCloneRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesCloneRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.cloneContext = null;
                            if (message.cloneContext != null && message.hasOwnProperty("cloneContext"))
                                object.cloneContext = $root.google.cloud.sql.v1beta4.CloneContext.toObject(message.cloneContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesCloneRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesCloneRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesCloneRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesCloneRequest;
                    })();
    
                    v1beta4.InstancesDemoteMasterRequest = (function() {
    
                        /**
                         * Properties of an InstancesDemoteMasterRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesDemoteMasterRequest
                         * @property {google.cloud.sql.v1beta4.IDemoteMasterContext|null} [demoteMasterContext] InstancesDemoteMasterRequest demoteMasterContext
                         */
    
                        /**
                         * Constructs a new InstancesDemoteMasterRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesDemoteMasterRequest.
                         * @implements IInstancesDemoteMasterRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesDemoteMasterRequest=} [properties] Properties to set
                         */
                        function InstancesDemoteMasterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesDemoteMasterRequest demoteMasterContext.
                         * @member {google.cloud.sql.v1beta4.IDemoteMasterContext|null|undefined} demoteMasterContext
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @instance
                         */
                        InstancesDemoteMasterRequest.prototype.demoteMasterContext = null;
    
                        /**
                         * Creates a new InstancesDemoteMasterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesDemoteMasterRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesDemoteMasterRequest} InstancesDemoteMasterRequest instance
                         */
                        InstancesDemoteMasterRequest.create = function create(properties) {
                            return new InstancesDemoteMasterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesDemoteMasterRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesDemoteMasterRequest} message InstancesDemoteMasterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesDemoteMasterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.demoteMasterContext != null && Object.hasOwnProperty.call(message, "demoteMasterContext"))
                                $root.google.cloud.sql.v1beta4.DemoteMasterContext.encode(message.demoteMasterContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesDemoteMasterRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesDemoteMasterRequest} message InstancesDemoteMasterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesDemoteMasterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesDemoteMasterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesDemoteMasterRequest} InstancesDemoteMasterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesDemoteMasterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.demoteMasterContext = $root.google.cloud.sql.v1beta4.DemoteMasterContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesDemoteMasterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesDemoteMasterRequest} InstancesDemoteMasterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesDemoteMasterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesDemoteMasterRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesDemoteMasterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.demoteMasterContext != null && message.hasOwnProperty("demoteMasterContext")) {
                                var error = $root.google.cloud.sql.v1beta4.DemoteMasterContext.verify(message.demoteMasterContext);
                                if (error)
                                    return "demoteMasterContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesDemoteMasterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesDemoteMasterRequest} InstancesDemoteMasterRequest
                         */
                        InstancesDemoteMasterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesDemoteMasterRequest();
                            if (object.demoteMasterContext != null) {
                                if (typeof object.demoteMasterContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesDemoteMasterRequest.demoteMasterContext: object expected");
                                message.demoteMasterContext = $root.google.cloud.sql.v1beta4.DemoteMasterContext.fromObject(object.demoteMasterContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesDemoteMasterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesDemoteMasterRequest} message InstancesDemoteMasterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesDemoteMasterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.demoteMasterContext = null;
                            if (message.demoteMasterContext != null && message.hasOwnProperty("demoteMasterContext"))
                                object.demoteMasterContext = $root.google.cloud.sql.v1beta4.DemoteMasterContext.toObject(message.demoteMasterContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesDemoteMasterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesDemoteMasterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesDemoteMasterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesDemoteMasterRequest;
                    })();
    
                    v1beta4.InstancesExportRequest = (function() {
    
                        /**
                         * Properties of an InstancesExportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesExportRequest
                         * @property {google.cloud.sql.v1beta4.IExportContext|null} [exportContext] InstancesExportRequest exportContext
                         */
    
                        /**
                         * Constructs a new InstancesExportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesExportRequest.
                         * @implements IInstancesExportRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesExportRequest=} [properties] Properties to set
                         */
                        function InstancesExportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesExportRequest exportContext.
                         * @member {google.cloud.sql.v1beta4.IExportContext|null|undefined} exportContext
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @instance
                         */
                        InstancesExportRequest.prototype.exportContext = null;
    
                        /**
                         * Creates a new InstancesExportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesExportRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesExportRequest} InstancesExportRequest instance
                         */
                        InstancesExportRequest.create = function create(properties) {
                            return new InstancesExportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesExportRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesExportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesExportRequest} message InstancesExportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesExportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.exportContext != null && Object.hasOwnProperty.call(message, "exportContext"))
                                $root.google.cloud.sql.v1beta4.ExportContext.encode(message.exportContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesExportRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesExportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesExportRequest} message InstancesExportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesExportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesExportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesExportRequest} InstancesExportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesExportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesExportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.exportContext = $root.google.cloud.sql.v1beta4.ExportContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesExportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesExportRequest} InstancesExportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesExportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesExportRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesExportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.exportContext != null && message.hasOwnProperty("exportContext")) {
                                var error = $root.google.cloud.sql.v1beta4.ExportContext.verify(message.exportContext);
                                if (error)
                                    return "exportContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesExportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesExportRequest} InstancesExportRequest
                         */
                        InstancesExportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesExportRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesExportRequest();
                            if (object.exportContext != null) {
                                if (typeof object.exportContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesExportRequest.exportContext: object expected");
                                message.exportContext = $root.google.cloud.sql.v1beta4.ExportContext.fromObject(object.exportContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesExportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesExportRequest} message InstancesExportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesExportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.exportContext = null;
                            if (message.exportContext != null && message.hasOwnProperty("exportContext"))
                                object.exportContext = $root.google.cloud.sql.v1beta4.ExportContext.toObject(message.exportContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesExportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesExportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesExportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesExportRequest;
                    })();
    
                    v1beta4.InstancesFailoverRequest = (function() {
    
                        /**
                         * Properties of an InstancesFailoverRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesFailoverRequest
                         * @property {google.cloud.sql.v1beta4.IFailoverContext|null} [failoverContext] InstancesFailoverRequest failoverContext
                         */
    
                        /**
                         * Constructs a new InstancesFailoverRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesFailoverRequest.
                         * @implements IInstancesFailoverRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesFailoverRequest=} [properties] Properties to set
                         */
                        function InstancesFailoverRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesFailoverRequest failoverContext.
                         * @member {google.cloud.sql.v1beta4.IFailoverContext|null|undefined} failoverContext
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @instance
                         */
                        InstancesFailoverRequest.prototype.failoverContext = null;
    
                        /**
                         * Creates a new InstancesFailoverRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesFailoverRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesFailoverRequest} InstancesFailoverRequest instance
                         */
                        InstancesFailoverRequest.create = function create(properties) {
                            return new InstancesFailoverRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesFailoverRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesFailoverRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesFailoverRequest} message InstancesFailoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesFailoverRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.failoverContext != null && Object.hasOwnProperty.call(message, "failoverContext"))
                                $root.google.cloud.sql.v1beta4.FailoverContext.encode(message.failoverContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesFailoverRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesFailoverRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesFailoverRequest} message InstancesFailoverRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesFailoverRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesFailoverRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesFailoverRequest} InstancesFailoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesFailoverRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesFailoverRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.failoverContext = $root.google.cloud.sql.v1beta4.FailoverContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesFailoverRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesFailoverRequest} InstancesFailoverRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesFailoverRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesFailoverRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesFailoverRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.failoverContext != null && message.hasOwnProperty("failoverContext")) {
                                var error = $root.google.cloud.sql.v1beta4.FailoverContext.verify(message.failoverContext);
                                if (error)
                                    return "failoverContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesFailoverRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesFailoverRequest} InstancesFailoverRequest
                         */
                        InstancesFailoverRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesFailoverRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesFailoverRequest();
                            if (object.failoverContext != null) {
                                if (typeof object.failoverContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesFailoverRequest.failoverContext: object expected");
                                message.failoverContext = $root.google.cloud.sql.v1beta4.FailoverContext.fromObject(object.failoverContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesFailoverRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesFailoverRequest} message InstancesFailoverRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesFailoverRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.failoverContext = null;
                            if (message.failoverContext != null && message.hasOwnProperty("failoverContext"))
                                object.failoverContext = $root.google.cloud.sql.v1beta4.FailoverContext.toObject(message.failoverContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesFailoverRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesFailoverRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesFailoverRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesFailoverRequest;
                    })();
    
                    v1beta4.InstancesImportRequest = (function() {
    
                        /**
                         * Properties of an InstancesImportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesImportRequest
                         * @property {google.cloud.sql.v1beta4.IImportContext|null} [importContext] InstancesImportRequest importContext
                         */
    
                        /**
                         * Constructs a new InstancesImportRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesImportRequest.
                         * @implements IInstancesImportRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesImportRequest=} [properties] Properties to set
                         */
                        function InstancesImportRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesImportRequest importContext.
                         * @member {google.cloud.sql.v1beta4.IImportContext|null|undefined} importContext
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @instance
                         */
                        InstancesImportRequest.prototype.importContext = null;
    
                        /**
                         * Creates a new InstancesImportRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesImportRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesImportRequest} InstancesImportRequest instance
                         */
                        InstancesImportRequest.create = function create(properties) {
                            return new InstancesImportRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesImportRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesImportRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesImportRequest} message InstancesImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesImportRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.importContext != null && Object.hasOwnProperty.call(message, "importContext"))
                                $root.google.cloud.sql.v1beta4.ImportContext.encode(message.importContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesImportRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesImportRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesImportRequest} message InstancesImportRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesImportRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesImportRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesImportRequest} InstancesImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesImportRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesImportRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.importContext = $root.google.cloud.sql.v1beta4.ImportContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesImportRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesImportRequest} InstancesImportRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesImportRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesImportRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesImportRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.importContext != null && message.hasOwnProperty("importContext")) {
                                var error = $root.google.cloud.sql.v1beta4.ImportContext.verify(message.importContext);
                                if (error)
                                    return "importContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesImportRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesImportRequest} InstancesImportRequest
                         */
                        InstancesImportRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesImportRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesImportRequest();
                            if (object.importContext != null) {
                                if (typeof object.importContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesImportRequest.importContext: object expected");
                                message.importContext = $root.google.cloud.sql.v1beta4.ImportContext.fromObject(object.importContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesImportRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesImportRequest} message InstancesImportRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesImportRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.importContext = null;
                            if (message.importContext != null && message.hasOwnProperty("importContext"))
                                object.importContext = $root.google.cloud.sql.v1beta4.ImportContext.toObject(message.importContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesImportRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesImportRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesImportRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesImportRequest;
                    })();
    
                    v1beta4.InstancesListResponse = (function() {
    
                        /**
                         * Properties of an InstancesListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesListResponse
                         * @property {string|null} [kind] InstancesListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.IApiWarning>|null} [warnings] InstancesListResponse warnings
                         * @property {Array.<google.cloud.sql.v1beta4.IDatabaseInstance>|null} [items] InstancesListResponse items
                         * @property {string|null} [nextPageToken] InstancesListResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new InstancesListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesListResponse.
                         * @implements IInstancesListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesListResponse=} [properties] Properties to set
                         */
                        function InstancesListResponse(properties) {
                            this.warnings = [];
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @instance
                         */
                        InstancesListResponse.prototype.kind = "";
    
                        /**
                         * InstancesListResponse warnings.
                         * @member {Array.<google.cloud.sql.v1beta4.IApiWarning>} warnings
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @instance
                         */
                        InstancesListResponse.prototype.warnings = $util.emptyArray;
    
                        /**
                         * InstancesListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.IDatabaseInstance>} items
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @instance
                         */
                        InstancesListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * InstancesListResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @instance
                         */
                        InstancesListResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new InstancesListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesListResponse} InstancesListResponse instance
                         */
                        InstancesListResponse.create = function create(properties) {
                            return new InstancesListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesListResponse} message InstancesListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.warnings != null && message.warnings.length)
                                for (var i = 0; i < message.warnings.length; ++i)
                                    $root.google.cloud.sql.v1beta4.ApiWarning.encode(message.warnings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.DatabaseInstance.encode(message.items[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesListResponse} message InstancesListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesListResponse} InstancesListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.warnings && message.warnings.length))
                                        message.warnings = [];
                                    message.warnings.push($root.google.cloud.sql.v1beta4.ApiWarning.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.DatabaseInstance.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesListResponse} InstancesListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                if (!Array.isArray(message.warnings))
                                    return "warnings: array expected";
                                for (var i = 0; i < message.warnings.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.ApiWarning.verify(message.warnings[i]);
                                    if (error)
                                        return "warnings." + error;
                                }
                            }
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.DatabaseInstance.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InstancesListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesListResponse} InstancesListResponse
                         */
                        InstancesListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.warnings) {
                                if (!Array.isArray(object.warnings))
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesListResponse.warnings: array expected");
                                message.warnings = [];
                                for (var i = 0; i < object.warnings.length; ++i) {
                                    if (typeof object.warnings[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.InstancesListResponse.warnings: object expected");
                                    message.warnings[i] = $root.google.cloud.sql.v1beta4.ApiWarning.fromObject(object.warnings[i]);
                                }
                            }
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.InstancesListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.DatabaseInstance.fromObject(object.items[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesListResponse} message InstancesListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.warnings = [];
                                object.items = [];
                            }
                            if (options.defaults) {
                                object.kind = "";
                                object.nextPageToken = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.warnings && message.warnings.length) {
                                object.warnings = [];
                                for (var j = 0; j < message.warnings.length; ++j)
                                    object.warnings[j] = $root.google.cloud.sql.v1beta4.ApiWarning.toObject(message.warnings[j], options);
                            }
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.DatabaseInstance.toObject(message.items[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this InstancesListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesListResponse;
                    })();
    
                    v1beta4.InstancesListServerCasResponse = (function() {
    
                        /**
                         * Properties of an InstancesListServerCasResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesListServerCasResponse
                         * @property {Array.<google.cloud.sql.v1beta4.ISslCert>|null} [certs] InstancesListServerCasResponse certs
                         * @property {string|null} [activeVersion] InstancesListServerCasResponse activeVersion
                         * @property {string|null} [kind] InstancesListServerCasResponse kind
                         */
    
                        /**
                         * Constructs a new InstancesListServerCasResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesListServerCasResponse.
                         * @implements IInstancesListServerCasResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesListServerCasResponse=} [properties] Properties to set
                         */
                        function InstancesListServerCasResponse(properties) {
                            this.certs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesListServerCasResponse certs.
                         * @member {Array.<google.cloud.sql.v1beta4.ISslCert>} certs
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @instance
                         */
                        InstancesListServerCasResponse.prototype.certs = $util.emptyArray;
    
                        /**
                         * InstancesListServerCasResponse activeVersion.
                         * @member {string} activeVersion
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @instance
                         */
                        InstancesListServerCasResponse.prototype.activeVersion = "";
    
                        /**
                         * InstancesListServerCasResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @instance
                         */
                        InstancesListServerCasResponse.prototype.kind = "";
    
                        /**
                         * Creates a new InstancesListServerCasResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesListServerCasResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesListServerCasResponse} InstancesListServerCasResponse instance
                         */
                        InstancesListServerCasResponse.create = function create(properties) {
                            return new InstancesListServerCasResponse(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesListServerCasResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesListServerCasResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesListServerCasResponse} message InstancesListServerCasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesListServerCasResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.certs != null && message.certs.length)
                                for (var i = 0; i < message.certs.length; ++i)
                                    $root.google.cloud.sql.v1beta4.SslCert.encode(message.certs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.activeVersion != null && Object.hasOwnProperty.call(message, "activeVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.activeVersion);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesListServerCasResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesListServerCasResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesListServerCasResponse} message InstancesListServerCasResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesListServerCasResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesListServerCasResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesListServerCasResponse} InstancesListServerCasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesListServerCasResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesListServerCasResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.certs && message.certs.length))
                                        message.certs = [];
                                    message.certs.push($root.google.cloud.sql.v1beta4.SslCert.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.activeVersion = reader.string();
                                    break;
                                case 3:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesListServerCasResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesListServerCasResponse} InstancesListServerCasResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesListServerCasResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesListServerCasResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesListServerCasResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.certs != null && message.hasOwnProperty("certs")) {
                                if (!Array.isArray(message.certs))
                                    return "certs: array expected";
                                for (var i = 0; i < message.certs.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.SslCert.verify(message.certs[i]);
                                    if (error)
                                        return "certs." + error;
                                }
                            }
                            if (message.activeVersion != null && message.hasOwnProperty("activeVersion"))
                                if (!$util.isString(message.activeVersion))
                                    return "activeVersion: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InstancesListServerCasResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesListServerCasResponse} InstancesListServerCasResponse
                         */
                        InstancesListServerCasResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesListServerCasResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesListServerCasResponse();
                            if (object.certs) {
                                if (!Array.isArray(object.certs))
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesListServerCasResponse.certs: array expected");
                                message.certs = [];
                                for (var i = 0; i < object.certs.length; ++i) {
                                    if (typeof object.certs[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.InstancesListServerCasResponse.certs: object expected");
                                    message.certs[i] = $root.google.cloud.sql.v1beta4.SslCert.fromObject(object.certs[i]);
                                }
                            }
                            if (object.activeVersion != null)
                                message.activeVersion = String(object.activeVersion);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesListServerCasResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesListServerCasResponse} message InstancesListServerCasResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesListServerCasResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.certs = [];
                            if (options.defaults) {
                                object.activeVersion = "";
                                object.kind = "";
                            }
                            if (message.certs && message.certs.length) {
                                object.certs = [];
                                for (var j = 0; j < message.certs.length; ++j)
                                    object.certs[j] = $root.google.cloud.sql.v1beta4.SslCert.toObject(message.certs[j], options);
                            }
                            if (message.activeVersion != null && message.hasOwnProperty("activeVersion"))
                                object.activeVersion = message.activeVersion;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this InstancesListServerCasResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesListServerCasResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesListServerCasResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesListServerCasResponse;
                    })();
    
                    v1beta4.InstancesRestoreBackupRequest = (function() {
    
                        /**
                         * Properties of an InstancesRestoreBackupRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesRestoreBackupRequest
                         * @property {google.cloud.sql.v1beta4.IRestoreBackupContext|null} [restoreBackupContext] InstancesRestoreBackupRequest restoreBackupContext
                         */
    
                        /**
                         * Constructs a new InstancesRestoreBackupRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesRestoreBackupRequest.
                         * @implements IInstancesRestoreBackupRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesRestoreBackupRequest=} [properties] Properties to set
                         */
                        function InstancesRestoreBackupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesRestoreBackupRequest restoreBackupContext.
                         * @member {google.cloud.sql.v1beta4.IRestoreBackupContext|null|undefined} restoreBackupContext
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @instance
                         */
                        InstancesRestoreBackupRequest.prototype.restoreBackupContext = null;
    
                        /**
                         * Creates a new InstancesRestoreBackupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesRestoreBackupRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesRestoreBackupRequest} InstancesRestoreBackupRequest instance
                         */
                        InstancesRestoreBackupRequest.create = function create(properties) {
                            return new InstancesRestoreBackupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesRestoreBackupRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesRestoreBackupRequest} message InstancesRestoreBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesRestoreBackupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.restoreBackupContext != null && Object.hasOwnProperty.call(message, "restoreBackupContext"))
                                $root.google.cloud.sql.v1beta4.RestoreBackupContext.encode(message.restoreBackupContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesRestoreBackupRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesRestoreBackupRequest} message InstancesRestoreBackupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesRestoreBackupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesRestoreBackupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesRestoreBackupRequest} InstancesRestoreBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesRestoreBackupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.restoreBackupContext = $root.google.cloud.sql.v1beta4.RestoreBackupContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesRestoreBackupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesRestoreBackupRequest} InstancesRestoreBackupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesRestoreBackupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesRestoreBackupRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesRestoreBackupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.restoreBackupContext != null && message.hasOwnProperty("restoreBackupContext")) {
                                var error = $root.google.cloud.sql.v1beta4.RestoreBackupContext.verify(message.restoreBackupContext);
                                if (error)
                                    return "restoreBackupContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesRestoreBackupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesRestoreBackupRequest} InstancesRestoreBackupRequest
                         */
                        InstancesRestoreBackupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesRestoreBackupRequest();
                            if (object.restoreBackupContext != null) {
                                if (typeof object.restoreBackupContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesRestoreBackupRequest.restoreBackupContext: object expected");
                                message.restoreBackupContext = $root.google.cloud.sql.v1beta4.RestoreBackupContext.fromObject(object.restoreBackupContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesRestoreBackupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesRestoreBackupRequest} message InstancesRestoreBackupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesRestoreBackupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.restoreBackupContext = null;
                            if (message.restoreBackupContext != null && message.hasOwnProperty("restoreBackupContext"))
                                object.restoreBackupContext = $root.google.cloud.sql.v1beta4.RestoreBackupContext.toObject(message.restoreBackupContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesRestoreBackupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesRestoreBackupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesRestoreBackupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesRestoreBackupRequest;
                    })();
    
                    v1beta4.InstancesRotateServerCaRequest = (function() {
    
                        /**
                         * Properties of an InstancesRotateServerCaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesRotateServerCaRequest
                         * @property {google.cloud.sql.v1beta4.IRotateServerCaContext|null} [rotateServerCaContext] InstancesRotateServerCaRequest rotateServerCaContext
                         */
    
                        /**
                         * Constructs a new InstancesRotateServerCaRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesRotateServerCaRequest.
                         * @implements IInstancesRotateServerCaRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesRotateServerCaRequest=} [properties] Properties to set
                         */
                        function InstancesRotateServerCaRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesRotateServerCaRequest rotateServerCaContext.
                         * @member {google.cloud.sql.v1beta4.IRotateServerCaContext|null|undefined} rotateServerCaContext
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @instance
                         */
                        InstancesRotateServerCaRequest.prototype.rotateServerCaContext = null;
    
                        /**
                         * Creates a new InstancesRotateServerCaRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesRotateServerCaRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesRotateServerCaRequest} InstancesRotateServerCaRequest instance
                         */
                        InstancesRotateServerCaRequest.create = function create(properties) {
                            return new InstancesRotateServerCaRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesRotateServerCaRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesRotateServerCaRequest} message InstancesRotateServerCaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesRotateServerCaRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rotateServerCaContext != null && Object.hasOwnProperty.call(message, "rotateServerCaContext"))
                                $root.google.cloud.sql.v1beta4.RotateServerCaContext.encode(message.rotateServerCaContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesRotateServerCaRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesRotateServerCaRequest} message InstancesRotateServerCaRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesRotateServerCaRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesRotateServerCaRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesRotateServerCaRequest} InstancesRotateServerCaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesRotateServerCaRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.rotateServerCaContext = $root.google.cloud.sql.v1beta4.RotateServerCaContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesRotateServerCaRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesRotateServerCaRequest} InstancesRotateServerCaRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesRotateServerCaRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesRotateServerCaRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesRotateServerCaRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.rotateServerCaContext != null && message.hasOwnProperty("rotateServerCaContext")) {
                                var error = $root.google.cloud.sql.v1beta4.RotateServerCaContext.verify(message.rotateServerCaContext);
                                if (error)
                                    return "rotateServerCaContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesRotateServerCaRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesRotateServerCaRequest} InstancesRotateServerCaRequest
                         */
                        InstancesRotateServerCaRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesRotateServerCaRequest();
                            if (object.rotateServerCaContext != null) {
                                if (typeof object.rotateServerCaContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesRotateServerCaRequest.rotateServerCaContext: object expected");
                                message.rotateServerCaContext = $root.google.cloud.sql.v1beta4.RotateServerCaContext.fromObject(object.rotateServerCaContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesRotateServerCaRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesRotateServerCaRequest} message InstancesRotateServerCaRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesRotateServerCaRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.rotateServerCaContext = null;
                            if (message.rotateServerCaContext != null && message.hasOwnProperty("rotateServerCaContext"))
                                object.rotateServerCaContext = $root.google.cloud.sql.v1beta4.RotateServerCaContext.toObject(message.rotateServerCaContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesRotateServerCaRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesRotateServerCaRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesRotateServerCaRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesRotateServerCaRequest;
                    })();
    
                    v1beta4.InstancesTruncateLogRequest = (function() {
    
                        /**
                         * Properties of an InstancesTruncateLogRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInstancesTruncateLogRequest
                         * @property {google.cloud.sql.v1beta4.ITruncateLogContext|null} [truncateLogContext] InstancesTruncateLogRequest truncateLogContext
                         */
    
                        /**
                         * Constructs a new InstancesTruncateLogRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InstancesTruncateLogRequest.
                         * @implements IInstancesTruncateLogRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInstancesTruncateLogRequest=} [properties] Properties to set
                         */
                        function InstancesTruncateLogRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstancesTruncateLogRequest truncateLogContext.
                         * @member {google.cloud.sql.v1beta4.ITruncateLogContext|null|undefined} truncateLogContext
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @instance
                         */
                        InstancesTruncateLogRequest.prototype.truncateLogContext = null;
    
                        /**
                         * Creates a new InstancesTruncateLogRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesTruncateLogRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InstancesTruncateLogRequest} InstancesTruncateLogRequest instance
                         */
                        InstancesTruncateLogRequest.create = function create(properties) {
                            return new InstancesTruncateLogRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstancesTruncateLogRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesTruncateLogRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesTruncateLogRequest} message InstancesTruncateLogRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesTruncateLogRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.truncateLogContext != null && Object.hasOwnProperty.call(message, "truncateLogContext"))
                                $root.google.cloud.sql.v1beta4.TruncateLogContext.encode(message.truncateLogContext, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstancesTruncateLogRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InstancesTruncateLogRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInstancesTruncateLogRequest} message InstancesTruncateLogRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstancesTruncateLogRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstancesTruncateLogRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InstancesTruncateLogRequest} InstancesTruncateLogRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesTruncateLogRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.truncateLogContext = $root.google.cloud.sql.v1beta4.TruncateLogContext.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstancesTruncateLogRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InstancesTruncateLogRequest} InstancesTruncateLogRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstancesTruncateLogRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstancesTruncateLogRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstancesTruncateLogRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.truncateLogContext != null && message.hasOwnProperty("truncateLogContext")) {
                                var error = $root.google.cloud.sql.v1beta4.TruncateLogContext.verify(message.truncateLogContext);
                                if (error)
                                    return "truncateLogContext." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstancesTruncateLogRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InstancesTruncateLogRequest} InstancesTruncateLogRequest
                         */
                        InstancesTruncateLogRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InstancesTruncateLogRequest();
                            if (object.truncateLogContext != null) {
                                if (typeof object.truncateLogContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InstancesTruncateLogRequest.truncateLogContext: object expected");
                                message.truncateLogContext = $root.google.cloud.sql.v1beta4.TruncateLogContext.fromObject(object.truncateLogContext);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstancesTruncateLogRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.InstancesTruncateLogRequest} message InstancesTruncateLogRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstancesTruncateLogRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.truncateLogContext = null;
                            if (message.truncateLogContext != null && message.hasOwnProperty("truncateLogContext"))
                                object.truncateLogContext = $root.google.cloud.sql.v1beta4.TruncateLogContext.toObject(message.truncateLogContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this InstancesTruncateLogRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InstancesTruncateLogRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstancesTruncateLogRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InstancesTruncateLogRequest;
                    })();
    
                    v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse = (function() {
    
                        /**
                         * Properties of a SqlInstancesVerifyExternalSyncSettingsResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesVerifyExternalSyncSettingsResponse
                         * @property {string|null} [kind] SqlInstancesVerifyExternalSyncSettingsResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.ISqlExternalSyncSettingError>|null} [errors] SqlInstancesVerifyExternalSyncSettingsResponse errors
                         * @property {Array.<google.cloud.sql.v1beta4.ISqlExternalSyncSettingError>|null} [warnings] SqlInstancesVerifyExternalSyncSettingsResponse warnings
                         */
    
                        /**
                         * Constructs a new SqlInstancesVerifyExternalSyncSettingsResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesVerifyExternalSyncSettingsResponse.
                         * @implements ISqlInstancesVerifyExternalSyncSettingsResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsResponse=} [properties] Properties to set
                         */
                        function SqlInstancesVerifyExternalSyncSettingsResponse(properties) {
                            this.errors = [];
                            this.warnings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesVerifyExternalSyncSettingsResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.prototype.kind = "";
    
                        /**
                         * SqlInstancesVerifyExternalSyncSettingsResponse errors.
                         * @member {Array.<google.cloud.sql.v1beta4.ISqlExternalSyncSettingError>} errors
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.prototype.errors = $util.emptyArray;
    
                        /**
                         * SqlInstancesVerifyExternalSyncSettingsResponse warnings.
                         * @member {Array.<google.cloud.sql.v1beta4.ISqlExternalSyncSettingError>} warnings
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.prototype.warnings = $util.emptyArray;
    
                        /**
                         * Creates a new SqlInstancesVerifyExternalSyncSettingsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse} SqlInstancesVerifyExternalSyncSettingsResponse instance
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.create = function create(properties) {
                            return new SqlInstancesVerifyExternalSyncSettingsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesVerifyExternalSyncSettingsResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsResponse} message SqlInstancesVerifyExternalSyncSettingsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.encode(message.errors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.warnings != null && message.warnings.length)
                                for (var i = 0; i < message.warnings.length; ++i)
                                    $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.encode(message.warnings[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesVerifyExternalSyncSettingsResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesVerifyExternalSyncSettingsResponse} message SqlInstancesVerifyExternalSyncSettingsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesVerifyExternalSyncSettingsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse} SqlInstancesVerifyExternalSyncSettingsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.errors && message.errors.length))
                                        message.errors = [];
                                    message.errors.push($root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    if (!(message.warnings && message.warnings.length))
                                        message.warnings = [];
                                    message.warnings.push($root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesVerifyExternalSyncSettingsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse} SqlInstancesVerifyExternalSyncSettingsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesVerifyExternalSyncSettingsResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                if (!Array.isArray(message.warnings))
                                    return "warnings: array expected";
                                for (var i = 0; i < message.warnings.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.verify(message.warnings[i]);
                                    if (error)
                                        return "warnings." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesVerifyExternalSyncSettingsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse} SqlInstancesVerifyExternalSyncSettingsResponse
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse.errors: object expected");
                                    message.errors[i] = $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.fromObject(object.errors[i]);
                                }
                            }
                            if (object.warnings) {
                                if (!Array.isArray(object.warnings))
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse.warnings: array expected");
                                message.warnings = [];
                                for (var i = 0; i < object.warnings.length; ++i) {
                                    if (typeof object.warnings[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse.warnings: object expected");
                                    message.warnings[i] = $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.fromObject(object.warnings[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesVerifyExternalSyncSettingsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse} message SqlInstancesVerifyExternalSyncSettingsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.errors = [];
                                object.warnings = [];
                            }
                            if (options.defaults)
                                object.kind = "";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.toObject(message.errors[j], options);
                            }
                            if (message.warnings && message.warnings.length) {
                                object.warnings = [];
                                for (var j = 0; j < message.warnings.length; ++j)
                                    object.warnings[j] = $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.toObject(message.warnings[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesVerifyExternalSyncSettingsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesVerifyExternalSyncSettingsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesVerifyExternalSyncSettingsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlInstancesVerifyExternalSyncSettingsResponse;
                    })();
    
                    v1beta4.SqlExternalSyncSettingError = (function() {
    
                        /**
                         * Properties of a SqlExternalSyncSettingError.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlExternalSyncSettingError
                         * @property {string|null} [kind] SqlExternalSyncSettingError kind
                         * @property {google.cloud.sql.v1beta4.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType|null} [type] SqlExternalSyncSettingError type
                         * @property {string|null} [detail] SqlExternalSyncSettingError detail
                         */
    
                        /**
                         * Constructs a new SqlExternalSyncSettingError.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlExternalSyncSettingError.
                         * @implements ISqlExternalSyncSettingError
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlExternalSyncSettingError=} [properties] Properties to set
                         */
                        function SqlExternalSyncSettingError(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlExternalSyncSettingError kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @instance
                         */
                        SqlExternalSyncSettingError.prototype.kind = "";
    
                        /**
                         * SqlExternalSyncSettingError type.
                         * @member {google.cloud.sql.v1beta4.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType} type
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @instance
                         */
                        SqlExternalSyncSettingError.prototype.type = 0;
    
                        /**
                         * SqlExternalSyncSettingError detail.
                         * @member {string} detail
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @instance
                         */
                        SqlExternalSyncSettingError.prototype.detail = "";
    
                        /**
                         * Creates a new SqlExternalSyncSettingError instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlExternalSyncSettingError=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlExternalSyncSettingError} SqlExternalSyncSettingError instance
                         */
                        SqlExternalSyncSettingError.create = function create(properties) {
                            return new SqlExternalSyncSettingError(properties);
                        };
    
                        /**
                         * Encodes the specified SqlExternalSyncSettingError message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlExternalSyncSettingError.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlExternalSyncSettingError} message SqlExternalSyncSettingError message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlExternalSyncSettingError.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.detail != null && Object.hasOwnProperty.call(message, "detail"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.detail);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlExternalSyncSettingError message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlExternalSyncSettingError.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlExternalSyncSettingError} message SqlExternalSyncSettingError message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlExternalSyncSettingError.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlExternalSyncSettingError message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlExternalSyncSettingError} SqlExternalSyncSettingError
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlExternalSyncSettingError.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.type = reader.int32();
                                    break;
                                case 3:
                                    message.detail = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlExternalSyncSettingError message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlExternalSyncSettingError} SqlExternalSyncSettingError
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlExternalSyncSettingError.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlExternalSyncSettingError message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlExternalSyncSettingError.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 13:
                                case 14:
                                case 15:
                                case 16:
                                case 17:
                                case 18:
                                case 19:
                                case 20:
                                case 21:
                                    break;
                                }
                            if (message.detail != null && message.hasOwnProperty("detail"))
                                if (!$util.isString(message.detail))
                                    return "detail: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlExternalSyncSettingError message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlExternalSyncSettingError} SqlExternalSyncSettingError
                         */
                        SqlExternalSyncSettingError.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            switch (object.type) {
                            case "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "CONNECTION_FAILURE":
                            case 1:
                                message.type = 1;
                                break;
                            case "BINLOG_NOT_ENABLED":
                            case 2:
                                message.type = 2;
                                break;
                            case "INCOMPATIBLE_DATABASE_VERSION":
                            case 3:
                                message.type = 3;
                                break;
                            case "REPLICA_ALREADY_SETUP":
                            case 4:
                                message.type = 4;
                                break;
                            case "INSUFFICIENT_PRIVILEGE":
                            case 5:
                                message.type = 5;
                                break;
                            case "UNSUPPORTED_MIGRATION_TYPE":
                            case 6:
                                message.type = 6;
                                break;
                            case "NO_PGLOGICAL_INSTALLED":
                            case 7:
                                message.type = 7;
                                break;
                            case "PGLOGICAL_NODE_ALREADY_EXISTS":
                            case 8:
                                message.type = 8;
                                break;
                            case "INVALID_WAL_LEVEL":
                            case 9:
                                message.type = 9;
                                break;
                            case "INVALID_SHARED_PRELOAD_LIBRARY":
                            case 10:
                                message.type = 10;
                                break;
                            case "INSUFFICIENT_MAX_REPLICATION_SLOTS":
                            case 11:
                                message.type = 11;
                                break;
                            case "INSUFFICIENT_MAX_WAL_SENDERS":
                            case 12:
                                message.type = 12;
                                break;
                            case "INSUFFICIENT_MAX_WORKER_PROCESSES":
                            case 13:
                                message.type = 13;
                                break;
                            case "UNSUPPORTED_EXTENSIONS":
                            case 14:
                                message.type = 14;
                                break;
                            case "INVALID_RDS_LOGICAL_REPLICATION":
                            case 15:
                                message.type = 15;
                                break;
                            case "INVALID_LOGGING_SETUP":
                            case 16:
                                message.type = 16;
                                break;
                            case "INVALID_DB_PARAM":
                            case 17:
                                message.type = 17;
                                break;
                            case "UNSUPPORTED_GTID_MODE":
                            case 18:
                                message.type = 18;
                                break;
                            case "SQLSERVER_AGENT_NOT_RUNNING":
                            case 19:
                                message.type = 19;
                                break;
                            case "UNSUPPORTED_TABLE_DEFINITION":
                            case 20:
                                message.type = 20;
                                break;
                            case "UNSUPPORTED_DEFINER":
                            case 21:
                                message.type = 21;
                                break;
                            }
                            if (object.detail != null)
                                message.detail = String(object.detail);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlExternalSyncSettingError message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlExternalSyncSettingError} message SqlExternalSyncSettingError
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlExternalSyncSettingError.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.type = options.enums === String ? "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED" : 0;
                                object.detail = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType[message.type] : message.type;
                            if (message.detail != null && message.hasOwnProperty("detail"))
                                object.detail = message.detail;
                            return object;
                        };
    
                        /**
                         * Converts this SqlExternalSyncSettingError to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlExternalSyncSettingError
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlExternalSyncSettingError.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * SqlExternalSyncSettingErrorType enum.
                         * @name google.cloud.sql.v1beta4.SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType
                         * @enum {number}
                         * @property {number} SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED=0 SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED value
                         * @property {number} CONNECTION_FAILURE=1 CONNECTION_FAILURE value
                         * @property {number} BINLOG_NOT_ENABLED=2 BINLOG_NOT_ENABLED value
                         * @property {number} INCOMPATIBLE_DATABASE_VERSION=3 INCOMPATIBLE_DATABASE_VERSION value
                         * @property {number} REPLICA_ALREADY_SETUP=4 REPLICA_ALREADY_SETUP value
                         * @property {number} INSUFFICIENT_PRIVILEGE=5 INSUFFICIENT_PRIVILEGE value
                         * @property {number} UNSUPPORTED_MIGRATION_TYPE=6 UNSUPPORTED_MIGRATION_TYPE value
                         * @property {number} NO_PGLOGICAL_INSTALLED=7 NO_PGLOGICAL_INSTALLED value
                         * @property {number} PGLOGICAL_NODE_ALREADY_EXISTS=8 PGLOGICAL_NODE_ALREADY_EXISTS value
                         * @property {number} INVALID_WAL_LEVEL=9 INVALID_WAL_LEVEL value
                         * @property {number} INVALID_SHARED_PRELOAD_LIBRARY=10 INVALID_SHARED_PRELOAD_LIBRARY value
                         * @property {number} INSUFFICIENT_MAX_REPLICATION_SLOTS=11 INSUFFICIENT_MAX_REPLICATION_SLOTS value
                         * @property {number} INSUFFICIENT_MAX_WAL_SENDERS=12 INSUFFICIENT_MAX_WAL_SENDERS value
                         * @property {number} INSUFFICIENT_MAX_WORKER_PROCESSES=13 INSUFFICIENT_MAX_WORKER_PROCESSES value
                         * @property {number} UNSUPPORTED_EXTENSIONS=14 UNSUPPORTED_EXTENSIONS value
                         * @property {number} INVALID_RDS_LOGICAL_REPLICATION=15 INVALID_RDS_LOGICAL_REPLICATION value
                         * @property {number} INVALID_LOGGING_SETUP=16 INVALID_LOGGING_SETUP value
                         * @property {number} INVALID_DB_PARAM=17 INVALID_DB_PARAM value
                         * @property {number} UNSUPPORTED_GTID_MODE=18 UNSUPPORTED_GTID_MODE value
                         * @property {number} SQLSERVER_AGENT_NOT_RUNNING=19 SQLSERVER_AGENT_NOT_RUNNING value
                         * @property {number} UNSUPPORTED_TABLE_DEFINITION=20 UNSUPPORTED_TABLE_DEFINITION value
                         * @property {number} UNSUPPORTED_DEFINER=21 UNSUPPORTED_DEFINER value
                         */
                        SqlExternalSyncSettingError.SqlExternalSyncSettingErrorType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CONNECTION_FAILURE"] = 1;
                            values[valuesById[2] = "BINLOG_NOT_ENABLED"] = 2;
                            values[valuesById[3] = "INCOMPATIBLE_DATABASE_VERSION"] = 3;
                            values[valuesById[4] = "REPLICA_ALREADY_SETUP"] = 4;
                            values[valuesById[5] = "INSUFFICIENT_PRIVILEGE"] = 5;
                            values[valuesById[6] = "UNSUPPORTED_MIGRATION_TYPE"] = 6;
                            values[valuesById[7] = "NO_PGLOGICAL_INSTALLED"] = 7;
                            values[valuesById[8] = "PGLOGICAL_NODE_ALREADY_EXISTS"] = 8;
                            values[valuesById[9] = "INVALID_WAL_LEVEL"] = 9;
                            values[valuesById[10] = "INVALID_SHARED_PRELOAD_LIBRARY"] = 10;
                            values[valuesById[11] = "INSUFFICIENT_MAX_REPLICATION_SLOTS"] = 11;
                            values[valuesById[12] = "INSUFFICIENT_MAX_WAL_SENDERS"] = 12;
                            values[valuesById[13] = "INSUFFICIENT_MAX_WORKER_PROCESSES"] = 13;
                            values[valuesById[14] = "UNSUPPORTED_EXTENSIONS"] = 14;
                            values[valuesById[15] = "INVALID_RDS_LOGICAL_REPLICATION"] = 15;
                            values[valuesById[16] = "INVALID_LOGGING_SETUP"] = 16;
                            values[valuesById[17] = "INVALID_DB_PARAM"] = 17;
                            values[valuesById[18] = "UNSUPPORTED_GTID_MODE"] = 18;
                            values[valuesById[19] = "SQLSERVER_AGENT_NOT_RUNNING"] = 19;
                            values[valuesById[20] = "UNSUPPORTED_TABLE_DEFINITION"] = 20;
                            values[valuesById[21] = "UNSUPPORTED_DEFINER"] = 21;
                            return values;
                        })();
    
                        return SqlExternalSyncSettingError;
                    })();
    
                    v1beta4.IpConfiguration = (function() {
    
                        /**
                         * Properties of an IpConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IIpConfiguration
                         * @property {google.protobuf.IBoolValue|null} [ipv4Enabled] IpConfiguration ipv4Enabled
                         * @property {string|null} [privateNetwork] IpConfiguration privateNetwork
                         * @property {google.protobuf.IBoolValue|null} [requireSsl] IpConfiguration requireSsl
                         * @property {Array.<google.cloud.sql.v1beta4.IAclEntry>|null} [authorizedNetworks] IpConfiguration authorizedNetworks
                         */
    
                        /**
                         * Constructs a new IpConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an IpConfiguration.
                         * @implements IIpConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IIpConfiguration=} [properties] Properties to set
                         */
                        function IpConfiguration(properties) {
                            this.authorizedNetworks = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IpConfiguration ipv4Enabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} ipv4Enabled
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @instance
                         */
                        IpConfiguration.prototype.ipv4Enabled = null;
    
                        /**
                         * IpConfiguration privateNetwork.
                         * @member {string} privateNetwork
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @instance
                         */
                        IpConfiguration.prototype.privateNetwork = "";
    
                        /**
                         * IpConfiguration requireSsl.
                         * @member {google.protobuf.IBoolValue|null|undefined} requireSsl
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @instance
                         */
                        IpConfiguration.prototype.requireSsl = null;
    
                        /**
                         * IpConfiguration authorizedNetworks.
                         * @member {Array.<google.cloud.sql.v1beta4.IAclEntry>} authorizedNetworks
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @instance
                         */
                        IpConfiguration.prototype.authorizedNetworks = $util.emptyArray;
    
                        /**
                         * Creates a new IpConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IIpConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.IpConfiguration} IpConfiguration instance
                         */
                        IpConfiguration.create = function create(properties) {
                            return new IpConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified IpConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.IpConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IIpConfiguration} message IpConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IpConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.ipv4Enabled != null && Object.hasOwnProperty.call(message, "ipv4Enabled"))
                                $root.google.protobuf.BoolValue.encode(message.ipv4Enabled, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.privateNetwork != null && Object.hasOwnProperty.call(message, "privateNetwork"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.privateNetwork);
                            if (message.requireSsl != null && Object.hasOwnProperty.call(message, "requireSsl"))
                                $root.google.protobuf.BoolValue.encode(message.requireSsl, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.authorizedNetworks != null && message.authorizedNetworks.length)
                                for (var i = 0; i < message.authorizedNetworks.length; ++i)
                                    $root.google.cloud.sql.v1beta4.AclEntry.encode(message.authorizedNetworks[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IpConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.IpConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IIpConfiguration} message IpConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IpConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IpConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.IpConfiguration} IpConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IpConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.IpConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.ipv4Enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.privateNetwork = reader.string();
                                    break;
                                case 3:
                                    message.requireSsl = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    if (!(message.authorizedNetworks && message.authorizedNetworks.length))
                                        message.authorizedNetworks = [];
                                    message.authorizedNetworks.push($root.google.cloud.sql.v1beta4.AclEntry.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IpConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.IpConfiguration} IpConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IpConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IpConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IpConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.ipv4Enabled != null && message.hasOwnProperty("ipv4Enabled")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.ipv4Enabled);
                                if (error)
                                    return "ipv4Enabled." + error;
                            }
                            if (message.privateNetwork != null && message.hasOwnProperty("privateNetwork"))
                                if (!$util.isString(message.privateNetwork))
                                    return "privateNetwork: string expected";
                            if (message.requireSsl != null && message.hasOwnProperty("requireSsl")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.requireSsl);
                                if (error)
                                    return "requireSsl." + error;
                            }
                            if (message.authorizedNetworks != null && message.hasOwnProperty("authorizedNetworks")) {
                                if (!Array.isArray(message.authorizedNetworks))
                                    return "authorizedNetworks: array expected";
                                for (var i = 0; i < message.authorizedNetworks.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.AclEntry.verify(message.authorizedNetworks[i]);
                                    if (error)
                                        return "authorizedNetworks." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an IpConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.IpConfiguration} IpConfiguration
                         */
                        IpConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.IpConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.IpConfiguration();
                            if (object.ipv4Enabled != null) {
                                if (typeof object.ipv4Enabled !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.IpConfiguration.ipv4Enabled: object expected");
                                message.ipv4Enabled = $root.google.protobuf.BoolValue.fromObject(object.ipv4Enabled);
                            }
                            if (object.privateNetwork != null)
                                message.privateNetwork = String(object.privateNetwork);
                            if (object.requireSsl != null) {
                                if (typeof object.requireSsl !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.IpConfiguration.requireSsl: object expected");
                                message.requireSsl = $root.google.protobuf.BoolValue.fromObject(object.requireSsl);
                            }
                            if (object.authorizedNetworks) {
                                if (!Array.isArray(object.authorizedNetworks))
                                    throw TypeError(".google.cloud.sql.v1beta4.IpConfiguration.authorizedNetworks: array expected");
                                message.authorizedNetworks = [];
                                for (var i = 0; i < object.authorizedNetworks.length; ++i) {
                                    if (typeof object.authorizedNetworks[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.IpConfiguration.authorizedNetworks: object expected");
                                    message.authorizedNetworks[i] = $root.google.cloud.sql.v1beta4.AclEntry.fromObject(object.authorizedNetworks[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IpConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IpConfiguration} message IpConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IpConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.authorizedNetworks = [];
                            if (options.defaults) {
                                object.ipv4Enabled = null;
                                object.privateNetwork = "";
                                object.requireSsl = null;
                            }
                            if (message.ipv4Enabled != null && message.hasOwnProperty("ipv4Enabled"))
                                object.ipv4Enabled = $root.google.protobuf.BoolValue.toObject(message.ipv4Enabled, options);
                            if (message.privateNetwork != null && message.hasOwnProperty("privateNetwork"))
                                object.privateNetwork = message.privateNetwork;
                            if (message.requireSsl != null && message.hasOwnProperty("requireSsl"))
                                object.requireSsl = $root.google.protobuf.BoolValue.toObject(message.requireSsl, options);
                            if (message.authorizedNetworks && message.authorizedNetworks.length) {
                                object.authorizedNetworks = [];
                                for (var j = 0; j < message.authorizedNetworks.length; ++j)
                                    object.authorizedNetworks[j] = $root.google.cloud.sql.v1beta4.AclEntry.toObject(message.authorizedNetworks[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this IpConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.IpConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IpConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return IpConfiguration;
                    })();
    
                    v1beta4.IpMapping = (function() {
    
                        /**
                         * Properties of an IpMapping.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IIpMapping
                         * @property {google.cloud.sql.v1beta4.SqlIpAddressType|null} [type] IpMapping type
                         * @property {string|null} [ipAddress] IpMapping ipAddress
                         * @property {google.protobuf.ITimestamp|null} [timeToRetire] IpMapping timeToRetire
                         */
    
                        /**
                         * Constructs a new IpMapping.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an IpMapping.
                         * @implements IIpMapping
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IIpMapping=} [properties] Properties to set
                         */
                        function IpMapping(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IpMapping type.
                         * @member {google.cloud.sql.v1beta4.SqlIpAddressType} type
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @instance
                         */
                        IpMapping.prototype.type = 0;
    
                        /**
                         * IpMapping ipAddress.
                         * @member {string} ipAddress
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @instance
                         */
                        IpMapping.prototype.ipAddress = "";
    
                        /**
                         * IpMapping timeToRetire.
                         * @member {google.protobuf.ITimestamp|null|undefined} timeToRetire
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @instance
                         */
                        IpMapping.prototype.timeToRetire = null;
    
                        /**
                         * Creates a new IpMapping instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {google.cloud.sql.v1beta4.IIpMapping=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.IpMapping} IpMapping instance
                         */
                        IpMapping.create = function create(properties) {
                            return new IpMapping(properties);
                        };
    
                        /**
                         * Encodes the specified IpMapping message. Does not implicitly {@link google.cloud.sql.v1beta4.IpMapping.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {google.cloud.sql.v1beta4.IIpMapping} message IpMapping message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IpMapping.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                            if (message.ipAddress != null && Object.hasOwnProperty.call(message, "ipAddress"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.ipAddress);
                            if (message.timeToRetire != null && Object.hasOwnProperty.call(message, "timeToRetire"))
                                $root.google.protobuf.Timestamp.encode(message.timeToRetire, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IpMapping message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.IpMapping.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {google.cloud.sql.v1beta4.IIpMapping} message IpMapping message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IpMapping.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IpMapping message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.IpMapping} IpMapping
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IpMapping.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.IpMapping();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = reader.int32();
                                    break;
                                case 2:
                                    message.ipAddress = reader.string();
                                    break;
                                case 3:
                                    message.timeToRetire = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IpMapping message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.IpMapping} IpMapping
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IpMapping.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IpMapping message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IpMapping.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.ipAddress != null && message.hasOwnProperty("ipAddress"))
                                if (!$util.isString(message.ipAddress))
                                    return "ipAddress: string expected";
                            if (message.timeToRetire != null && message.hasOwnProperty("timeToRetire")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.timeToRetire);
                                if (error)
                                    return "timeToRetire." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an IpMapping message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.IpMapping} IpMapping
                         */
                        IpMapping.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.IpMapping)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.IpMapping();
                            switch (object.type) {
                            case "SQL_IP_ADDRESS_TYPE_UNSPECIFIED":
                            case 0:
                                message.type = 0;
                                break;
                            case "PRIMARY":
                            case 1:
                                message.type = 1;
                                break;
                            case "OUTGOING":
                            case 2:
                                message.type = 2;
                                break;
                            case "PRIVATE":
                            case 3:
                                message.type = 3;
                                break;
                            case "MIGRATED_1ST_GEN":
                            case 4:
                                message.type = 4;
                                break;
                            }
                            if (object.ipAddress != null)
                                message.ipAddress = String(object.ipAddress);
                            if (object.timeToRetire != null) {
                                if (typeof object.timeToRetire !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.IpMapping.timeToRetire: object expected");
                                message.timeToRetire = $root.google.protobuf.Timestamp.fromObject(object.timeToRetire);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IpMapping message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @static
                         * @param {google.cloud.sql.v1beta4.IpMapping} message IpMapping
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IpMapping.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = options.enums === String ? "SQL_IP_ADDRESS_TYPE_UNSPECIFIED" : 0;
                                object.ipAddress = "";
                                object.timeToRetire = null;
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlIpAddressType[message.type] : message.type;
                            if (message.ipAddress != null && message.hasOwnProperty("ipAddress"))
                                object.ipAddress = message.ipAddress;
                            if (message.timeToRetire != null && message.hasOwnProperty("timeToRetire"))
                                object.timeToRetire = $root.google.protobuf.Timestamp.toObject(message.timeToRetire, options);
                            return object;
                        };
    
                        /**
                         * Converts this IpMapping to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.IpMapping
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IpMapping.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return IpMapping;
                    })();
    
                    v1beta4.LocationPreference = (function() {
    
                        /**
                         * Properties of a LocationPreference.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ILocationPreference
                         * @property {string|null} [followGaeApplication] LocationPreference followGaeApplication
                         * @property {string|null} [zone] LocationPreference zone
                         * @property {string|null} [secondaryZone] LocationPreference secondaryZone
                         * @property {string|null} [kind] LocationPreference kind
                         */
    
                        /**
                         * Constructs a new LocationPreference.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a LocationPreference.
                         * @implements ILocationPreference
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ILocationPreference=} [properties] Properties to set
                         */
                        function LocationPreference(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LocationPreference followGaeApplication.
                         * @member {string} followGaeApplication
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @instance
                         */
                        LocationPreference.prototype.followGaeApplication = "";
    
                        /**
                         * LocationPreference zone.
                         * @member {string} zone
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @instance
                         */
                        LocationPreference.prototype.zone = "";
    
                        /**
                         * LocationPreference secondaryZone.
                         * @member {string} secondaryZone
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @instance
                         */
                        LocationPreference.prototype.secondaryZone = "";
    
                        /**
                         * LocationPreference kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @instance
                         */
                        LocationPreference.prototype.kind = "";
    
                        /**
                         * Creates a new LocationPreference instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {google.cloud.sql.v1beta4.ILocationPreference=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.LocationPreference} LocationPreference instance
                         */
                        LocationPreference.create = function create(properties) {
                            return new LocationPreference(properties);
                        };
    
                        /**
                         * Encodes the specified LocationPreference message. Does not implicitly {@link google.cloud.sql.v1beta4.LocationPreference.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {google.cloud.sql.v1beta4.ILocationPreference} message LocationPreference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationPreference.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.followGaeApplication != null && Object.hasOwnProperty.call(message, "followGaeApplication"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.followGaeApplication);
                            if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.zone);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                            if (message.secondaryZone != null && Object.hasOwnProperty.call(message, "secondaryZone"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.secondaryZone);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LocationPreference message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.LocationPreference.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {google.cloud.sql.v1beta4.ILocationPreference} message LocationPreference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocationPreference.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LocationPreference message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.LocationPreference} LocationPreference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationPreference.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.LocationPreference();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.followGaeApplication = reader.string();
                                    break;
                                case 2:
                                    message.zone = reader.string();
                                    break;
                                case 4:
                                    message.secondaryZone = reader.string();
                                    break;
                                case 3:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LocationPreference message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.LocationPreference} LocationPreference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocationPreference.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LocationPreference message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocationPreference.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.followGaeApplication != null && message.hasOwnProperty("followGaeApplication"))
                                if (!$util.isString(message.followGaeApplication))
                                    return "followGaeApplication: string expected";
                            if (message.zone != null && message.hasOwnProperty("zone"))
                                if (!$util.isString(message.zone))
                                    return "zone: string expected";
                            if (message.secondaryZone != null && message.hasOwnProperty("secondaryZone"))
                                if (!$util.isString(message.secondaryZone))
                                    return "secondaryZone: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a LocationPreference message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.LocationPreference} LocationPreference
                         */
                        LocationPreference.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.LocationPreference)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.LocationPreference();
                            if (object.followGaeApplication != null)
                                message.followGaeApplication = String(object.followGaeApplication);
                            if (object.zone != null)
                                message.zone = String(object.zone);
                            if (object.secondaryZone != null)
                                message.secondaryZone = String(object.secondaryZone);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LocationPreference message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @static
                         * @param {google.cloud.sql.v1beta4.LocationPreference} message LocationPreference
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocationPreference.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.followGaeApplication = "";
                                object.zone = "";
                                object.kind = "";
                                object.secondaryZone = "";
                            }
                            if (message.followGaeApplication != null && message.hasOwnProperty("followGaeApplication"))
                                object.followGaeApplication = message.followGaeApplication;
                            if (message.zone != null && message.hasOwnProperty("zone"))
                                object.zone = message.zone;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.secondaryZone != null && message.hasOwnProperty("secondaryZone"))
                                object.secondaryZone = message.secondaryZone;
                            return object;
                        };
    
                        /**
                         * Converts this LocationPreference to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.LocationPreference
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocationPreference.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return LocationPreference;
                    })();
    
                    v1beta4.MaintenanceWindow = (function() {
    
                        /**
                         * Properties of a MaintenanceWindow.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IMaintenanceWindow
                         * @property {google.protobuf.IInt32Value|null} [hour] MaintenanceWindow hour
                         * @property {google.protobuf.IInt32Value|null} [day] MaintenanceWindow day
                         * @property {google.cloud.sql.v1beta4.SqlUpdateTrack|null} [updateTrack] MaintenanceWindow updateTrack
                         * @property {string|null} [kind] MaintenanceWindow kind
                         */
    
                        /**
                         * Constructs a new MaintenanceWindow.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a MaintenanceWindow.
                         * @implements IMaintenanceWindow
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IMaintenanceWindow=} [properties] Properties to set
                         */
                        function MaintenanceWindow(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MaintenanceWindow hour.
                         * @member {google.protobuf.IInt32Value|null|undefined} hour
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.hour = null;
    
                        /**
                         * MaintenanceWindow day.
                         * @member {google.protobuf.IInt32Value|null|undefined} day
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.day = null;
    
                        /**
                         * MaintenanceWindow updateTrack.
                         * @member {google.cloud.sql.v1beta4.SqlUpdateTrack} updateTrack
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.updateTrack = 0;
    
                        /**
                         * MaintenanceWindow kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @instance
                         */
                        MaintenanceWindow.prototype.kind = "";
    
                        /**
                         * Creates a new MaintenanceWindow instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {google.cloud.sql.v1beta4.IMaintenanceWindow=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.MaintenanceWindow} MaintenanceWindow instance
                         */
                        MaintenanceWindow.create = function create(properties) {
                            return new MaintenanceWindow(properties);
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message. Does not implicitly {@link google.cloud.sql.v1beta4.MaintenanceWindow.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {google.cloud.sql.v1beta4.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hour != null && Object.hasOwnProperty.call(message, "hour"))
                                $root.google.protobuf.Int32Value.encode(message.hour, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.day != null && Object.hasOwnProperty.call(message, "day"))
                                $root.google.protobuf.Int32Value.encode(message.day, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.updateTrack != null && Object.hasOwnProperty.call(message, "updateTrack"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.updateTrack);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MaintenanceWindow message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.MaintenanceWindow.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {google.cloud.sql.v1beta4.IMaintenanceWindow} message MaintenanceWindow message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MaintenanceWindow.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.MaintenanceWindow();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.hour = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.day = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.updateTrack = reader.int32();
                                    break;
                                case 4:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MaintenanceWindow message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.MaintenanceWindow} MaintenanceWindow
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MaintenanceWindow.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MaintenanceWindow message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MaintenanceWindow.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hour != null && message.hasOwnProperty("hour")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.hour);
                                if (error)
                                    return "hour." + error;
                            }
                            if (message.day != null && message.hasOwnProperty("day")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.day);
                                if (error)
                                    return "day." + error;
                            }
                            if (message.updateTrack != null && message.hasOwnProperty("updateTrack"))
                                switch (message.updateTrack) {
                                default:
                                    return "updateTrack: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MaintenanceWindow message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.MaintenanceWindow} MaintenanceWindow
                         */
                        MaintenanceWindow.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.MaintenanceWindow)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.MaintenanceWindow();
                            if (object.hour != null) {
                                if (typeof object.hour !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.MaintenanceWindow.hour: object expected");
                                message.hour = $root.google.protobuf.Int32Value.fromObject(object.hour);
                            }
                            if (object.day != null) {
                                if (typeof object.day !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.MaintenanceWindow.day: object expected");
                                message.day = $root.google.protobuf.Int32Value.fromObject(object.day);
                            }
                            switch (object.updateTrack) {
                            case "SQL_UPDATE_TRACK_UNSPECIFIED":
                            case 0:
                                message.updateTrack = 0;
                                break;
                            case "canary":
                            case 1:
                                message.updateTrack = 1;
                                break;
                            case "stable":
                            case 2:
                                message.updateTrack = 2;
                                break;
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MaintenanceWindow message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @static
                         * @param {google.cloud.sql.v1beta4.MaintenanceWindow} message MaintenanceWindow
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MaintenanceWindow.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hour = null;
                                object.day = null;
                                object.updateTrack = options.enums === String ? "SQL_UPDATE_TRACK_UNSPECIFIED" : 0;
                                object.kind = "";
                            }
                            if (message.hour != null && message.hasOwnProperty("hour"))
                                object.hour = $root.google.protobuf.Int32Value.toObject(message.hour, options);
                            if (message.day != null && message.hasOwnProperty("day"))
                                object.day = $root.google.protobuf.Int32Value.toObject(message.day, options);
                            if (message.updateTrack != null && message.hasOwnProperty("updateTrack"))
                                object.updateTrack = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlUpdateTrack[message.updateTrack] : message.updateTrack;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this MaintenanceWindow to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.MaintenanceWindow
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MaintenanceWindow.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MaintenanceWindow;
                    })();
    
                    v1beta4.DenyMaintenancePeriod = (function() {
    
                        /**
                         * Properties of a DenyMaintenancePeriod.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDenyMaintenancePeriod
                         * @property {string|null} [startDate] DenyMaintenancePeriod startDate
                         * @property {string|null} [endDate] DenyMaintenancePeriod endDate
                         * @property {string|null} [time] DenyMaintenancePeriod time
                         */
    
                        /**
                         * Constructs a new DenyMaintenancePeriod.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DenyMaintenancePeriod.
                         * @implements IDenyMaintenancePeriod
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDenyMaintenancePeriod=} [properties] Properties to set
                         */
                        function DenyMaintenancePeriod(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DenyMaintenancePeriod startDate.
                         * @member {string} startDate
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @instance
                         */
                        DenyMaintenancePeriod.prototype.startDate = "";
    
                        /**
                         * DenyMaintenancePeriod endDate.
                         * @member {string} endDate
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @instance
                         */
                        DenyMaintenancePeriod.prototype.endDate = "";
    
                        /**
                         * DenyMaintenancePeriod time.
                         * @member {string} time
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @instance
                         */
                        DenyMaintenancePeriod.prototype.time = "";
    
                        /**
                         * Creates a new DenyMaintenancePeriod instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDenyMaintenancePeriod=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DenyMaintenancePeriod} DenyMaintenancePeriod instance
                         */
                        DenyMaintenancePeriod.create = function create(properties) {
                            return new DenyMaintenancePeriod(properties);
                        };
    
                        /**
                         * Encodes the specified DenyMaintenancePeriod message. Does not implicitly {@link google.cloud.sql.v1beta4.DenyMaintenancePeriod.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDenyMaintenancePeriod} message DenyMaintenancePeriod message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DenyMaintenancePeriod.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.startDate != null && Object.hasOwnProperty.call(message, "startDate"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.startDate);
                            if (message.endDate != null && Object.hasOwnProperty.call(message, "endDate"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.endDate);
                            if (message.time != null && Object.hasOwnProperty.call(message, "time"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.time);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DenyMaintenancePeriod message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DenyMaintenancePeriod.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDenyMaintenancePeriod} message DenyMaintenancePeriod message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DenyMaintenancePeriod.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DenyMaintenancePeriod message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DenyMaintenancePeriod} DenyMaintenancePeriod
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DenyMaintenancePeriod.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DenyMaintenancePeriod();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.startDate = reader.string();
                                    break;
                                case 2:
                                    message.endDate = reader.string();
                                    break;
                                case 3:
                                    message.time = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DenyMaintenancePeriod message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DenyMaintenancePeriod} DenyMaintenancePeriod
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DenyMaintenancePeriod.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DenyMaintenancePeriod message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DenyMaintenancePeriod.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                if (!$util.isString(message.startDate))
                                    return "startDate: string expected";
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                if (!$util.isString(message.endDate))
                                    return "endDate: string expected";
                            if (message.time != null && message.hasOwnProperty("time"))
                                if (!$util.isString(message.time))
                                    return "time: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DenyMaintenancePeriod message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DenyMaintenancePeriod} DenyMaintenancePeriod
                         */
                        DenyMaintenancePeriod.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DenyMaintenancePeriod)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DenyMaintenancePeriod();
                            if (object.startDate != null)
                                message.startDate = String(object.startDate);
                            if (object.endDate != null)
                                message.endDate = String(object.endDate);
                            if (object.time != null)
                                message.time = String(object.time);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DenyMaintenancePeriod message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @static
                         * @param {google.cloud.sql.v1beta4.DenyMaintenancePeriod} message DenyMaintenancePeriod
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DenyMaintenancePeriod.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.startDate = "";
                                object.endDate = "";
                                object.time = "";
                            }
                            if (message.startDate != null && message.hasOwnProperty("startDate"))
                                object.startDate = message.startDate;
                            if (message.endDate != null && message.hasOwnProperty("endDate"))
                                object.endDate = message.endDate;
                            if (message.time != null && message.hasOwnProperty("time"))
                                object.time = message.time;
                            return object;
                        };
    
                        /**
                         * Converts this DenyMaintenancePeriod to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DenyMaintenancePeriod
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DenyMaintenancePeriod.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DenyMaintenancePeriod;
                    })();
    
                    v1beta4.InsightsConfig = (function() {
    
                        /**
                         * Properties of an InsightsConfig.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IInsightsConfig
                         * @property {boolean|null} [queryInsightsEnabled] InsightsConfig queryInsightsEnabled
                         * @property {boolean|null} [recordClientAddress] InsightsConfig recordClientAddress
                         * @property {boolean|null} [recordApplicationTags] InsightsConfig recordApplicationTags
                         * @property {google.protobuf.IInt32Value|null} [queryStringLength] InsightsConfig queryStringLength
                         * @property {google.protobuf.IInt32Value|null} [queryPlansPerMinute] InsightsConfig queryPlansPerMinute
                         */
    
                        /**
                         * Constructs a new InsightsConfig.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an InsightsConfig.
                         * @implements IInsightsConfig
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IInsightsConfig=} [properties] Properties to set
                         */
                        function InsightsConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InsightsConfig queryInsightsEnabled.
                         * @member {boolean} queryInsightsEnabled
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @instance
                         */
                        InsightsConfig.prototype.queryInsightsEnabled = false;
    
                        /**
                         * InsightsConfig recordClientAddress.
                         * @member {boolean} recordClientAddress
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @instance
                         */
                        InsightsConfig.prototype.recordClientAddress = false;
    
                        /**
                         * InsightsConfig recordApplicationTags.
                         * @member {boolean} recordApplicationTags
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @instance
                         */
                        InsightsConfig.prototype.recordApplicationTags = false;
    
                        /**
                         * InsightsConfig queryStringLength.
                         * @member {google.protobuf.IInt32Value|null|undefined} queryStringLength
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @instance
                         */
                        InsightsConfig.prototype.queryStringLength = null;
    
                        /**
                         * InsightsConfig queryPlansPerMinute.
                         * @member {google.protobuf.IInt32Value|null|undefined} queryPlansPerMinute
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @instance
                         */
                        InsightsConfig.prototype.queryPlansPerMinute = null;
    
                        /**
                         * Creates a new InsightsConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInsightsConfig=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.InsightsConfig} InsightsConfig instance
                         */
                        InsightsConfig.create = function create(properties) {
                            return new InsightsConfig(properties);
                        };
    
                        /**
                         * Encodes the specified InsightsConfig message. Does not implicitly {@link google.cloud.sql.v1beta4.InsightsConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInsightsConfig} message InsightsConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InsightsConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryInsightsEnabled != null && Object.hasOwnProperty.call(message, "queryInsightsEnabled"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.queryInsightsEnabled);
                            if (message.recordClientAddress != null && Object.hasOwnProperty.call(message, "recordClientAddress"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.recordClientAddress);
                            if (message.recordApplicationTags != null && Object.hasOwnProperty.call(message, "recordApplicationTags"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.recordApplicationTags);
                            if (message.queryStringLength != null && Object.hasOwnProperty.call(message, "queryStringLength"))
                                $root.google.protobuf.Int32Value.encode(message.queryStringLength, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.queryPlansPerMinute != null && Object.hasOwnProperty.call(message, "queryPlansPerMinute"))
                                $root.google.protobuf.Int32Value.encode(message.queryPlansPerMinute, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InsightsConfig message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.InsightsConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.IInsightsConfig} message InsightsConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InsightsConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InsightsConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.InsightsConfig} InsightsConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InsightsConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.InsightsConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.queryInsightsEnabled = reader.bool();
                                    break;
                                case 2:
                                    message.recordClientAddress = reader.bool();
                                    break;
                                case 3:
                                    message.recordApplicationTags = reader.bool();
                                    break;
                                case 4:
                                    message.queryStringLength = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.queryPlansPerMinute = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InsightsConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.InsightsConfig} InsightsConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InsightsConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InsightsConfig message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InsightsConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queryInsightsEnabled != null && message.hasOwnProperty("queryInsightsEnabled"))
                                if (typeof message.queryInsightsEnabled !== "boolean")
                                    return "queryInsightsEnabled: boolean expected";
                            if (message.recordClientAddress != null && message.hasOwnProperty("recordClientAddress"))
                                if (typeof message.recordClientAddress !== "boolean")
                                    return "recordClientAddress: boolean expected";
                            if (message.recordApplicationTags != null && message.hasOwnProperty("recordApplicationTags"))
                                if (typeof message.recordApplicationTags !== "boolean")
                                    return "recordApplicationTags: boolean expected";
                            if (message.queryStringLength != null && message.hasOwnProperty("queryStringLength")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.queryStringLength);
                                if (error)
                                    return "queryStringLength." + error;
                            }
                            if (message.queryPlansPerMinute != null && message.hasOwnProperty("queryPlansPerMinute")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.queryPlansPerMinute);
                                if (error)
                                    return "queryPlansPerMinute." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InsightsConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.InsightsConfig} InsightsConfig
                         */
                        InsightsConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.InsightsConfig)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.InsightsConfig();
                            if (object.queryInsightsEnabled != null)
                                message.queryInsightsEnabled = Boolean(object.queryInsightsEnabled);
                            if (object.recordClientAddress != null)
                                message.recordClientAddress = Boolean(object.recordClientAddress);
                            if (object.recordApplicationTags != null)
                                message.recordApplicationTags = Boolean(object.recordApplicationTags);
                            if (object.queryStringLength != null) {
                                if (typeof object.queryStringLength !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InsightsConfig.queryStringLength: object expected");
                                message.queryStringLength = $root.google.protobuf.Int32Value.fromObject(object.queryStringLength);
                            }
                            if (object.queryPlansPerMinute != null) {
                                if (typeof object.queryPlansPerMinute !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.InsightsConfig.queryPlansPerMinute: object expected");
                                message.queryPlansPerMinute = $root.google.protobuf.Int32Value.fromObject(object.queryPlansPerMinute);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InsightsConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.InsightsConfig} message InsightsConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InsightsConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.queryInsightsEnabled = false;
                                object.recordClientAddress = false;
                                object.recordApplicationTags = false;
                                object.queryStringLength = null;
                                object.queryPlansPerMinute = null;
                            }
                            if (message.queryInsightsEnabled != null && message.hasOwnProperty("queryInsightsEnabled"))
                                object.queryInsightsEnabled = message.queryInsightsEnabled;
                            if (message.recordClientAddress != null && message.hasOwnProperty("recordClientAddress"))
                                object.recordClientAddress = message.recordClientAddress;
                            if (message.recordApplicationTags != null && message.hasOwnProperty("recordApplicationTags"))
                                object.recordApplicationTags = message.recordApplicationTags;
                            if (message.queryStringLength != null && message.hasOwnProperty("queryStringLength"))
                                object.queryStringLength = $root.google.protobuf.Int32Value.toObject(message.queryStringLength, options);
                            if (message.queryPlansPerMinute != null && message.hasOwnProperty("queryPlansPerMinute"))
                                object.queryPlansPerMinute = $root.google.protobuf.Int32Value.toObject(message.queryPlansPerMinute, options);
                            return object;
                        };
    
                        /**
                         * Converts this InsightsConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.InsightsConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InsightsConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InsightsConfig;
                    })();
    
                    v1beta4.MySqlReplicaConfiguration = (function() {
    
                        /**
                         * Properties of a MySqlReplicaConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IMySqlReplicaConfiguration
                         * @property {string|null} [dumpFilePath] MySqlReplicaConfiguration dumpFilePath
                         * @property {string|null} [username] MySqlReplicaConfiguration username
                         * @property {string|null} [password] MySqlReplicaConfiguration password
                         * @property {google.protobuf.IInt32Value|null} [connectRetryInterval] MySqlReplicaConfiguration connectRetryInterval
                         * @property {google.protobuf.IInt64Value|null} [masterHeartbeatPeriod] MySqlReplicaConfiguration masterHeartbeatPeriod
                         * @property {string|null} [caCertificate] MySqlReplicaConfiguration caCertificate
                         * @property {string|null} [clientCertificate] MySqlReplicaConfiguration clientCertificate
                         * @property {string|null} [clientKey] MySqlReplicaConfiguration clientKey
                         * @property {string|null} [sslCipher] MySqlReplicaConfiguration sslCipher
                         * @property {google.protobuf.IBoolValue|null} [verifyServerCertificate] MySqlReplicaConfiguration verifyServerCertificate
                         * @property {string|null} [kind] MySqlReplicaConfiguration kind
                         */
    
                        /**
                         * Constructs a new MySqlReplicaConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a MySqlReplicaConfiguration.
                         * @implements IMySqlReplicaConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IMySqlReplicaConfiguration=} [properties] Properties to set
                         */
                        function MySqlReplicaConfiguration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MySqlReplicaConfiguration dumpFilePath.
                         * @member {string} dumpFilePath
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.dumpFilePath = "";
    
                        /**
                         * MySqlReplicaConfiguration username.
                         * @member {string} username
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.username = "";
    
                        /**
                         * MySqlReplicaConfiguration password.
                         * @member {string} password
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.password = "";
    
                        /**
                         * MySqlReplicaConfiguration connectRetryInterval.
                         * @member {google.protobuf.IInt32Value|null|undefined} connectRetryInterval
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.connectRetryInterval = null;
    
                        /**
                         * MySqlReplicaConfiguration masterHeartbeatPeriod.
                         * @member {google.protobuf.IInt64Value|null|undefined} masterHeartbeatPeriod
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.masterHeartbeatPeriod = null;
    
                        /**
                         * MySqlReplicaConfiguration caCertificate.
                         * @member {string} caCertificate
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.caCertificate = "";
    
                        /**
                         * MySqlReplicaConfiguration clientCertificate.
                         * @member {string} clientCertificate
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.clientCertificate = "";
    
                        /**
                         * MySqlReplicaConfiguration clientKey.
                         * @member {string} clientKey
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.clientKey = "";
    
                        /**
                         * MySqlReplicaConfiguration sslCipher.
                         * @member {string} sslCipher
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.sslCipher = "";
    
                        /**
                         * MySqlReplicaConfiguration verifyServerCertificate.
                         * @member {google.protobuf.IBoolValue|null|undefined} verifyServerCertificate
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.verifyServerCertificate = null;
    
                        /**
                         * MySqlReplicaConfiguration kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         */
                        MySqlReplicaConfiguration.prototype.kind = "";
    
                        /**
                         * Creates a new MySqlReplicaConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IMySqlReplicaConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.MySqlReplicaConfiguration} MySqlReplicaConfiguration instance
                         */
                        MySqlReplicaConfiguration.create = function create(properties) {
                            return new MySqlReplicaConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified MySqlReplicaConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.MySqlReplicaConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IMySqlReplicaConfiguration} message MySqlReplicaConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MySqlReplicaConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dumpFilePath != null && Object.hasOwnProperty.call(message, "dumpFilePath"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.dumpFilePath);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.password);
                            if (message.connectRetryInterval != null && Object.hasOwnProperty.call(message, "connectRetryInterval"))
                                $root.google.protobuf.Int32Value.encode(message.connectRetryInterval, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.masterHeartbeatPeriod != null && Object.hasOwnProperty.call(message, "masterHeartbeatPeriod"))
                                $root.google.protobuf.Int64Value.encode(message.masterHeartbeatPeriod, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.caCertificate != null && Object.hasOwnProperty.call(message, "caCertificate"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.caCertificate);
                            if (message.clientCertificate != null && Object.hasOwnProperty.call(message, "clientCertificate"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.clientCertificate);
                            if (message.clientKey != null && Object.hasOwnProperty.call(message, "clientKey"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.clientKey);
                            if (message.sslCipher != null && Object.hasOwnProperty.call(message, "sslCipher"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.sslCipher);
                            if (message.verifyServerCertificate != null && Object.hasOwnProperty.call(message, "verifyServerCertificate"))
                                $root.google.protobuf.BoolValue.encode(message.verifyServerCertificate, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MySqlReplicaConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.MySqlReplicaConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IMySqlReplicaConfiguration} message MySqlReplicaConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MySqlReplicaConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MySqlReplicaConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.MySqlReplicaConfiguration} MySqlReplicaConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MySqlReplicaConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.dumpFilePath = reader.string();
                                    break;
                                case 2:
                                    message.username = reader.string();
                                    break;
                                case 3:
                                    message.password = reader.string();
                                    break;
                                case 4:
                                    message.connectRetryInterval = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.masterHeartbeatPeriod = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.caCertificate = reader.string();
                                    break;
                                case 7:
                                    message.clientCertificate = reader.string();
                                    break;
                                case 8:
                                    message.clientKey = reader.string();
                                    break;
                                case 9:
                                    message.sslCipher = reader.string();
                                    break;
                                case 10:
                                    message.verifyServerCertificate = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MySqlReplicaConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.MySqlReplicaConfiguration} MySqlReplicaConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MySqlReplicaConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MySqlReplicaConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MySqlReplicaConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dumpFilePath != null && message.hasOwnProperty("dumpFilePath"))
                                if (!$util.isString(message.dumpFilePath))
                                    return "dumpFilePath: string expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.connectRetryInterval != null && message.hasOwnProperty("connectRetryInterval")) {
                                var error = $root.google.protobuf.Int32Value.verify(message.connectRetryInterval);
                                if (error)
                                    return "connectRetryInterval." + error;
                            }
                            if (message.masterHeartbeatPeriod != null && message.hasOwnProperty("masterHeartbeatPeriod")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.masterHeartbeatPeriod);
                                if (error)
                                    return "masterHeartbeatPeriod." + error;
                            }
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                if (!$util.isString(message.caCertificate))
                                    return "caCertificate: string expected";
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                if (!$util.isString(message.clientCertificate))
                                    return "clientCertificate: string expected";
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                if (!$util.isString(message.clientKey))
                                    return "clientKey: string expected";
                            if (message.sslCipher != null && message.hasOwnProperty("sslCipher"))
                                if (!$util.isString(message.sslCipher))
                                    return "sslCipher: string expected";
                            if (message.verifyServerCertificate != null && message.hasOwnProperty("verifyServerCertificate")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.verifyServerCertificate);
                                if (error)
                                    return "verifyServerCertificate." + error;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MySqlReplicaConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.MySqlReplicaConfiguration} MySqlReplicaConfiguration
                         */
                        MySqlReplicaConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration();
                            if (object.dumpFilePath != null)
                                message.dumpFilePath = String(object.dumpFilePath);
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.connectRetryInterval != null) {
                                if (typeof object.connectRetryInterval !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.MySqlReplicaConfiguration.connectRetryInterval: object expected");
                                message.connectRetryInterval = $root.google.protobuf.Int32Value.fromObject(object.connectRetryInterval);
                            }
                            if (object.masterHeartbeatPeriod != null) {
                                if (typeof object.masterHeartbeatPeriod !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.MySqlReplicaConfiguration.masterHeartbeatPeriod: object expected");
                                message.masterHeartbeatPeriod = $root.google.protobuf.Int64Value.fromObject(object.masterHeartbeatPeriod);
                            }
                            if (object.caCertificate != null)
                                message.caCertificate = String(object.caCertificate);
                            if (object.clientCertificate != null)
                                message.clientCertificate = String(object.clientCertificate);
                            if (object.clientKey != null)
                                message.clientKey = String(object.clientKey);
                            if (object.sslCipher != null)
                                message.sslCipher = String(object.sslCipher);
                            if (object.verifyServerCertificate != null) {
                                if (typeof object.verifyServerCertificate !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.MySqlReplicaConfiguration.verifyServerCertificate: object expected");
                                message.verifyServerCertificate = $root.google.protobuf.BoolValue.fromObject(object.verifyServerCertificate);
                            }
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MySqlReplicaConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.MySqlReplicaConfiguration} message MySqlReplicaConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MySqlReplicaConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.dumpFilePath = "";
                                object.username = "";
                                object.password = "";
                                object.connectRetryInterval = null;
                                object.masterHeartbeatPeriod = null;
                                object.caCertificate = "";
                                object.clientCertificate = "";
                                object.clientKey = "";
                                object.sslCipher = "";
                                object.verifyServerCertificate = null;
                                object.kind = "";
                            }
                            if (message.dumpFilePath != null && message.hasOwnProperty("dumpFilePath"))
                                object.dumpFilePath = message.dumpFilePath;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.connectRetryInterval != null && message.hasOwnProperty("connectRetryInterval"))
                                object.connectRetryInterval = $root.google.protobuf.Int32Value.toObject(message.connectRetryInterval, options);
                            if (message.masterHeartbeatPeriod != null && message.hasOwnProperty("masterHeartbeatPeriod"))
                                object.masterHeartbeatPeriod = $root.google.protobuf.Int64Value.toObject(message.masterHeartbeatPeriod, options);
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                object.caCertificate = message.caCertificate;
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                object.clientCertificate = message.clientCertificate;
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                object.clientKey = message.clientKey;
                            if (message.sslCipher != null && message.hasOwnProperty("sslCipher"))
                                object.sslCipher = message.sslCipher;
                            if (message.verifyServerCertificate != null && message.hasOwnProperty("verifyServerCertificate"))
                                object.verifyServerCertificate = $root.google.protobuf.BoolValue.toObject(message.verifyServerCertificate, options);
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this MySqlReplicaConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.MySqlReplicaConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MySqlReplicaConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MySqlReplicaConfiguration;
                    })();
    
                    v1beta4.OnPremisesConfiguration = (function() {
    
                        /**
                         * Properties of an OnPremisesConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IOnPremisesConfiguration
                         * @property {string|null} [hostPort] OnPremisesConfiguration hostPort
                         * @property {string|null} [kind] OnPremisesConfiguration kind
                         * @property {string|null} [username] OnPremisesConfiguration username
                         * @property {string|null} [password] OnPremisesConfiguration password
                         * @property {string|null} [caCertificate] OnPremisesConfiguration caCertificate
                         * @property {string|null} [clientCertificate] OnPremisesConfiguration clientCertificate
                         * @property {string|null} [clientKey] OnPremisesConfiguration clientKey
                         * @property {string|null} [dumpFilePath] OnPremisesConfiguration dumpFilePath
                         */
    
                        /**
                         * Constructs a new OnPremisesConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an OnPremisesConfiguration.
                         * @implements IOnPremisesConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IOnPremisesConfiguration=} [properties] Properties to set
                         */
                        function OnPremisesConfiguration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OnPremisesConfiguration hostPort.
                         * @member {string} hostPort
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.hostPort = "";
    
                        /**
                         * OnPremisesConfiguration kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.kind = "";
    
                        /**
                         * OnPremisesConfiguration username.
                         * @member {string} username
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.username = "";
    
                        /**
                         * OnPremisesConfiguration password.
                         * @member {string} password
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.password = "";
    
                        /**
                         * OnPremisesConfiguration caCertificate.
                         * @member {string} caCertificate
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.caCertificate = "";
    
                        /**
                         * OnPremisesConfiguration clientCertificate.
                         * @member {string} clientCertificate
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.clientCertificate = "";
    
                        /**
                         * OnPremisesConfiguration clientKey.
                         * @member {string} clientKey
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.clientKey = "";
    
                        /**
                         * OnPremisesConfiguration dumpFilePath.
                         * @member {string} dumpFilePath
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         */
                        OnPremisesConfiguration.prototype.dumpFilePath = "";
    
                        /**
                         * Creates a new OnPremisesConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOnPremisesConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.OnPremisesConfiguration} OnPremisesConfiguration instance
                         */
                        OnPremisesConfiguration.create = function create(properties) {
                            return new OnPremisesConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified OnPremisesConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.OnPremisesConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOnPremisesConfiguration} message OnPremisesConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OnPremisesConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hostPort != null && Object.hasOwnProperty.call(message, "hostPort"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.hostPort);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kind);
                            if (message.username != null && Object.hasOwnProperty.call(message, "username"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.username);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.password);
                            if (message.caCertificate != null && Object.hasOwnProperty.call(message, "caCertificate"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.caCertificate);
                            if (message.clientCertificate != null && Object.hasOwnProperty.call(message, "clientCertificate"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.clientCertificate);
                            if (message.clientKey != null && Object.hasOwnProperty.call(message, "clientKey"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.clientKey);
                            if (message.dumpFilePath != null && Object.hasOwnProperty.call(message, "dumpFilePath"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.dumpFilePath);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OnPremisesConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.OnPremisesConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOnPremisesConfiguration} message OnPremisesConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OnPremisesConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OnPremisesConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.OnPremisesConfiguration} OnPremisesConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OnPremisesConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.OnPremisesConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.hostPort = reader.string();
                                    break;
                                case 2:
                                    message.kind = reader.string();
                                    break;
                                case 3:
                                    message.username = reader.string();
                                    break;
                                case 4:
                                    message.password = reader.string();
                                    break;
                                case 5:
                                    message.caCertificate = reader.string();
                                    break;
                                case 6:
                                    message.clientCertificate = reader.string();
                                    break;
                                case 7:
                                    message.clientKey = reader.string();
                                    break;
                                case 8:
                                    message.dumpFilePath = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OnPremisesConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.OnPremisesConfiguration} OnPremisesConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OnPremisesConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OnPremisesConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OnPremisesConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hostPort != null && message.hasOwnProperty("hostPort"))
                                if (!$util.isString(message.hostPort))
                                    return "hostPort: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.username != null && message.hasOwnProperty("username"))
                                if (!$util.isString(message.username))
                                    return "username: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                if (!$util.isString(message.caCertificate))
                                    return "caCertificate: string expected";
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                if (!$util.isString(message.clientCertificate))
                                    return "clientCertificate: string expected";
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                if (!$util.isString(message.clientKey))
                                    return "clientKey: string expected";
                            if (message.dumpFilePath != null && message.hasOwnProperty("dumpFilePath"))
                                if (!$util.isString(message.dumpFilePath))
                                    return "dumpFilePath: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OnPremisesConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.OnPremisesConfiguration} OnPremisesConfiguration
                         */
                        OnPremisesConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.OnPremisesConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.OnPremisesConfiguration();
                            if (object.hostPort != null)
                                message.hostPort = String(object.hostPort);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.username != null)
                                message.username = String(object.username);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.caCertificate != null)
                                message.caCertificate = String(object.caCertificate);
                            if (object.clientCertificate != null)
                                message.clientCertificate = String(object.clientCertificate);
                            if (object.clientKey != null)
                                message.clientKey = String(object.clientKey);
                            if (object.dumpFilePath != null)
                                message.dumpFilePath = String(object.dumpFilePath);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OnPremisesConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.OnPremisesConfiguration} message OnPremisesConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OnPremisesConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.hostPort = "";
                                object.kind = "";
                                object.username = "";
                                object.password = "";
                                object.caCertificate = "";
                                object.clientCertificate = "";
                                object.clientKey = "";
                                object.dumpFilePath = "";
                            }
                            if (message.hostPort != null && message.hasOwnProperty("hostPort"))
                                object.hostPort = message.hostPort;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.username != null && message.hasOwnProperty("username"))
                                object.username = message.username;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.caCertificate != null && message.hasOwnProperty("caCertificate"))
                                object.caCertificate = message.caCertificate;
                            if (message.clientCertificate != null && message.hasOwnProperty("clientCertificate"))
                                object.clientCertificate = message.clientCertificate;
                            if (message.clientKey != null && message.hasOwnProperty("clientKey"))
                                object.clientKey = message.clientKey;
                            if (message.dumpFilePath != null && message.hasOwnProperty("dumpFilePath"))
                                object.dumpFilePath = message.dumpFilePath;
                            return object;
                        };
    
                        /**
                         * Converts this OnPremisesConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.OnPremisesConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OnPremisesConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OnPremisesConfiguration;
                    })();
    
                    v1beta4.DiskEncryptionConfiguration = (function() {
    
                        /**
                         * Properties of a DiskEncryptionConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDiskEncryptionConfiguration
                         * @property {string|null} [kmsKeyName] DiskEncryptionConfiguration kmsKeyName
                         * @property {string|null} [kind] DiskEncryptionConfiguration kind
                         */
    
                        /**
                         * Constructs a new DiskEncryptionConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DiskEncryptionConfiguration.
                         * @implements IDiskEncryptionConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration=} [properties] Properties to set
                         */
                        function DiskEncryptionConfiguration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiskEncryptionConfiguration kmsKeyName.
                         * @member {string} kmsKeyName
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @instance
                         */
                        DiskEncryptionConfiguration.prototype.kmsKeyName = "";
    
                        /**
                         * DiskEncryptionConfiguration kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @instance
                         */
                        DiskEncryptionConfiguration.prototype.kind = "";
    
                        /**
                         * Creates a new DiskEncryptionConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionConfiguration} DiskEncryptionConfiguration instance
                         */
                        DiskEncryptionConfiguration.create = function create(properties) {
                            return new DiskEncryptionConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified DiskEncryptionConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.DiskEncryptionConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration} message DiskEncryptionConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiskEncryptionConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKeyName != null && Object.hasOwnProperty.call(message, "kmsKeyName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKeyName);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiskEncryptionConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DiskEncryptionConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionConfiguration} message DiskEncryptionConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiskEncryptionConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiskEncryptionConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionConfiguration} DiskEncryptionConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiskEncryptionConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kmsKeyName = reader.string();
                                    break;
                                case 2:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiskEncryptionConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionConfiguration} DiskEncryptionConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiskEncryptionConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiskEncryptionConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiskEncryptionConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                if (!$util.isString(message.kmsKeyName))
                                    return "kmsKeyName: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiskEncryptionConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionConfiguration} DiskEncryptionConfiguration
                         */
                        DiskEncryptionConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DiskEncryptionConfiguration();
                            if (object.kmsKeyName != null)
                                message.kmsKeyName = String(object.kmsKeyName);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiskEncryptionConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.DiskEncryptionConfiguration} message DiskEncryptionConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiskEncryptionConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kmsKeyName = "";
                                object.kind = "";
                            }
                            if (message.kmsKeyName != null && message.hasOwnProperty("kmsKeyName"))
                                object.kmsKeyName = message.kmsKeyName;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this DiskEncryptionConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiskEncryptionConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DiskEncryptionConfiguration;
                    })();
    
                    v1beta4.DiskEncryptionStatus = (function() {
    
                        /**
                         * Properties of a DiskEncryptionStatus.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IDiskEncryptionStatus
                         * @property {string|null} [kmsKeyVersionName] DiskEncryptionStatus kmsKeyVersionName
                         * @property {string|null} [kind] DiskEncryptionStatus kind
                         */
    
                        /**
                         * Constructs a new DiskEncryptionStatus.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a DiskEncryptionStatus.
                         * @implements IDiskEncryptionStatus
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionStatus=} [properties] Properties to set
                         */
                        function DiskEncryptionStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiskEncryptionStatus kmsKeyVersionName.
                         * @member {string} kmsKeyVersionName
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @instance
                         */
                        DiskEncryptionStatus.prototype.kmsKeyVersionName = "";
    
                        /**
                         * DiskEncryptionStatus kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @instance
                         */
                        DiskEncryptionStatus.prototype.kind = "";
    
                        /**
                         * Creates a new DiskEncryptionStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionStatus=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionStatus} DiskEncryptionStatus instance
                         */
                        DiskEncryptionStatus.create = function create(properties) {
                            return new DiskEncryptionStatus(properties);
                        };
    
                        /**
                         * Encodes the specified DiskEncryptionStatus message. Does not implicitly {@link google.cloud.sql.v1beta4.DiskEncryptionStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionStatus} message DiskEncryptionStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiskEncryptionStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kmsKeyVersionName != null && Object.hasOwnProperty.call(message, "kmsKeyVersionName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kmsKeyVersionName);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.kind);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiskEncryptionStatus message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.DiskEncryptionStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {google.cloud.sql.v1beta4.IDiskEncryptionStatus} message DiskEncryptionStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiskEncryptionStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiskEncryptionStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionStatus} DiskEncryptionStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiskEncryptionStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.DiskEncryptionStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kmsKeyVersionName = reader.string();
                                    break;
                                case 2:
                                    message.kind = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiskEncryptionStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionStatus} DiskEncryptionStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiskEncryptionStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiskEncryptionStatus message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiskEncryptionStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                if (!$util.isString(message.kmsKeyVersionName))
                                    return "kmsKeyVersionName: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiskEncryptionStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.DiskEncryptionStatus} DiskEncryptionStatus
                         */
                        DiskEncryptionStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.DiskEncryptionStatus)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.DiskEncryptionStatus();
                            if (object.kmsKeyVersionName != null)
                                message.kmsKeyVersionName = String(object.kmsKeyVersionName);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiskEncryptionStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @static
                         * @param {google.cloud.sql.v1beta4.DiskEncryptionStatus} message DiskEncryptionStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiskEncryptionStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kmsKeyVersionName = "";
                                object.kind = "";
                            }
                            if (message.kmsKeyVersionName != null && message.hasOwnProperty("kmsKeyVersionName"))
                                object.kmsKeyVersionName = message.kmsKeyVersionName;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            return object;
                        };
    
                        /**
                         * Converts this DiskEncryptionStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.DiskEncryptionStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiskEncryptionStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DiskEncryptionStatus;
                    })();
    
                    v1beta4.Operation = (function() {
    
                        /**
                         * Properties of an Operation.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IOperation
                         * @property {string|null} [kind] Operation kind
                         * @property {string|null} [targetLink] Operation targetLink
                         * @property {google.cloud.sql.v1beta4.Operation.SqlOperationStatus|null} [status] Operation status
                         * @property {string|null} [user] Operation user
                         * @property {google.protobuf.ITimestamp|null} [insertTime] Operation insertTime
                         * @property {google.protobuf.ITimestamp|null} [startTime] Operation startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] Operation endTime
                         * @property {google.cloud.sql.v1beta4.IOperationErrors|null} [error] Operation error
                         * @property {google.cloud.sql.v1beta4.Operation.SqlOperationType|null} [operationType] Operation operationType
                         * @property {google.cloud.sql.v1beta4.IImportContext|null} [importContext] Operation importContext
                         * @property {google.cloud.sql.v1beta4.IExportContext|null} [exportContext] Operation exportContext
                         * @property {google.cloud.sql.v1beta4.IBackupContext|null} [backupContext] Operation backupContext
                         * @property {string|null} [name] Operation name
                         * @property {string|null} [targetId] Operation targetId
                         * @property {string|null} [selfLink] Operation selfLink
                         * @property {string|null} [targetProject] Operation targetProject
                         */
    
                        /**
                         * Constructs a new Operation.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an Operation.
                         * @implements IOperation
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IOperation=} [properties] Properties to set
                         */
                        function Operation(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Operation kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.kind = "";
    
                        /**
                         * Operation targetLink.
                         * @member {string} targetLink
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.targetLink = "";
    
                        /**
                         * Operation status.
                         * @member {google.cloud.sql.v1beta4.Operation.SqlOperationStatus} status
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.status = 0;
    
                        /**
                         * Operation user.
                         * @member {string} user
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.user = "";
    
                        /**
                         * Operation insertTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} insertTime
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.insertTime = null;
    
                        /**
                         * Operation startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.startTime = null;
    
                        /**
                         * Operation endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.endTime = null;
    
                        /**
                         * Operation error.
                         * @member {google.cloud.sql.v1beta4.IOperationErrors|null|undefined} error
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.error = null;
    
                        /**
                         * Operation operationType.
                         * @member {google.cloud.sql.v1beta4.Operation.SqlOperationType} operationType
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.operationType = 0;
    
                        /**
                         * Operation importContext.
                         * @member {google.cloud.sql.v1beta4.IImportContext|null|undefined} importContext
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.importContext = null;
    
                        /**
                         * Operation exportContext.
                         * @member {google.cloud.sql.v1beta4.IExportContext|null|undefined} exportContext
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.exportContext = null;
    
                        /**
                         * Operation backupContext.
                         * @member {google.cloud.sql.v1beta4.IBackupContext|null|undefined} backupContext
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.backupContext = null;
    
                        /**
                         * Operation name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.name = "";
    
                        /**
                         * Operation targetId.
                         * @member {string} targetId
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.targetId = "";
    
                        /**
                         * Operation selfLink.
                         * @member {string} selfLink
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.selfLink = "";
    
                        /**
                         * Operation targetProject.
                         * @member {string} targetProject
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         */
                        Operation.prototype.targetProject = "";
    
                        /**
                         * Creates a new Operation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperation=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.Operation} Operation instance
                         */
                        Operation.create = function create(properties) {
                            return new Operation(properties);
                        };
    
                        /**
                         * Encodes the specified Operation message. Does not implicitly {@link google.cloud.sql.v1beta4.Operation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperation} message Operation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Operation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.targetLink != null && Object.hasOwnProperty.call(message, "targetLink"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.targetLink);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.status);
                            if (message.user != null && Object.hasOwnProperty.call(message, "user"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.user);
                            if (message.insertTime != null && Object.hasOwnProperty.call(message, "insertTime"))
                                $root.google.protobuf.Timestamp.encode(message.insertTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                $root.google.cloud.sql.v1beta4.OperationErrors.encode(message.error, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.operationType);
                            if (message.importContext != null && Object.hasOwnProperty.call(message, "importContext"))
                                $root.google.cloud.sql.v1beta4.ImportContext.encode(message.importContext, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.exportContext != null && Object.hasOwnProperty.call(message, "exportContext"))
                                $root.google.cloud.sql.v1beta4.ExportContext.encode(message.exportContext, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.name);
                            if (message.targetId != null && Object.hasOwnProperty.call(message, "targetId"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.targetId);
                            if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                                writer.uint32(/* id 14, wireType 2 =*/114).string(message.selfLink);
                            if (message.targetProject != null && Object.hasOwnProperty.call(message, "targetProject"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.targetProject);
                            if (message.backupContext != null && Object.hasOwnProperty.call(message, "backupContext"))
                                $root.google.cloud.sql.v1beta4.BackupContext.encode(message.backupContext, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.Operation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperation} message Operation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Operation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Operation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.Operation} Operation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Operation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.Operation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.targetLink = reader.string();
                                    break;
                                case 3:
                                    message.status = reader.int32();
                                    break;
                                case 4:
                                    message.user = reader.string();
                                    break;
                                case 5:
                                    message.insertTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.error = $root.google.cloud.sql.v1beta4.OperationErrors.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.operationType = reader.int32();
                                    break;
                                case 10:
                                    message.importContext = $root.google.cloud.sql.v1beta4.ImportContext.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    message.exportContext = $root.google.cloud.sql.v1beta4.ExportContext.decode(reader, reader.uint32());
                                    break;
                                case 17:
                                    message.backupContext = $root.google.cloud.sql.v1beta4.BackupContext.decode(reader, reader.uint32());
                                    break;
                                case 12:
                                    message.name = reader.string();
                                    break;
                                case 13:
                                    message.targetId = reader.string();
                                    break;
                                case 14:
                                    message.selfLink = reader.string();
                                    break;
                                case 15:
                                    message.targetProject = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Operation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.Operation} Operation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Operation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Operation message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Operation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.targetLink != null && message.hasOwnProperty("targetLink"))
                                if (!$util.isString(message.targetLink))
                                    return "targetLink: string expected";
                            if (message.status != null && message.hasOwnProperty("status"))
                                switch (message.status) {
                                default:
                                    return "status: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.user != null && message.hasOwnProperty("user"))
                                if (!$util.isString(message.user))
                                    return "user: string expected";
                            if (message.insertTime != null && message.hasOwnProperty("insertTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.insertTime);
                                if (error)
                                    return "insertTime." + error;
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.error != null && message.hasOwnProperty("error")) {
                                var error = $root.google.cloud.sql.v1beta4.OperationErrors.verify(message.error);
                                if (error)
                                    return "error." + error;
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                switch (message.operationType) {
                                default:
                                    return "operationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                case 9:
                                case 10:
                                case 11:
                                case 12:
                                case 14:
                                case 15:
                                case 16:
                                case 17:
                                case 18:
                                case 19:
                                case 20:
                                case 21:
                                case 22:
                                case 23:
                                case 24:
                                case 25:
                                case 26:
                                case 27:
                                case 28:
                                case 29:
                                case 30:
                                case 31:
                                case 32:
                                case 33:
                                case 34:
                                case 35:
                                    break;
                                }
                            if (message.importContext != null && message.hasOwnProperty("importContext")) {
                                var error = $root.google.cloud.sql.v1beta4.ImportContext.verify(message.importContext);
                                if (error)
                                    return "importContext." + error;
                            }
                            if (message.exportContext != null && message.hasOwnProperty("exportContext")) {
                                var error = $root.google.cloud.sql.v1beta4.ExportContext.verify(message.exportContext);
                                if (error)
                                    return "exportContext." + error;
                            }
                            if (message.backupContext != null && message.hasOwnProperty("backupContext")) {
                                var error = $root.google.cloud.sql.v1beta4.BackupContext.verify(message.backupContext);
                                if (error)
                                    return "backupContext." + error;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                if (!$util.isString(message.targetId))
                                    return "targetId: string expected";
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                if (!$util.isString(message.selfLink))
                                    return "selfLink: string expected";
                            if (message.targetProject != null && message.hasOwnProperty("targetProject"))
                                if (!$util.isString(message.targetProject))
                                    return "targetProject: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.Operation} Operation
                         */
                        Operation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.Operation)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.Operation();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.targetLink != null)
                                message.targetLink = String(object.targetLink);
                            switch (object.status) {
                            case "SQL_OPERATION_STATUS_UNSPECIFIED":
                            case 0:
                                message.status = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.status = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.status = 2;
                                break;
                            case "DONE":
                            case 3:
                                message.status = 3;
                                break;
                            }
                            if (object.user != null)
                                message.user = String(object.user);
                            if (object.insertTime != null) {
                                if (typeof object.insertTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Operation.insertTime: object expected");
                                message.insertTime = $root.google.protobuf.Timestamp.fromObject(object.insertTime);
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Operation.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Operation.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.error != null) {
                                if (typeof object.error !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Operation.error: object expected");
                                message.error = $root.google.cloud.sql.v1beta4.OperationErrors.fromObject(object.error);
                            }
                            switch (object.operationType) {
                            case "SQL_OPERATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.operationType = 0;
                                break;
                            case "IMPORT":
                            case 1:
                                message.operationType = 1;
                                break;
                            case "EXPORT":
                            case 2:
                                message.operationType = 2;
                                break;
                            case "CREATE":
                            case 3:
                                message.operationType = 3;
                                break;
                            case "UPDATE":
                            case 4:
                                message.operationType = 4;
                                break;
                            case "DELETE":
                            case 5:
                                message.operationType = 5;
                                break;
                            case "RESTART":
                            case 6:
                                message.operationType = 6;
                                break;
                            case "BACKUP":
                            case 7:
                                message.operationType = 7;
                                break;
                            case "SNAPSHOT":
                            case 8:
                                message.operationType = 8;
                                break;
                            case "BACKUP_VOLUME":
                            case 9:
                                message.operationType = 9;
                                break;
                            case "DELETE_VOLUME":
                            case 10:
                                message.operationType = 10;
                                break;
                            case "RESTORE_VOLUME":
                            case 11:
                                message.operationType = 11;
                                break;
                            case "INJECT_USER":
                            case 12:
                                message.operationType = 12;
                                break;
                            case "CLONE":
                            case 14:
                                message.operationType = 14;
                                break;
                            case "STOP_REPLICA":
                            case 15:
                                message.operationType = 15;
                                break;
                            case "START_REPLICA":
                            case 16:
                                message.operationType = 16;
                                break;
                            case "PROMOTE_REPLICA":
                            case 17:
                                message.operationType = 17;
                                break;
                            case "CREATE_REPLICA":
                            case 18:
                                message.operationType = 18;
                                break;
                            case "CREATE_USER":
                            case 19:
                                message.operationType = 19;
                                break;
                            case "DELETE_USER":
                            case 20:
                                message.operationType = 20;
                                break;
                            case "UPDATE_USER":
                            case 21:
                                message.operationType = 21;
                                break;
                            case "CREATE_DATABASE":
                            case 22:
                                message.operationType = 22;
                                break;
                            case "DELETE_DATABASE":
                            case 23:
                                message.operationType = 23;
                                break;
                            case "UPDATE_DATABASE":
                            case 24:
                                message.operationType = 24;
                                break;
                            case "FAILOVER":
                            case 25:
                                message.operationType = 25;
                                break;
                            case "DELETE_BACKUP":
                            case 26:
                                message.operationType = 26;
                                break;
                            case "RECREATE_REPLICA":
                            case 27:
                                message.operationType = 27;
                                break;
                            case "TRUNCATE_LOG":
                            case 28:
                                message.operationType = 28;
                                break;
                            case "DEMOTE_MASTER":
                            case 29:
                                message.operationType = 29;
                                break;
                            case "MAINTENANCE":
                            case 30:
                                message.operationType = 30;
                                break;
                            case "ENABLE_PRIVATE_IP":
                            case 31:
                                message.operationType = 31;
                                break;
                            case "DEFER_MAINTENANCE":
                            case 32:
                                message.operationType = 32;
                                break;
                            case "CREATE_CLONE":
                            case 33:
                                message.operationType = 33;
                                break;
                            case "RESCHEDULE_MAINTENANCE":
                            case 34:
                                message.operationType = 34;
                                break;
                            case "START_EXTERNAL_SYNC":
                            case 35:
                                message.operationType = 35;
                                break;
                            }
                            if (object.importContext != null) {
                                if (typeof object.importContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Operation.importContext: object expected");
                                message.importContext = $root.google.cloud.sql.v1beta4.ImportContext.fromObject(object.importContext);
                            }
                            if (object.exportContext != null) {
                                if (typeof object.exportContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Operation.exportContext: object expected");
                                message.exportContext = $root.google.cloud.sql.v1beta4.ExportContext.fromObject(object.exportContext);
                            }
                            if (object.backupContext != null) {
                                if (typeof object.backupContext !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Operation.backupContext: object expected");
                                message.backupContext = $root.google.cloud.sql.v1beta4.BackupContext.fromObject(object.backupContext);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.targetId != null)
                                message.targetId = String(object.targetId);
                            if (object.selfLink != null)
                                message.selfLink = String(object.selfLink);
                            if (object.targetProject != null)
                                message.targetProject = String(object.targetProject);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Operation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @static
                         * @param {google.cloud.sql.v1beta4.Operation} message Operation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Operation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.targetLink = "";
                                object.status = options.enums === String ? "SQL_OPERATION_STATUS_UNSPECIFIED" : 0;
                                object.user = "";
                                object.insertTime = null;
                                object.startTime = null;
                                object.endTime = null;
                                object.error = null;
                                object.operationType = options.enums === String ? "SQL_OPERATION_TYPE_UNSPECIFIED" : 0;
                                object.importContext = null;
                                object.exportContext = null;
                                object.name = "";
                                object.targetId = "";
                                object.selfLink = "";
                                object.targetProject = "";
                                object.backupContext = null;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.targetLink != null && message.hasOwnProperty("targetLink"))
                                object.targetLink = message.targetLink;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = options.enums === String ? $root.google.cloud.sql.v1beta4.Operation.SqlOperationStatus[message.status] : message.status;
                            if (message.user != null && message.hasOwnProperty("user"))
                                object.user = message.user;
                            if (message.insertTime != null && message.hasOwnProperty("insertTime"))
                                object.insertTime = $root.google.protobuf.Timestamp.toObject(message.insertTime, options);
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = $root.google.cloud.sql.v1beta4.OperationErrors.toObject(message.error, options);
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                object.operationType = options.enums === String ? $root.google.cloud.sql.v1beta4.Operation.SqlOperationType[message.operationType] : message.operationType;
                            if (message.importContext != null && message.hasOwnProperty("importContext"))
                                object.importContext = $root.google.cloud.sql.v1beta4.ImportContext.toObject(message.importContext, options);
                            if (message.exportContext != null && message.hasOwnProperty("exportContext"))
                                object.exportContext = $root.google.cloud.sql.v1beta4.ExportContext.toObject(message.exportContext, options);
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.targetId != null && message.hasOwnProperty("targetId"))
                                object.targetId = message.targetId;
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                object.selfLink = message.selfLink;
                            if (message.targetProject != null && message.hasOwnProperty("targetProject"))
                                object.targetProject = message.targetProject;
                            if (message.backupContext != null && message.hasOwnProperty("backupContext"))
                                object.backupContext = $root.google.cloud.sql.v1beta4.BackupContext.toObject(message.backupContext, options);
                            return object;
                        };
    
                        /**
                         * Converts this Operation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.Operation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Operation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * SqlOperationType enum.
                         * @name google.cloud.sql.v1beta4.Operation.SqlOperationType
                         * @enum {number}
                         * @property {number} SQL_OPERATION_TYPE_UNSPECIFIED=0 SQL_OPERATION_TYPE_UNSPECIFIED value
                         * @property {number} IMPORT=1 IMPORT value
                         * @property {number} EXPORT=2 EXPORT value
                         * @property {number} CREATE=3 CREATE value
                         * @property {number} UPDATE=4 UPDATE value
                         * @property {number} DELETE=5 DELETE value
                         * @property {number} RESTART=6 RESTART value
                         * @property {number} BACKUP=7 BACKUP value
                         * @property {number} SNAPSHOT=8 SNAPSHOT value
                         * @property {number} BACKUP_VOLUME=9 BACKUP_VOLUME value
                         * @property {number} DELETE_VOLUME=10 DELETE_VOLUME value
                         * @property {number} RESTORE_VOLUME=11 RESTORE_VOLUME value
                         * @property {number} INJECT_USER=12 INJECT_USER value
                         * @property {number} CLONE=14 CLONE value
                         * @property {number} STOP_REPLICA=15 STOP_REPLICA value
                         * @property {number} START_REPLICA=16 START_REPLICA value
                         * @property {number} PROMOTE_REPLICA=17 PROMOTE_REPLICA value
                         * @property {number} CREATE_REPLICA=18 CREATE_REPLICA value
                         * @property {number} CREATE_USER=19 CREATE_USER value
                         * @property {number} DELETE_USER=20 DELETE_USER value
                         * @property {number} UPDATE_USER=21 UPDATE_USER value
                         * @property {number} CREATE_DATABASE=22 CREATE_DATABASE value
                         * @property {number} DELETE_DATABASE=23 DELETE_DATABASE value
                         * @property {number} UPDATE_DATABASE=24 UPDATE_DATABASE value
                         * @property {number} FAILOVER=25 FAILOVER value
                         * @property {number} DELETE_BACKUP=26 DELETE_BACKUP value
                         * @property {number} RECREATE_REPLICA=27 RECREATE_REPLICA value
                         * @property {number} TRUNCATE_LOG=28 TRUNCATE_LOG value
                         * @property {number} DEMOTE_MASTER=29 DEMOTE_MASTER value
                         * @property {number} MAINTENANCE=30 MAINTENANCE value
                         * @property {number} ENABLE_PRIVATE_IP=31 ENABLE_PRIVATE_IP value
                         * @property {number} DEFER_MAINTENANCE=32 DEFER_MAINTENANCE value
                         * @property {number} CREATE_CLONE=33 CREATE_CLONE value
                         * @property {number} RESCHEDULE_MAINTENANCE=34 RESCHEDULE_MAINTENANCE value
                         * @property {number} START_EXTERNAL_SYNC=35 START_EXTERNAL_SYNC value
                         */
                        Operation.SqlOperationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SQL_OPERATION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IMPORT"] = 1;
                            values[valuesById[2] = "EXPORT"] = 2;
                            values[valuesById[3] = "CREATE"] = 3;
                            values[valuesById[4] = "UPDATE"] = 4;
                            values[valuesById[5] = "DELETE"] = 5;
                            values[valuesById[6] = "RESTART"] = 6;
                            values[valuesById[7] = "BACKUP"] = 7;
                            values[valuesById[8] = "SNAPSHOT"] = 8;
                            values[valuesById[9] = "BACKUP_VOLUME"] = 9;
                            values[valuesById[10] = "DELETE_VOLUME"] = 10;
                            values[valuesById[11] = "RESTORE_VOLUME"] = 11;
                            values[valuesById[12] = "INJECT_USER"] = 12;
                            values[valuesById[14] = "CLONE"] = 14;
                            values[valuesById[15] = "STOP_REPLICA"] = 15;
                            values[valuesById[16] = "START_REPLICA"] = 16;
                            values[valuesById[17] = "PROMOTE_REPLICA"] = 17;
                            values[valuesById[18] = "CREATE_REPLICA"] = 18;
                            values[valuesById[19] = "CREATE_USER"] = 19;
                            values[valuesById[20] = "DELETE_USER"] = 20;
                            values[valuesById[21] = "UPDATE_USER"] = 21;
                            values[valuesById[22] = "CREATE_DATABASE"] = 22;
                            values[valuesById[23] = "DELETE_DATABASE"] = 23;
                            values[valuesById[24] = "UPDATE_DATABASE"] = 24;
                            values[valuesById[25] = "FAILOVER"] = 25;
                            values[valuesById[26] = "DELETE_BACKUP"] = 26;
                            values[valuesById[27] = "RECREATE_REPLICA"] = 27;
                            values[valuesById[28] = "TRUNCATE_LOG"] = 28;
                            values[valuesById[29] = "DEMOTE_MASTER"] = 29;
                            values[valuesById[30] = "MAINTENANCE"] = 30;
                            values[valuesById[31] = "ENABLE_PRIVATE_IP"] = 31;
                            values[valuesById[32] = "DEFER_MAINTENANCE"] = 32;
                            values[valuesById[33] = "CREATE_CLONE"] = 33;
                            values[valuesById[34] = "RESCHEDULE_MAINTENANCE"] = 34;
                            values[valuesById[35] = "START_EXTERNAL_SYNC"] = 35;
                            return values;
                        })();
    
                        /**
                         * SqlOperationStatus enum.
                         * @name google.cloud.sql.v1beta4.Operation.SqlOperationStatus
                         * @enum {number}
                         * @property {number} SQL_OPERATION_STATUS_UNSPECIFIED=0 SQL_OPERATION_STATUS_UNSPECIFIED value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} DONE=3 DONE value
                         */
                        Operation.SqlOperationStatus = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SQL_OPERATION_STATUS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "DONE"] = 3;
                            return values;
                        })();
    
                        return Operation;
                    })();
    
                    v1beta4.OperationError = (function() {
    
                        /**
                         * Properties of an OperationError.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IOperationError
                         * @property {string|null} [kind] OperationError kind
                         * @property {string|null} [code] OperationError code
                         * @property {string|null} [message] OperationError message
                         */
    
                        /**
                         * Constructs a new OperationError.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an OperationError.
                         * @implements IOperationError
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IOperationError=} [properties] Properties to set
                         */
                        function OperationError(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationError kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @instance
                         */
                        OperationError.prototype.kind = "";
    
                        /**
                         * OperationError code.
                         * @member {string} code
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @instance
                         */
                        OperationError.prototype.code = "";
    
                        /**
                         * OperationError message.
                         * @member {string} message
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @instance
                         */
                        OperationError.prototype.message = "";
    
                        /**
                         * Creates a new OperationError instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationError=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.OperationError} OperationError instance
                         */
                        OperationError.create = function create(properties) {
                            return new OperationError(properties);
                        };
    
                        /**
                         * Encodes the specified OperationError message. Does not implicitly {@link google.cloud.sql.v1beta4.OperationError.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationError} message OperationError message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationError.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.code);
                            if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.message);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationError message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.OperationError.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationError} message OperationError message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationError.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationError message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.OperationError} OperationError
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationError.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.OperationError();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.code = reader.string();
                                    break;
                                case 3:
                                    message.message = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationError message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.OperationError} OperationError
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationError.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationError message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationError.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                if (!$util.isString(message.code))
                                    return "code: string expected";
                            if (message.message != null && message.hasOwnProperty("message"))
                                if (!$util.isString(message.message))
                                    return "message: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationError message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.OperationError} OperationError
                         */
                        OperationError.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.OperationError)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.OperationError();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.code != null)
                                message.code = String(object.code);
                            if (object.message != null)
                                message.message = String(object.message);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationError message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @static
                         * @param {google.cloud.sql.v1beta4.OperationError} message OperationError
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationError.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.code = "";
                                object.message = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = message.code;
                            if (message.message != null && message.hasOwnProperty("message"))
                                object.message = message.message;
                            return object;
                        };
    
                        /**
                         * Converts this OperationError to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.OperationError
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationError.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationError;
                    })();
    
                    v1beta4.OperationErrors = (function() {
    
                        /**
                         * Properties of an OperationErrors.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IOperationErrors
                         * @property {string|null} [kind] OperationErrors kind
                         * @property {Array.<google.cloud.sql.v1beta4.IOperationError>|null} [errors] OperationErrors errors
                         */
    
                        /**
                         * Constructs a new OperationErrors.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an OperationErrors.
                         * @implements IOperationErrors
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IOperationErrors=} [properties] Properties to set
                         */
                        function OperationErrors(properties) {
                            this.errors = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationErrors kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @instance
                         */
                        OperationErrors.prototype.kind = "";
    
                        /**
                         * OperationErrors errors.
                         * @member {Array.<google.cloud.sql.v1beta4.IOperationError>} errors
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @instance
                         */
                        OperationErrors.prototype.errors = $util.emptyArray;
    
                        /**
                         * Creates a new OperationErrors instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationErrors=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.OperationErrors} OperationErrors instance
                         */
                        OperationErrors.create = function create(properties) {
                            return new OperationErrors(properties);
                        };
    
                        /**
                         * Encodes the specified OperationErrors message. Does not implicitly {@link google.cloud.sql.v1beta4.OperationErrors.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationErrors} message OperationErrors message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationErrors.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.errors != null && message.errors.length)
                                for (var i = 0; i < message.errors.length; ++i)
                                    $root.google.cloud.sql.v1beta4.OperationError.encode(message.errors[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationErrors message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.OperationErrors.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationErrors} message OperationErrors message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationErrors.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationErrors message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.OperationErrors} OperationErrors
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationErrors.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.OperationErrors();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.errors && message.errors.length))
                                        message.errors = [];
                                    message.errors.push($root.google.cloud.sql.v1beta4.OperationError.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationErrors message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.OperationErrors} OperationErrors
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationErrors.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationErrors message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationErrors.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.errors != null && message.hasOwnProperty("errors")) {
                                if (!Array.isArray(message.errors))
                                    return "errors: array expected";
                                for (var i = 0; i < message.errors.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.OperationError.verify(message.errors[i]);
                                    if (error)
                                        return "errors." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OperationErrors message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.OperationErrors} OperationErrors
                         */
                        OperationErrors.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.OperationErrors)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.OperationErrors();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.errors) {
                                if (!Array.isArray(object.errors))
                                    throw TypeError(".google.cloud.sql.v1beta4.OperationErrors.errors: array expected");
                                message.errors = [];
                                for (var i = 0; i < object.errors.length; ++i) {
                                    if (typeof object.errors[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.OperationErrors.errors: object expected");
                                    message.errors[i] = $root.google.cloud.sql.v1beta4.OperationError.fromObject(object.errors[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationErrors message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @static
                         * @param {google.cloud.sql.v1beta4.OperationErrors} message OperationErrors
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationErrors.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.errors = [];
                            if (options.defaults)
                                object.kind = "";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.errors && message.errors.length) {
                                object.errors = [];
                                for (var j = 0; j < message.errors.length; ++j)
                                    object.errors[j] = $root.google.cloud.sql.v1beta4.OperationError.toObject(message.errors[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OperationErrors to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.OperationErrors
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationErrors.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationErrors;
                    })();
    
                    v1beta4.OperationsListResponse = (function() {
    
                        /**
                         * Properties of an OperationsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IOperationsListResponse
                         * @property {string|null} [kind] OperationsListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.IOperation>|null} [items] OperationsListResponse items
                         * @property {string|null} [nextPageToken] OperationsListResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new OperationsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents an OperationsListResponse.
                         * @implements IOperationsListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IOperationsListResponse=} [properties] Properties to set
                         */
                        function OperationsListResponse(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationsListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @instance
                         */
                        OperationsListResponse.prototype.kind = "";
    
                        /**
                         * OperationsListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.IOperation>} items
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @instance
                         */
                        OperationsListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * OperationsListResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @instance
                         */
                        OperationsListResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new OperationsListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationsListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.OperationsListResponse} OperationsListResponse instance
                         */
                        OperationsListResponse.create = function create(properties) {
                            return new OperationsListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified OperationsListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.OperationsListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationsListResponse} message OperationsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationsListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.Operation.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationsListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.OperationsListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IOperationsListResponse} message OperationsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationsListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationsListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.OperationsListResponse} OperationsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationsListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.OperationsListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.Operation.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationsListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.OperationsListResponse} OperationsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationsListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationsListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationsListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.Operation.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationsListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.OperationsListResponse} OperationsListResponse
                         */
                        OperationsListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.OperationsListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.OperationsListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.OperationsListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.OperationsListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.Operation.fromObject(object.items[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationsListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.OperationsListResponse} message OperationsListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationsListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults) {
                                object.kind = "";
                                object.nextPageToken = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.Operation.toObject(message.items[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this OperationsListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.OperationsListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationsListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationsListResponse;
                    })();
    
                    v1beta4.ReplicaConfiguration = (function() {
    
                        /**
                         * Properties of a ReplicaConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IReplicaConfiguration
                         * @property {string|null} [kind] ReplicaConfiguration kind
                         * @property {google.cloud.sql.v1beta4.IMySqlReplicaConfiguration|null} [mysqlReplicaConfiguration] ReplicaConfiguration mysqlReplicaConfiguration
                         * @property {google.protobuf.IBoolValue|null} [failoverTarget] ReplicaConfiguration failoverTarget
                         */
    
                        /**
                         * Constructs a new ReplicaConfiguration.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a ReplicaConfiguration.
                         * @implements IReplicaConfiguration
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IReplicaConfiguration=} [properties] Properties to set
                         */
                        function ReplicaConfiguration(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReplicaConfiguration kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @instance
                         */
                        ReplicaConfiguration.prototype.kind = "";
    
                        /**
                         * ReplicaConfiguration mysqlReplicaConfiguration.
                         * @member {google.cloud.sql.v1beta4.IMySqlReplicaConfiguration|null|undefined} mysqlReplicaConfiguration
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @instance
                         */
                        ReplicaConfiguration.prototype.mysqlReplicaConfiguration = null;
    
                        /**
                         * ReplicaConfiguration failoverTarget.
                         * @member {google.protobuf.IBoolValue|null|undefined} failoverTarget
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @instance
                         */
                        ReplicaConfiguration.prototype.failoverTarget = null;
    
                        /**
                         * Creates a new ReplicaConfiguration instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IReplicaConfiguration=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.ReplicaConfiguration} ReplicaConfiguration instance
                         */
                        ReplicaConfiguration.create = function create(properties) {
                            return new ReplicaConfiguration(properties);
                        };
    
                        /**
                         * Encodes the specified ReplicaConfiguration message. Does not implicitly {@link google.cloud.sql.v1beta4.ReplicaConfiguration.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IReplicaConfiguration} message ReplicaConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReplicaConfiguration.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.mysqlReplicaConfiguration != null && Object.hasOwnProperty.call(message, "mysqlReplicaConfiguration"))
                                $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.encode(message.mysqlReplicaConfiguration, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.failoverTarget != null && Object.hasOwnProperty.call(message, "failoverTarget"))
                                $root.google.protobuf.BoolValue.encode(message.failoverTarget, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReplicaConfiguration message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.ReplicaConfiguration.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.IReplicaConfiguration} message ReplicaConfiguration message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReplicaConfiguration.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReplicaConfiguration message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.ReplicaConfiguration} ReplicaConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReplicaConfiguration.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.ReplicaConfiguration();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.mysqlReplicaConfiguration = $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.failoverTarget = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReplicaConfiguration message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.ReplicaConfiguration} ReplicaConfiguration
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReplicaConfiguration.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReplicaConfiguration message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReplicaConfiguration.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.mysqlReplicaConfiguration != null && message.hasOwnProperty("mysqlReplicaConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.verify(message.mysqlReplicaConfiguration);
                                if (error)
                                    return "mysqlReplicaConfiguration." + error;
                            }
                            if (message.failoverTarget != null && message.hasOwnProperty("failoverTarget")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.failoverTarget);
                                if (error)
                                    return "failoverTarget." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReplicaConfiguration message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.ReplicaConfiguration} ReplicaConfiguration
                         */
                        ReplicaConfiguration.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.ReplicaConfiguration)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.ReplicaConfiguration();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.mysqlReplicaConfiguration != null) {
                                if (typeof object.mysqlReplicaConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.ReplicaConfiguration.mysqlReplicaConfiguration: object expected");
                                message.mysqlReplicaConfiguration = $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.fromObject(object.mysqlReplicaConfiguration);
                            }
                            if (object.failoverTarget != null) {
                                if (typeof object.failoverTarget !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.ReplicaConfiguration.failoverTarget: object expected");
                                message.failoverTarget = $root.google.protobuf.BoolValue.fromObject(object.failoverTarget);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReplicaConfiguration message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @static
                         * @param {google.cloud.sql.v1beta4.ReplicaConfiguration} message ReplicaConfiguration
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReplicaConfiguration.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.mysqlReplicaConfiguration = null;
                                object.failoverTarget = null;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.mysqlReplicaConfiguration != null && message.hasOwnProperty("mysqlReplicaConfiguration"))
                                object.mysqlReplicaConfiguration = $root.google.cloud.sql.v1beta4.MySqlReplicaConfiguration.toObject(message.mysqlReplicaConfiguration, options);
                            if (message.failoverTarget != null && message.hasOwnProperty("failoverTarget"))
                                object.failoverTarget = $root.google.protobuf.BoolValue.toObject(message.failoverTarget, options);
                            return object;
                        };
    
                        /**
                         * Converts this ReplicaConfiguration to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.ReplicaConfiguration
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReplicaConfiguration.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ReplicaConfiguration;
                    })();
    
                    v1beta4.RestoreBackupContext = (function() {
    
                        /**
                         * Properties of a RestoreBackupContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IRestoreBackupContext
                         * @property {string|null} [kind] RestoreBackupContext kind
                         * @property {number|Long|null} [backupRunId] RestoreBackupContext backupRunId
                         * @property {string|null} [instanceId] RestoreBackupContext instanceId
                         * @property {string|null} [project] RestoreBackupContext project
                         */
    
                        /**
                         * Constructs a new RestoreBackupContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a RestoreBackupContext.
                         * @implements IRestoreBackupContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IRestoreBackupContext=} [properties] Properties to set
                         */
                        function RestoreBackupContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RestoreBackupContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @instance
                         */
                        RestoreBackupContext.prototype.kind = "";
    
                        /**
                         * RestoreBackupContext backupRunId.
                         * @member {number|Long} backupRunId
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @instance
                         */
                        RestoreBackupContext.prototype.backupRunId = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * RestoreBackupContext instanceId.
                         * @member {string} instanceId
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @instance
                         */
                        RestoreBackupContext.prototype.instanceId = "";
    
                        /**
                         * RestoreBackupContext project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @instance
                         */
                        RestoreBackupContext.prototype.project = "";
    
                        /**
                         * Creates a new RestoreBackupContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IRestoreBackupContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.RestoreBackupContext} RestoreBackupContext instance
                         */
                        RestoreBackupContext.create = function create(properties) {
                            return new RestoreBackupContext(properties);
                        };
    
                        /**
                         * Encodes the specified RestoreBackupContext message. Does not implicitly {@link google.cloud.sql.v1beta4.RestoreBackupContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IRestoreBackupContext} message RestoreBackupContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreBackupContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.backupRunId != null && Object.hasOwnProperty.call(message, "backupRunId"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.backupRunId);
                            if (message.instanceId != null && Object.hasOwnProperty.call(message, "instanceId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.instanceId);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RestoreBackupContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.RestoreBackupContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IRestoreBackupContext} message RestoreBackupContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RestoreBackupContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RestoreBackupContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.RestoreBackupContext} RestoreBackupContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreBackupContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.RestoreBackupContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.backupRunId = reader.int64();
                                    break;
                                case 3:
                                    message.instanceId = reader.string();
                                    break;
                                case 4:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RestoreBackupContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.RestoreBackupContext} RestoreBackupContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RestoreBackupContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RestoreBackupContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RestoreBackupContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.backupRunId != null && message.hasOwnProperty("backupRunId"))
                                if (!$util.isInteger(message.backupRunId) && !(message.backupRunId && $util.isInteger(message.backupRunId.low) && $util.isInteger(message.backupRunId.high)))
                                    return "backupRunId: integer|Long expected";
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                if (!$util.isString(message.instanceId))
                                    return "instanceId: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RestoreBackupContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.RestoreBackupContext} RestoreBackupContext
                         */
                        RestoreBackupContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.RestoreBackupContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.RestoreBackupContext();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.backupRunId != null)
                                if ($util.Long)
                                    (message.backupRunId = $util.Long.fromValue(object.backupRunId)).unsigned = false;
                                else if (typeof object.backupRunId === "string")
                                    message.backupRunId = parseInt(object.backupRunId, 10);
                                else if (typeof object.backupRunId === "number")
                                    message.backupRunId = object.backupRunId;
                                else if (typeof object.backupRunId === "object")
                                    message.backupRunId = new $util.LongBits(object.backupRunId.low >>> 0, object.backupRunId.high >>> 0).toNumber();
                            if (object.instanceId != null)
                                message.instanceId = String(object.instanceId);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RestoreBackupContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.RestoreBackupContext} message RestoreBackupContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RestoreBackupContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.backupRunId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.backupRunId = options.longs === String ? "0" : 0;
                                object.instanceId = "";
                                object.project = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.backupRunId != null && message.hasOwnProperty("backupRunId"))
                                if (typeof message.backupRunId === "number")
                                    object.backupRunId = options.longs === String ? String(message.backupRunId) : message.backupRunId;
                                else
                                    object.backupRunId = options.longs === String ? $util.Long.prototype.toString.call(message.backupRunId) : options.longs === Number ? new $util.LongBits(message.backupRunId.low >>> 0, message.backupRunId.high >>> 0).toNumber() : message.backupRunId;
                            if (message.instanceId != null && message.hasOwnProperty("instanceId"))
                                object.instanceId = message.instanceId;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this RestoreBackupContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.RestoreBackupContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RestoreBackupContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return RestoreBackupContext;
                    })();
    
                    v1beta4.RotateServerCaContext = (function() {
    
                        /**
                         * Properties of a RotateServerCaContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IRotateServerCaContext
                         * @property {string|null} [kind] RotateServerCaContext kind
                         * @property {string|null} [nextVersion] RotateServerCaContext nextVersion
                         */
    
                        /**
                         * Constructs a new RotateServerCaContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a RotateServerCaContext.
                         * @implements IRotateServerCaContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IRotateServerCaContext=} [properties] Properties to set
                         */
                        function RotateServerCaContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RotateServerCaContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @instance
                         */
                        RotateServerCaContext.prototype.kind = "";
    
                        /**
                         * RotateServerCaContext nextVersion.
                         * @member {string} nextVersion
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @instance
                         */
                        RotateServerCaContext.prototype.nextVersion = "";
    
                        /**
                         * Creates a new RotateServerCaContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IRotateServerCaContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.RotateServerCaContext} RotateServerCaContext instance
                         */
                        RotateServerCaContext.create = function create(properties) {
                            return new RotateServerCaContext(properties);
                        };
    
                        /**
                         * Encodes the specified RotateServerCaContext message. Does not implicitly {@link google.cloud.sql.v1beta4.RotateServerCaContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IRotateServerCaContext} message RotateServerCaContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RotateServerCaContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.nextVersion != null && Object.hasOwnProperty.call(message, "nextVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RotateServerCaContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.RotateServerCaContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.IRotateServerCaContext} message RotateServerCaContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RotateServerCaContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RotateServerCaContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.RotateServerCaContext} RotateServerCaContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RotateServerCaContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.RotateServerCaContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.nextVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RotateServerCaContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.RotateServerCaContext} RotateServerCaContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RotateServerCaContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RotateServerCaContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RotateServerCaContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.nextVersion != null && message.hasOwnProperty("nextVersion"))
                                if (!$util.isString(message.nextVersion))
                                    return "nextVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RotateServerCaContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.RotateServerCaContext} RotateServerCaContext
                         */
                        RotateServerCaContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.RotateServerCaContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.RotateServerCaContext();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.nextVersion != null)
                                message.nextVersion = String(object.nextVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RotateServerCaContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.RotateServerCaContext} message RotateServerCaContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RotateServerCaContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.nextVersion = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.nextVersion != null && message.hasOwnProperty("nextVersion"))
                                object.nextVersion = message.nextVersion;
                            return object;
                        };
    
                        /**
                         * Converts this RotateServerCaContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.RotateServerCaContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RotateServerCaContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return RotateServerCaContext;
                    })();
    
                    v1beta4.Settings = (function() {
    
                        /**
                         * Properties of a Settings.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISettings
                         * @property {google.protobuf.IInt64Value|null} [settingsVersion] Settings settingsVersion
                         * @property {Array.<string>|null} [authorizedGaeApplications] Settings authorizedGaeApplications
                         * @property {string|null} [tier] Settings tier
                         * @property {string|null} [kind] Settings kind
                         * @property {Object.<string,string>|null} [userLabels] Settings userLabels
                         * @property {google.cloud.sql.v1beta4.SqlAvailabilityType|null} [availabilityType] Settings availabilityType
                         * @property {google.cloud.sql.v1beta4.SqlPricingPlan|null} [pricingPlan] Settings pricingPlan
                         * @property {google.cloud.sql.v1beta4.SqlReplicationType|null} [replicationType] Settings replicationType
                         * @property {google.protobuf.IInt64Value|null} [storageAutoResizeLimit] Settings storageAutoResizeLimit
                         * @property {google.cloud.sql.v1beta4.Settings.SqlActivationPolicy|null} [activationPolicy] Settings activationPolicy
                         * @property {google.cloud.sql.v1beta4.IIpConfiguration|null} [ipConfiguration] Settings ipConfiguration
                         * @property {google.protobuf.IBoolValue|null} [storageAutoResize] Settings storageAutoResize
                         * @property {google.cloud.sql.v1beta4.ILocationPreference|null} [locationPreference] Settings locationPreference
                         * @property {Array.<google.cloud.sql.v1beta4.IDatabaseFlags>|null} [databaseFlags] Settings databaseFlags
                         * @property {google.cloud.sql.v1beta4.SqlDataDiskType|null} [dataDiskType] Settings dataDiskType
                         * @property {google.cloud.sql.v1beta4.IMaintenanceWindow|null} [maintenanceWindow] Settings maintenanceWindow
                         * @property {google.cloud.sql.v1beta4.IBackupConfiguration|null} [backupConfiguration] Settings backupConfiguration
                         * @property {google.protobuf.IBoolValue|null} [databaseReplicationEnabled] Settings databaseReplicationEnabled
                         * @property {google.protobuf.IBoolValue|null} [crashSafeReplicationEnabled] Settings crashSafeReplicationEnabled
                         * @property {google.protobuf.IInt64Value|null} [dataDiskSizeGb] Settings dataDiskSizeGb
                         * @property {google.cloud.sql.v1beta4.ISqlActiveDirectoryConfig|null} [activeDirectoryConfig] Settings activeDirectoryConfig
                         * @property {string|null} [collation] Settings collation
                         * @property {Array.<google.cloud.sql.v1beta4.IDenyMaintenancePeriod>|null} [denyMaintenancePeriods] Settings denyMaintenancePeriods
                         * @property {google.cloud.sql.v1beta4.IInsightsConfig|null} [insightsConfig] Settings insightsConfig
                         */
    
                        /**
                         * Constructs a new Settings.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a Settings.
                         * @implements ISettings
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISettings=} [properties] Properties to set
                         */
                        function Settings(properties) {
                            this.authorizedGaeApplications = [];
                            this.userLabels = {};
                            this.databaseFlags = [];
                            this.denyMaintenancePeriods = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Settings settingsVersion.
                         * @member {google.protobuf.IInt64Value|null|undefined} settingsVersion
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.settingsVersion = null;
    
                        /**
                         * Settings authorizedGaeApplications.
                         * @member {Array.<string>} authorizedGaeApplications
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.authorizedGaeApplications = $util.emptyArray;
    
                        /**
                         * Settings tier.
                         * @member {string} tier
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.tier = "";
    
                        /**
                         * Settings kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.kind = "";
    
                        /**
                         * Settings userLabels.
                         * @member {Object.<string,string>} userLabels
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.userLabels = $util.emptyObject;
    
                        /**
                         * Settings availabilityType.
                         * @member {google.cloud.sql.v1beta4.SqlAvailabilityType} availabilityType
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.availabilityType = 0;
    
                        /**
                         * Settings pricingPlan.
                         * @member {google.cloud.sql.v1beta4.SqlPricingPlan} pricingPlan
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.pricingPlan = 0;
    
                        /**
                         * Settings replicationType.
                         * @member {google.cloud.sql.v1beta4.SqlReplicationType} replicationType
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.replicationType = 0;
    
                        /**
                         * Settings storageAutoResizeLimit.
                         * @member {google.protobuf.IInt64Value|null|undefined} storageAutoResizeLimit
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.storageAutoResizeLimit = null;
    
                        /**
                         * Settings activationPolicy.
                         * @member {google.cloud.sql.v1beta4.Settings.SqlActivationPolicy} activationPolicy
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.activationPolicy = 0;
    
                        /**
                         * Settings ipConfiguration.
                         * @member {google.cloud.sql.v1beta4.IIpConfiguration|null|undefined} ipConfiguration
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.ipConfiguration = null;
    
                        /**
                         * Settings storageAutoResize.
                         * @member {google.protobuf.IBoolValue|null|undefined} storageAutoResize
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.storageAutoResize = null;
    
                        /**
                         * Settings locationPreference.
                         * @member {google.cloud.sql.v1beta4.ILocationPreference|null|undefined} locationPreference
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.locationPreference = null;
    
                        /**
                         * Settings databaseFlags.
                         * @member {Array.<google.cloud.sql.v1beta4.IDatabaseFlags>} databaseFlags
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.databaseFlags = $util.emptyArray;
    
                        /**
                         * Settings dataDiskType.
                         * @member {google.cloud.sql.v1beta4.SqlDataDiskType} dataDiskType
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.dataDiskType = 0;
    
                        /**
                         * Settings maintenanceWindow.
                         * @member {google.cloud.sql.v1beta4.IMaintenanceWindow|null|undefined} maintenanceWindow
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.maintenanceWindow = null;
    
                        /**
                         * Settings backupConfiguration.
                         * @member {google.cloud.sql.v1beta4.IBackupConfiguration|null|undefined} backupConfiguration
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.backupConfiguration = null;
    
                        /**
                         * Settings databaseReplicationEnabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} databaseReplicationEnabled
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.databaseReplicationEnabled = null;
    
                        /**
                         * Settings crashSafeReplicationEnabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} crashSafeReplicationEnabled
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.crashSafeReplicationEnabled = null;
    
                        /**
                         * Settings dataDiskSizeGb.
                         * @member {google.protobuf.IInt64Value|null|undefined} dataDiskSizeGb
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.dataDiskSizeGb = null;
    
                        /**
                         * Settings activeDirectoryConfig.
                         * @member {google.cloud.sql.v1beta4.ISqlActiveDirectoryConfig|null|undefined} activeDirectoryConfig
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.activeDirectoryConfig = null;
    
                        /**
                         * Settings collation.
                         * @member {string} collation
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.collation = "";
    
                        /**
                         * Settings denyMaintenancePeriods.
                         * @member {Array.<google.cloud.sql.v1beta4.IDenyMaintenancePeriod>} denyMaintenancePeriods
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.denyMaintenancePeriods = $util.emptyArray;
    
                        /**
                         * Settings insightsConfig.
                         * @member {google.cloud.sql.v1beta4.IInsightsConfig|null|undefined} insightsConfig
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         */
                        Settings.prototype.insightsConfig = null;
    
                        /**
                         * Creates a new Settings instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISettings=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.Settings} Settings instance
                         */
                        Settings.create = function create(properties) {
                            return new Settings(properties);
                        };
    
                        /**
                         * Encodes the specified Settings message. Does not implicitly {@link google.cloud.sql.v1beta4.Settings.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISettings} message Settings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Settings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.settingsVersion != null && Object.hasOwnProperty.call(message, "settingsVersion"))
                                $root.google.protobuf.Int64Value.encode(message.settingsVersion, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.authorizedGaeApplications != null && message.authorizedGaeApplications.length)
                                for (var i = 0; i < message.authorizedGaeApplications.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.authorizedGaeApplications[i]);
                            if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.tier);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.kind);
                            if (message.userLabels != null && Object.hasOwnProperty.call(message, "userLabels"))
                                for (var keys = Object.keys(message.userLabels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userLabels[keys[i]]).ldelim();
                            if (message.availabilityType != null && Object.hasOwnProperty.call(message, "availabilityType"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.availabilityType);
                            if (message.pricingPlan != null && Object.hasOwnProperty.call(message, "pricingPlan"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.pricingPlan);
                            if (message.replicationType != null && Object.hasOwnProperty.call(message, "replicationType"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.replicationType);
                            if (message.storageAutoResizeLimit != null && Object.hasOwnProperty.call(message, "storageAutoResizeLimit"))
                                $root.google.protobuf.Int64Value.encode(message.storageAutoResizeLimit, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.activationPolicy != null && Object.hasOwnProperty.call(message, "activationPolicy"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.activationPolicy);
                            if (message.ipConfiguration != null && Object.hasOwnProperty.call(message, "ipConfiguration"))
                                $root.google.cloud.sql.v1beta4.IpConfiguration.encode(message.ipConfiguration, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.storageAutoResize != null && Object.hasOwnProperty.call(message, "storageAutoResize"))
                                $root.google.protobuf.BoolValue.encode(message.storageAutoResize, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.locationPreference != null && Object.hasOwnProperty.call(message, "locationPreference"))
                                $root.google.cloud.sql.v1beta4.LocationPreference.encode(message.locationPreference, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.databaseFlags != null && message.databaseFlags.length)
                                for (var i = 0; i < message.databaseFlags.length; ++i)
                                    $root.google.cloud.sql.v1beta4.DatabaseFlags.encode(message.databaseFlags[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.dataDiskType != null && Object.hasOwnProperty.call(message, "dataDiskType"))
                                writer.uint32(/* id 15, wireType 0 =*/120).int32(message.dataDiskType);
                            if (message.maintenanceWindow != null && Object.hasOwnProperty.call(message, "maintenanceWindow"))
                                $root.google.cloud.sql.v1beta4.MaintenanceWindow.encode(message.maintenanceWindow, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.backupConfiguration != null && Object.hasOwnProperty.call(message, "backupConfiguration"))
                                $root.google.cloud.sql.v1beta4.BackupConfiguration.encode(message.backupConfiguration, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.databaseReplicationEnabled != null && Object.hasOwnProperty.call(message, "databaseReplicationEnabled"))
                                $root.google.protobuf.BoolValue.encode(message.databaseReplicationEnabled, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.crashSafeReplicationEnabled != null && Object.hasOwnProperty.call(message, "crashSafeReplicationEnabled"))
                                $root.google.protobuf.BoolValue.encode(message.crashSafeReplicationEnabled, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.dataDiskSizeGb != null && Object.hasOwnProperty.call(message, "dataDiskSizeGb"))
                                $root.google.protobuf.Int64Value.encode(message.dataDiskSizeGb, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.activeDirectoryConfig != null && Object.hasOwnProperty.call(message, "activeDirectoryConfig"))
                                $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.encode(message.activeDirectoryConfig, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            if (message.collation != null && Object.hasOwnProperty.call(message, "collation"))
                                writer.uint32(/* id 23, wireType 2 =*/186).string(message.collation);
                            if (message.denyMaintenancePeriods != null && message.denyMaintenancePeriods.length)
                                for (var i = 0; i < message.denyMaintenancePeriods.length; ++i)
                                    $root.google.cloud.sql.v1beta4.DenyMaintenancePeriod.encode(message.denyMaintenancePeriods[i], writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            if (message.insightsConfig != null && Object.hasOwnProperty.call(message, "insightsConfig"))
                                $root.google.cloud.sql.v1beta4.InsightsConfig.encode(message.insightsConfig, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Settings message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.Settings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISettings} message Settings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Settings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Settings message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.Settings} Settings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Settings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.Settings(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.settingsVersion = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    if (!(message.authorizedGaeApplications && message.authorizedGaeApplications.length))
                                        message.authorizedGaeApplications = [];
                                    message.authorizedGaeApplications.push(reader.string());
                                    break;
                                case 3:
                                    message.tier = reader.string();
                                    break;
                                case 4:
                                    message.kind = reader.string();
                                    break;
                                case 5:
                                    if (message.userLabels === $util.emptyObject)
                                        message.userLabels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.userLabels[key] = value;
                                    break;
                                case 6:
                                    message.availabilityType = reader.int32();
                                    break;
                                case 7:
                                    message.pricingPlan = reader.int32();
                                    break;
                                case 8:
                                    message.replicationType = reader.int32();
                                    break;
                                case 9:
                                    message.storageAutoResizeLimit = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.activationPolicy = reader.int32();
                                    break;
                                case 11:
                                    message.ipConfiguration = $root.google.cloud.sql.v1beta4.IpConfiguration.decode(reader, reader.uint32());
                                    break;
                                case 12:
                                    message.storageAutoResize = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 13:
                                    message.locationPreference = $root.google.cloud.sql.v1beta4.LocationPreference.decode(reader, reader.uint32());
                                    break;
                                case 14:
                                    if (!(message.databaseFlags && message.databaseFlags.length))
                                        message.databaseFlags = [];
                                    message.databaseFlags.push($root.google.cloud.sql.v1beta4.DatabaseFlags.decode(reader, reader.uint32()));
                                    break;
                                case 15:
                                    message.dataDiskType = reader.int32();
                                    break;
                                case 16:
                                    message.maintenanceWindow = $root.google.cloud.sql.v1beta4.MaintenanceWindow.decode(reader, reader.uint32());
                                    break;
                                case 17:
                                    message.backupConfiguration = $root.google.cloud.sql.v1beta4.BackupConfiguration.decode(reader, reader.uint32());
                                    break;
                                case 18:
                                    message.databaseReplicationEnabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 19:
                                    message.crashSafeReplicationEnabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                    break;
                                case 20:
                                    message.dataDiskSizeGb = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                    break;
                                case 22:
                                    message.activeDirectoryConfig = $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.decode(reader, reader.uint32());
                                    break;
                                case 23:
                                    message.collation = reader.string();
                                    break;
                                case 24:
                                    if (!(message.denyMaintenancePeriods && message.denyMaintenancePeriods.length))
                                        message.denyMaintenancePeriods = [];
                                    message.denyMaintenancePeriods.push($root.google.cloud.sql.v1beta4.DenyMaintenancePeriod.decode(reader, reader.uint32()));
                                    break;
                                case 25:
                                    message.insightsConfig = $root.google.cloud.sql.v1beta4.InsightsConfig.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Settings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.Settings} Settings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Settings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Settings message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Settings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.settingsVersion != null && message.hasOwnProperty("settingsVersion")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.settingsVersion);
                                if (error)
                                    return "settingsVersion." + error;
                            }
                            if (message.authorizedGaeApplications != null && message.hasOwnProperty("authorizedGaeApplications")) {
                                if (!Array.isArray(message.authorizedGaeApplications))
                                    return "authorizedGaeApplications: array expected";
                                for (var i = 0; i < message.authorizedGaeApplications.length; ++i)
                                    if (!$util.isString(message.authorizedGaeApplications[i]))
                                        return "authorizedGaeApplications: string[] expected";
                            }
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                if (!$util.isString(message.tier))
                                    return "tier: string expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.userLabels != null && message.hasOwnProperty("userLabels")) {
                                if (!$util.isObject(message.userLabels))
                                    return "userLabels: object expected";
                                var key = Object.keys(message.userLabels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.userLabels[key[i]]))
                                        return "userLabels: string{k:string} expected";
                            }
                            if (message.availabilityType != null && message.hasOwnProperty("availabilityType"))
                                switch (message.availabilityType) {
                                default:
                                    return "availabilityType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.pricingPlan != null && message.hasOwnProperty("pricingPlan"))
                                switch (message.pricingPlan) {
                                default:
                                    return "pricingPlan: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.replicationType != null && message.hasOwnProperty("replicationType"))
                                switch (message.replicationType) {
                                default:
                                    return "replicationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.storageAutoResizeLimit != null && message.hasOwnProperty("storageAutoResizeLimit")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.storageAutoResizeLimit);
                                if (error)
                                    return "storageAutoResizeLimit." + error;
                            }
                            if (message.activationPolicy != null && message.hasOwnProperty("activationPolicy"))
                                switch (message.activationPolicy) {
                                default:
                                    return "activationPolicy: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.ipConfiguration != null && message.hasOwnProperty("ipConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.IpConfiguration.verify(message.ipConfiguration);
                                if (error)
                                    return "ipConfiguration." + error;
                            }
                            if (message.storageAutoResize != null && message.hasOwnProperty("storageAutoResize")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.storageAutoResize);
                                if (error)
                                    return "storageAutoResize." + error;
                            }
                            if (message.locationPreference != null && message.hasOwnProperty("locationPreference")) {
                                var error = $root.google.cloud.sql.v1beta4.LocationPreference.verify(message.locationPreference);
                                if (error)
                                    return "locationPreference." + error;
                            }
                            if (message.databaseFlags != null && message.hasOwnProperty("databaseFlags")) {
                                if (!Array.isArray(message.databaseFlags))
                                    return "databaseFlags: array expected";
                                for (var i = 0; i < message.databaseFlags.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.DatabaseFlags.verify(message.databaseFlags[i]);
                                    if (error)
                                        return "databaseFlags." + error;
                                }
                            }
                            if (message.dataDiskType != null && message.hasOwnProperty("dataDiskType"))
                                switch (message.dataDiskType) {
                                default:
                                    return "dataDiskType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow")) {
                                var error = $root.google.cloud.sql.v1beta4.MaintenanceWindow.verify(message.maintenanceWindow);
                                if (error)
                                    return "maintenanceWindow." + error;
                            }
                            if (message.backupConfiguration != null && message.hasOwnProperty("backupConfiguration")) {
                                var error = $root.google.cloud.sql.v1beta4.BackupConfiguration.verify(message.backupConfiguration);
                                if (error)
                                    return "backupConfiguration." + error;
                            }
                            if (message.databaseReplicationEnabled != null && message.hasOwnProperty("databaseReplicationEnabled")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.databaseReplicationEnabled);
                                if (error)
                                    return "databaseReplicationEnabled." + error;
                            }
                            if (message.crashSafeReplicationEnabled != null && message.hasOwnProperty("crashSafeReplicationEnabled")) {
                                var error = $root.google.protobuf.BoolValue.verify(message.crashSafeReplicationEnabled);
                                if (error)
                                    return "crashSafeReplicationEnabled." + error;
                            }
                            if (message.dataDiskSizeGb != null && message.hasOwnProperty("dataDiskSizeGb")) {
                                var error = $root.google.protobuf.Int64Value.verify(message.dataDiskSizeGb);
                                if (error)
                                    return "dataDiskSizeGb." + error;
                            }
                            if (message.activeDirectoryConfig != null && message.hasOwnProperty("activeDirectoryConfig")) {
                                var error = $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.verify(message.activeDirectoryConfig);
                                if (error)
                                    return "activeDirectoryConfig." + error;
                            }
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                if (!$util.isString(message.collation))
                                    return "collation: string expected";
                            if (message.denyMaintenancePeriods != null && message.hasOwnProperty("denyMaintenancePeriods")) {
                                if (!Array.isArray(message.denyMaintenancePeriods))
                                    return "denyMaintenancePeriods: array expected";
                                for (var i = 0; i < message.denyMaintenancePeriods.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.DenyMaintenancePeriod.verify(message.denyMaintenancePeriods[i]);
                                    if (error)
                                        return "denyMaintenancePeriods." + error;
                                }
                            }
                            if (message.insightsConfig != null && message.hasOwnProperty("insightsConfig")) {
                                var error = $root.google.cloud.sql.v1beta4.InsightsConfig.verify(message.insightsConfig);
                                if (error)
                                    return "insightsConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Settings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.Settings} Settings
                         */
                        Settings.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.Settings)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.Settings();
                            if (object.settingsVersion != null) {
                                if (typeof object.settingsVersion !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.settingsVersion: object expected");
                                message.settingsVersion = $root.google.protobuf.Int64Value.fromObject(object.settingsVersion);
                            }
                            if (object.authorizedGaeApplications) {
                                if (!Array.isArray(object.authorizedGaeApplications))
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.authorizedGaeApplications: array expected");
                                message.authorizedGaeApplications = [];
                                for (var i = 0; i < object.authorizedGaeApplications.length; ++i)
                                    message.authorizedGaeApplications[i] = String(object.authorizedGaeApplications[i]);
                            }
                            if (object.tier != null)
                                message.tier = String(object.tier);
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.userLabels) {
                                if (typeof object.userLabels !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.userLabels: object expected");
                                message.userLabels = {};
                                for (var keys = Object.keys(object.userLabels), i = 0; i < keys.length; ++i)
                                    message.userLabels[keys[i]] = String(object.userLabels[keys[i]]);
                            }
                            switch (object.availabilityType) {
                            case "SQL_AVAILABILITY_TYPE_UNSPECIFIED":
                            case 0:
                                message.availabilityType = 0;
                                break;
                            case "ZONAL":
                            case 1:
                                message.availabilityType = 1;
                                break;
                            case "REGIONAL":
                            case 2:
                                message.availabilityType = 2;
                                break;
                            }
                            switch (object.pricingPlan) {
                            case "SQL_PRICING_PLAN_UNSPECIFIED":
                            case 0:
                                message.pricingPlan = 0;
                                break;
                            case "PACKAGE":
                            case 1:
                                message.pricingPlan = 1;
                                break;
                            case "PER_USE":
                            case 2:
                                message.pricingPlan = 2;
                                break;
                            }
                            switch (object.replicationType) {
                            case "SQL_REPLICATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.replicationType = 0;
                                break;
                            case "SYNCHRONOUS":
                            case 1:
                                message.replicationType = 1;
                                break;
                            case "ASYNCHRONOUS":
                            case 2:
                                message.replicationType = 2;
                                break;
                            }
                            if (object.storageAutoResizeLimit != null) {
                                if (typeof object.storageAutoResizeLimit !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.storageAutoResizeLimit: object expected");
                                message.storageAutoResizeLimit = $root.google.protobuf.Int64Value.fromObject(object.storageAutoResizeLimit);
                            }
                            switch (object.activationPolicy) {
                            case "SQL_ACTIVATION_POLICY_UNSPECIFIED":
                            case 0:
                                message.activationPolicy = 0;
                                break;
                            case "ALWAYS":
                            case 1:
                                message.activationPolicy = 1;
                                break;
                            case "NEVER":
                            case 2:
                                message.activationPolicy = 2;
                                break;
                            case "ON_DEMAND":
                            case 3:
                                message.activationPolicy = 3;
                                break;
                            }
                            if (object.ipConfiguration != null) {
                                if (typeof object.ipConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.ipConfiguration: object expected");
                                message.ipConfiguration = $root.google.cloud.sql.v1beta4.IpConfiguration.fromObject(object.ipConfiguration);
                            }
                            if (object.storageAutoResize != null) {
                                if (typeof object.storageAutoResize !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.storageAutoResize: object expected");
                                message.storageAutoResize = $root.google.protobuf.BoolValue.fromObject(object.storageAutoResize);
                            }
                            if (object.locationPreference != null) {
                                if (typeof object.locationPreference !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.locationPreference: object expected");
                                message.locationPreference = $root.google.cloud.sql.v1beta4.LocationPreference.fromObject(object.locationPreference);
                            }
                            if (object.databaseFlags) {
                                if (!Array.isArray(object.databaseFlags))
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.databaseFlags: array expected");
                                message.databaseFlags = [];
                                for (var i = 0; i < object.databaseFlags.length; ++i) {
                                    if (typeof object.databaseFlags[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.Settings.databaseFlags: object expected");
                                    message.databaseFlags[i] = $root.google.cloud.sql.v1beta4.DatabaseFlags.fromObject(object.databaseFlags[i]);
                                }
                            }
                            switch (object.dataDiskType) {
                            case "SQL_DATA_DISK_TYPE_UNSPECIFIED":
                            case 0:
                                message.dataDiskType = 0;
                                break;
                            case "PD_SSD":
                            case 1:
                                message.dataDiskType = 1;
                                break;
                            case "PD_HDD":
                            case 2:
                                message.dataDiskType = 2;
                                break;
                            case "OBSOLETE_LOCAL_SSD":
                            case 3:
                                message.dataDiskType = 3;
                                break;
                            }
                            if (object.maintenanceWindow != null) {
                                if (typeof object.maintenanceWindow !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.maintenanceWindow: object expected");
                                message.maintenanceWindow = $root.google.cloud.sql.v1beta4.MaintenanceWindow.fromObject(object.maintenanceWindow);
                            }
                            if (object.backupConfiguration != null) {
                                if (typeof object.backupConfiguration !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.backupConfiguration: object expected");
                                message.backupConfiguration = $root.google.cloud.sql.v1beta4.BackupConfiguration.fromObject(object.backupConfiguration);
                            }
                            if (object.databaseReplicationEnabled != null) {
                                if (typeof object.databaseReplicationEnabled !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.databaseReplicationEnabled: object expected");
                                message.databaseReplicationEnabled = $root.google.protobuf.BoolValue.fromObject(object.databaseReplicationEnabled);
                            }
                            if (object.crashSafeReplicationEnabled != null) {
                                if (typeof object.crashSafeReplicationEnabled !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.crashSafeReplicationEnabled: object expected");
                                message.crashSafeReplicationEnabled = $root.google.protobuf.BoolValue.fromObject(object.crashSafeReplicationEnabled);
                            }
                            if (object.dataDiskSizeGb != null) {
                                if (typeof object.dataDiskSizeGb !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.dataDiskSizeGb: object expected");
                                message.dataDiskSizeGb = $root.google.protobuf.Int64Value.fromObject(object.dataDiskSizeGb);
                            }
                            if (object.activeDirectoryConfig != null) {
                                if (typeof object.activeDirectoryConfig !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.activeDirectoryConfig: object expected");
                                message.activeDirectoryConfig = $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.fromObject(object.activeDirectoryConfig);
                            }
                            if (object.collation != null)
                                message.collation = String(object.collation);
                            if (object.denyMaintenancePeriods) {
                                if (!Array.isArray(object.denyMaintenancePeriods))
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.denyMaintenancePeriods: array expected");
                                message.denyMaintenancePeriods = [];
                                for (var i = 0; i < object.denyMaintenancePeriods.length; ++i) {
                                    if (typeof object.denyMaintenancePeriods[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.Settings.denyMaintenancePeriods: object expected");
                                    message.denyMaintenancePeriods[i] = $root.google.cloud.sql.v1beta4.DenyMaintenancePeriod.fromObject(object.denyMaintenancePeriods[i]);
                                }
                            }
                            if (object.insightsConfig != null) {
                                if (typeof object.insightsConfig !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.Settings.insightsConfig: object expected");
                                message.insightsConfig = $root.google.cloud.sql.v1beta4.InsightsConfig.fromObject(object.insightsConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Settings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @static
                         * @param {google.cloud.sql.v1beta4.Settings} message Settings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Settings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.authorizedGaeApplications = [];
                                object.databaseFlags = [];
                                object.denyMaintenancePeriods = [];
                            }
                            if (options.objects || options.defaults)
                                object.userLabels = {};
                            if (options.defaults) {
                                object.settingsVersion = null;
                                object.tier = "";
                                object.kind = "";
                                object.availabilityType = options.enums === String ? "SQL_AVAILABILITY_TYPE_UNSPECIFIED" : 0;
                                object.pricingPlan = options.enums === String ? "SQL_PRICING_PLAN_UNSPECIFIED" : 0;
                                object.replicationType = options.enums === String ? "SQL_REPLICATION_TYPE_UNSPECIFIED" : 0;
                                object.storageAutoResizeLimit = null;
                                object.activationPolicy = options.enums === String ? "SQL_ACTIVATION_POLICY_UNSPECIFIED" : 0;
                                object.ipConfiguration = null;
                                object.storageAutoResize = null;
                                object.locationPreference = null;
                                object.dataDiskType = options.enums === String ? "SQL_DATA_DISK_TYPE_UNSPECIFIED" : 0;
                                object.maintenanceWindow = null;
                                object.backupConfiguration = null;
                                object.databaseReplicationEnabled = null;
                                object.crashSafeReplicationEnabled = null;
                                object.dataDiskSizeGb = null;
                                object.activeDirectoryConfig = null;
                                object.collation = "";
                                object.insightsConfig = null;
                            }
                            if (message.settingsVersion != null && message.hasOwnProperty("settingsVersion"))
                                object.settingsVersion = $root.google.protobuf.Int64Value.toObject(message.settingsVersion, options);
                            if (message.authorizedGaeApplications && message.authorizedGaeApplications.length) {
                                object.authorizedGaeApplications = [];
                                for (var j = 0; j < message.authorizedGaeApplications.length; ++j)
                                    object.authorizedGaeApplications[j] = message.authorizedGaeApplications[j];
                            }
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                object.tier = message.tier;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            var keys2;
                            if (message.userLabels && (keys2 = Object.keys(message.userLabels)).length) {
                                object.userLabels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.userLabels[keys2[j]] = message.userLabels[keys2[j]];
                            }
                            if (message.availabilityType != null && message.hasOwnProperty("availabilityType"))
                                object.availabilityType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlAvailabilityType[message.availabilityType] : message.availabilityType;
                            if (message.pricingPlan != null && message.hasOwnProperty("pricingPlan"))
                                object.pricingPlan = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlPricingPlan[message.pricingPlan] : message.pricingPlan;
                            if (message.replicationType != null && message.hasOwnProperty("replicationType"))
                                object.replicationType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlReplicationType[message.replicationType] : message.replicationType;
                            if (message.storageAutoResizeLimit != null && message.hasOwnProperty("storageAutoResizeLimit"))
                                object.storageAutoResizeLimit = $root.google.protobuf.Int64Value.toObject(message.storageAutoResizeLimit, options);
                            if (message.activationPolicy != null && message.hasOwnProperty("activationPolicy"))
                                object.activationPolicy = options.enums === String ? $root.google.cloud.sql.v1beta4.Settings.SqlActivationPolicy[message.activationPolicy] : message.activationPolicy;
                            if (message.ipConfiguration != null && message.hasOwnProperty("ipConfiguration"))
                                object.ipConfiguration = $root.google.cloud.sql.v1beta4.IpConfiguration.toObject(message.ipConfiguration, options);
                            if (message.storageAutoResize != null && message.hasOwnProperty("storageAutoResize"))
                                object.storageAutoResize = $root.google.protobuf.BoolValue.toObject(message.storageAutoResize, options);
                            if (message.locationPreference != null && message.hasOwnProperty("locationPreference"))
                                object.locationPreference = $root.google.cloud.sql.v1beta4.LocationPreference.toObject(message.locationPreference, options);
                            if (message.databaseFlags && message.databaseFlags.length) {
                                object.databaseFlags = [];
                                for (var j = 0; j < message.databaseFlags.length; ++j)
                                    object.databaseFlags[j] = $root.google.cloud.sql.v1beta4.DatabaseFlags.toObject(message.databaseFlags[j], options);
                            }
                            if (message.dataDiskType != null && message.hasOwnProperty("dataDiskType"))
                                object.dataDiskType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlDataDiskType[message.dataDiskType] : message.dataDiskType;
                            if (message.maintenanceWindow != null && message.hasOwnProperty("maintenanceWindow"))
                                object.maintenanceWindow = $root.google.cloud.sql.v1beta4.MaintenanceWindow.toObject(message.maintenanceWindow, options);
                            if (message.backupConfiguration != null && message.hasOwnProperty("backupConfiguration"))
                                object.backupConfiguration = $root.google.cloud.sql.v1beta4.BackupConfiguration.toObject(message.backupConfiguration, options);
                            if (message.databaseReplicationEnabled != null && message.hasOwnProperty("databaseReplicationEnabled"))
                                object.databaseReplicationEnabled = $root.google.protobuf.BoolValue.toObject(message.databaseReplicationEnabled, options);
                            if (message.crashSafeReplicationEnabled != null && message.hasOwnProperty("crashSafeReplicationEnabled"))
                                object.crashSafeReplicationEnabled = $root.google.protobuf.BoolValue.toObject(message.crashSafeReplicationEnabled, options);
                            if (message.dataDiskSizeGb != null && message.hasOwnProperty("dataDiskSizeGb"))
                                object.dataDiskSizeGb = $root.google.protobuf.Int64Value.toObject(message.dataDiskSizeGb, options);
                            if (message.activeDirectoryConfig != null && message.hasOwnProperty("activeDirectoryConfig"))
                                object.activeDirectoryConfig = $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.toObject(message.activeDirectoryConfig, options);
                            if (message.collation != null && message.hasOwnProperty("collation"))
                                object.collation = message.collation;
                            if (message.denyMaintenancePeriods && message.denyMaintenancePeriods.length) {
                                object.denyMaintenancePeriods = [];
                                for (var j = 0; j < message.denyMaintenancePeriods.length; ++j)
                                    object.denyMaintenancePeriods[j] = $root.google.cloud.sql.v1beta4.DenyMaintenancePeriod.toObject(message.denyMaintenancePeriods[j], options);
                            }
                            if (message.insightsConfig != null && message.hasOwnProperty("insightsConfig"))
                                object.insightsConfig = $root.google.cloud.sql.v1beta4.InsightsConfig.toObject(message.insightsConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Settings to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.Settings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Settings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * SqlActivationPolicy enum.
                         * @name google.cloud.sql.v1beta4.Settings.SqlActivationPolicy
                         * @enum {number}
                         * @property {number} SQL_ACTIVATION_POLICY_UNSPECIFIED=0 SQL_ACTIVATION_POLICY_UNSPECIFIED value
                         * @property {number} ALWAYS=1 ALWAYS value
                         * @property {number} NEVER=2 NEVER value
                         * @property {number} ON_DEMAND=3 ON_DEMAND value
                         */
                        Settings.SqlActivationPolicy = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SQL_ACTIVATION_POLICY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALWAYS"] = 1;
                            values[valuesById[2] = "NEVER"] = 2;
                            values[valuesById[3] = "ON_DEMAND"] = 3;
                            return values;
                        })();
    
                        return Settings;
                    })();
    
                    v1beta4.SslCert = (function() {
    
                        /**
                         * Properties of a SslCert.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISslCert
                         * @property {string|null} [kind] SslCert kind
                         * @property {string|null} [certSerialNumber] SslCert certSerialNumber
                         * @property {string|null} [cert] SslCert cert
                         * @property {google.protobuf.ITimestamp|null} [createTime] SslCert createTime
                         * @property {string|null} [commonName] SslCert commonName
                         * @property {google.protobuf.ITimestamp|null} [expirationTime] SslCert expirationTime
                         * @property {string|null} [sha1Fingerprint] SslCert sha1Fingerprint
                         * @property {string|null} [instance] SslCert instance
                         * @property {string|null} [selfLink] SslCert selfLink
                         */
    
                        /**
                         * Constructs a new SslCert.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SslCert.
                         * @implements ISslCert
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISslCert=} [properties] Properties to set
                         */
                        function SslCert(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SslCert kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.kind = "";
    
                        /**
                         * SslCert certSerialNumber.
                         * @member {string} certSerialNumber
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.certSerialNumber = "";
    
                        /**
                         * SslCert cert.
                         * @member {string} cert
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.cert = "";
    
                        /**
                         * SslCert createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.createTime = null;
    
                        /**
                         * SslCert commonName.
                         * @member {string} commonName
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.commonName = "";
    
                        /**
                         * SslCert expirationTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} expirationTime
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.expirationTime = null;
    
                        /**
                         * SslCert sha1Fingerprint.
                         * @member {string} sha1Fingerprint
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.sha1Fingerprint = "";
    
                        /**
                         * SslCert instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.instance = "";
    
                        /**
                         * SslCert selfLink.
                         * @member {string} selfLink
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         */
                        SslCert.prototype.selfLink = "";
    
                        /**
                         * Creates a new SslCert instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCert=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SslCert} SslCert instance
                         */
                        SslCert.create = function create(properties) {
                            return new SslCert(properties);
                        };
    
                        /**
                         * Encodes the specified SslCert message. Does not implicitly {@link google.cloud.sql.v1beta4.SslCert.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCert} message SslCert message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCert.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.certSerialNumber != null && Object.hasOwnProperty.call(message, "certSerialNumber"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.certSerialNumber);
                            if (message.cert != null && Object.hasOwnProperty.call(message, "cert"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.cert);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.commonName != null && Object.hasOwnProperty.call(message, "commonName"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.commonName);
                            if (message.expirationTime != null && Object.hasOwnProperty.call(message, "expirationTime"))
                                $root.google.protobuf.Timestamp.encode(message.expirationTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.sha1Fingerprint != null && Object.hasOwnProperty.call(message, "sha1Fingerprint"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.sha1Fingerprint);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.instance);
                            if (message.selfLink != null && Object.hasOwnProperty.call(message, "selfLink"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.selfLink);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SslCert message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SslCert.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCert} message SslCert message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCert.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SslCert message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SslCert} SslCert
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCert.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SslCert();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.certSerialNumber = reader.string();
                                    break;
                                case 3:
                                    message.cert = reader.string();
                                    break;
                                case 4:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.commonName = reader.string();
                                    break;
                                case 6:
                                    message.expirationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.sha1Fingerprint = reader.string();
                                    break;
                                case 8:
                                    message.instance = reader.string();
                                    break;
                                case 9:
                                    message.selfLink = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SslCert message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SslCert} SslCert
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCert.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SslCert message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SslCert.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.certSerialNumber != null && message.hasOwnProperty("certSerialNumber"))
                                if (!$util.isString(message.certSerialNumber))
                                    return "certSerialNumber: string expected";
                            if (message.cert != null && message.hasOwnProperty("cert"))
                                if (!$util.isString(message.cert))
                                    return "cert: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.commonName != null && message.hasOwnProperty("commonName"))
                                if (!$util.isString(message.commonName))
                                    return "commonName: string expected";
                            if (message.expirationTime != null && message.hasOwnProperty("expirationTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.expirationTime);
                                if (error)
                                    return "expirationTime." + error;
                            }
                            if (message.sha1Fingerprint != null && message.hasOwnProperty("sha1Fingerprint"))
                                if (!$util.isString(message.sha1Fingerprint))
                                    return "sha1Fingerprint: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                if (!$util.isString(message.selfLink))
                                    return "selfLink: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SslCert message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SslCert} SslCert
                         */
                        SslCert.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SslCert)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SslCert();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.certSerialNumber != null)
                                message.certSerialNumber = String(object.certSerialNumber);
                            if (object.cert != null)
                                message.cert = String(object.cert);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SslCert.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.commonName != null)
                                message.commonName = String(object.commonName);
                            if (object.expirationTime != null) {
                                if (typeof object.expirationTime !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SslCert.expirationTime: object expected");
                                message.expirationTime = $root.google.protobuf.Timestamp.fromObject(object.expirationTime);
                            }
                            if (object.sha1Fingerprint != null)
                                message.sha1Fingerprint = String(object.sha1Fingerprint);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.selfLink != null)
                                message.selfLink = String(object.selfLink);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SslCert message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @static
                         * @param {google.cloud.sql.v1beta4.SslCert} message SslCert
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SslCert.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.certSerialNumber = "";
                                object.cert = "";
                                object.createTime = null;
                                object.commonName = "";
                                object.expirationTime = null;
                                object.sha1Fingerprint = "";
                                object.instance = "";
                                object.selfLink = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.certSerialNumber != null && message.hasOwnProperty("certSerialNumber"))
                                object.certSerialNumber = message.certSerialNumber;
                            if (message.cert != null && message.hasOwnProperty("cert"))
                                object.cert = message.cert;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.commonName != null && message.hasOwnProperty("commonName"))
                                object.commonName = message.commonName;
                            if (message.expirationTime != null && message.hasOwnProperty("expirationTime"))
                                object.expirationTime = $root.google.protobuf.Timestamp.toObject(message.expirationTime, options);
                            if (message.sha1Fingerprint != null && message.hasOwnProperty("sha1Fingerprint"))
                                object.sha1Fingerprint = message.sha1Fingerprint;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.selfLink != null && message.hasOwnProperty("selfLink"))
                                object.selfLink = message.selfLink;
                            return object;
                        };
    
                        /**
                         * Converts this SslCert to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SslCert
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SslCert.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SslCert;
                    })();
    
                    v1beta4.SslCertDetail = (function() {
    
                        /**
                         * Properties of a SslCertDetail.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISslCertDetail
                         * @property {google.cloud.sql.v1beta4.ISslCert|null} [certInfo] SslCertDetail certInfo
                         * @property {string|null} [certPrivateKey] SslCertDetail certPrivateKey
                         */
    
                        /**
                         * Constructs a new SslCertDetail.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SslCertDetail.
                         * @implements ISslCertDetail
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISslCertDetail=} [properties] Properties to set
                         */
                        function SslCertDetail(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SslCertDetail certInfo.
                         * @member {google.cloud.sql.v1beta4.ISslCert|null|undefined} certInfo
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @instance
                         */
                        SslCertDetail.prototype.certInfo = null;
    
                        /**
                         * SslCertDetail certPrivateKey.
                         * @member {string} certPrivateKey
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @instance
                         */
                        SslCertDetail.prototype.certPrivateKey = "";
    
                        /**
                         * Creates a new SslCertDetail instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertDetail=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SslCertDetail} SslCertDetail instance
                         */
                        SslCertDetail.create = function create(properties) {
                            return new SslCertDetail(properties);
                        };
    
                        /**
                         * Encodes the specified SslCertDetail message. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertDetail.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertDetail} message SslCertDetail message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertDetail.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.certInfo != null && Object.hasOwnProperty.call(message, "certInfo"))
                                $root.google.cloud.sql.v1beta4.SslCert.encode(message.certInfo, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.certPrivateKey != null && Object.hasOwnProperty.call(message, "certPrivateKey"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.certPrivateKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SslCertDetail message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertDetail.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertDetail} message SslCertDetail message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertDetail.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SslCertDetail message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SslCertDetail} SslCertDetail
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertDetail.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SslCertDetail();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.certInfo = $root.google.cloud.sql.v1beta4.SslCert.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.certPrivateKey = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SslCertDetail message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SslCertDetail} SslCertDetail
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertDetail.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SslCertDetail message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SslCertDetail.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.certInfo != null && message.hasOwnProperty("certInfo")) {
                                var error = $root.google.cloud.sql.v1beta4.SslCert.verify(message.certInfo);
                                if (error)
                                    return "certInfo." + error;
                            }
                            if (message.certPrivateKey != null && message.hasOwnProperty("certPrivateKey"))
                                if (!$util.isString(message.certPrivateKey))
                                    return "certPrivateKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SslCertDetail message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SslCertDetail} SslCertDetail
                         */
                        SslCertDetail.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SslCertDetail)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SslCertDetail();
                            if (object.certInfo != null) {
                                if (typeof object.certInfo !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SslCertDetail.certInfo: object expected");
                                message.certInfo = $root.google.cloud.sql.v1beta4.SslCert.fromObject(object.certInfo);
                            }
                            if (object.certPrivateKey != null)
                                message.certPrivateKey = String(object.certPrivateKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SslCertDetail message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @static
                         * @param {google.cloud.sql.v1beta4.SslCertDetail} message SslCertDetail
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SslCertDetail.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.certInfo = null;
                                object.certPrivateKey = "";
                            }
                            if (message.certInfo != null && message.hasOwnProperty("certInfo"))
                                object.certInfo = $root.google.cloud.sql.v1beta4.SslCert.toObject(message.certInfo, options);
                            if (message.certPrivateKey != null && message.hasOwnProperty("certPrivateKey"))
                                object.certPrivateKey = message.certPrivateKey;
                            return object;
                        };
    
                        /**
                         * Converts this SslCertDetail to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SslCertDetail
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SslCertDetail.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SslCertDetail;
                    })();
    
                    v1beta4.SslCertsCreateEphemeralRequest = (function() {
    
                        /**
                         * Properties of a SslCertsCreateEphemeralRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISslCertsCreateEphemeralRequest
                         * @property {string|null} [publicKey] SslCertsCreateEphemeralRequest publicKey
                         * @property {string|null} [accessToken] SslCertsCreateEphemeralRequest accessToken
                         */
    
                        /**
                         * Constructs a new SslCertsCreateEphemeralRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SslCertsCreateEphemeralRequest.
                         * @implements ISslCertsCreateEphemeralRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISslCertsCreateEphemeralRequest=} [properties] Properties to set
                         */
                        function SslCertsCreateEphemeralRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SslCertsCreateEphemeralRequest publicKey.
                         * @member {string} publicKey
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @instance
                         */
                        SslCertsCreateEphemeralRequest.prototype.publicKey = "";
    
                        /**
                         * SslCertsCreateEphemeralRequest accessToken.
                         * @member {string} accessToken
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @instance
                         */
                        SslCertsCreateEphemeralRequest.prototype.accessToken = "";
    
                        /**
                         * Creates a new SslCertsCreateEphemeralRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsCreateEphemeralRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest} SslCertsCreateEphemeralRequest instance
                         */
                        SslCertsCreateEphemeralRequest.create = function create(properties) {
                            return new SslCertsCreateEphemeralRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SslCertsCreateEphemeralRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsCreateEphemeralRequest} message SslCertsCreateEphemeralRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsCreateEphemeralRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.publicKey != null && Object.hasOwnProperty.call(message, "publicKey"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.publicKey);
                            if (message.accessToken != null && Object.hasOwnProperty.call(message, "accessToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.accessToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SslCertsCreateEphemeralRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsCreateEphemeralRequest} message SslCertsCreateEphemeralRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsCreateEphemeralRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SslCertsCreateEphemeralRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest} SslCertsCreateEphemeralRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsCreateEphemeralRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.publicKey = reader.string();
                                    break;
                                case 2:
                                    message.accessToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SslCertsCreateEphemeralRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest} SslCertsCreateEphemeralRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsCreateEphemeralRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SslCertsCreateEphemeralRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SslCertsCreateEphemeralRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.publicKey != null && message.hasOwnProperty("publicKey"))
                                if (!$util.isString(message.publicKey))
                                    return "publicKey: string expected";
                            if (message.accessToken != null && message.hasOwnProperty("accessToken"))
                                if (!$util.isString(message.accessToken))
                                    return "accessToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SslCertsCreateEphemeralRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest} SslCertsCreateEphemeralRequest
                         */
                        SslCertsCreateEphemeralRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest();
                            if (object.publicKey != null)
                                message.publicKey = String(object.publicKey);
                            if (object.accessToken != null)
                                message.accessToken = String(object.accessToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SslCertsCreateEphemeralRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest} message SslCertsCreateEphemeralRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SslCertsCreateEphemeralRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.publicKey = "";
                                object.accessToken = "";
                            }
                            if (message.publicKey != null && message.hasOwnProperty("publicKey"))
                                object.publicKey = message.publicKey;
                            if (message.accessToken != null && message.hasOwnProperty("accessToken"))
                                object.accessToken = message.accessToken;
                            return object;
                        };
    
                        /**
                         * Converts this SslCertsCreateEphemeralRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SslCertsCreateEphemeralRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SslCertsCreateEphemeralRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SslCertsCreateEphemeralRequest;
                    })();
    
                    v1beta4.SslCertsInsertRequest = (function() {
    
                        /**
                         * Properties of a SslCertsInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISslCertsInsertRequest
                         * @property {string|null} [commonName] SslCertsInsertRequest commonName
                         */
    
                        /**
                         * Constructs a new SslCertsInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SslCertsInsertRequest.
                         * @implements ISslCertsInsertRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertRequest=} [properties] Properties to set
                         */
                        function SslCertsInsertRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SslCertsInsertRequest commonName.
                         * @member {string} commonName
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @instance
                         */
                        SslCertsInsertRequest.prototype.commonName = "";
    
                        /**
                         * Creates a new SslCertsInsertRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertRequest} SslCertsInsertRequest instance
                         */
                        SslCertsInsertRequest.create = function create(properties) {
                            return new SslCertsInsertRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SslCertsInsertRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsInsertRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertRequest} message SslCertsInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsInsertRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.commonName != null && Object.hasOwnProperty.call(message, "commonName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.commonName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SslCertsInsertRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsInsertRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertRequest} message SslCertsInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsInsertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SslCertsInsertRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertRequest} SslCertsInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsInsertRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SslCertsInsertRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.commonName = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SslCertsInsertRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertRequest} SslCertsInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsInsertRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SslCertsInsertRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SslCertsInsertRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.commonName != null && message.hasOwnProperty("commonName"))
                                if (!$util.isString(message.commonName))
                                    return "commonName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SslCertsInsertRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertRequest} SslCertsInsertRequest
                         */
                        SslCertsInsertRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SslCertsInsertRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SslCertsInsertRequest();
                            if (object.commonName != null)
                                message.commonName = String(object.commonName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SslCertsInsertRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SslCertsInsertRequest} message SslCertsInsertRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SslCertsInsertRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.commonName = "";
                            if (message.commonName != null && message.hasOwnProperty("commonName"))
                                object.commonName = message.commonName;
                            return object;
                        };
    
                        /**
                         * Converts this SslCertsInsertRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SslCertsInsertRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SslCertsInsertRequest;
                    })();
    
                    v1beta4.SqlInstancesRescheduleMaintenanceRequestBody = (function() {
    
                        /**
                         * Properties of a SqlInstancesRescheduleMaintenanceRequestBody.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlInstancesRescheduleMaintenanceRequestBody
                         * @property {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.IReschedule|null} [reschedule] SqlInstancesRescheduleMaintenanceRequestBody reschedule
                         */
    
                        /**
                         * Constructs a new SqlInstancesRescheduleMaintenanceRequestBody.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlInstancesRescheduleMaintenanceRequestBody.
                         * @implements ISqlInstancesRescheduleMaintenanceRequestBody
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequestBody=} [properties] Properties to set
                         */
                        function SqlInstancesRescheduleMaintenanceRequestBody(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlInstancesRescheduleMaintenanceRequestBody reschedule.
                         * @member {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.IReschedule|null|undefined} reschedule
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @instance
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.prototype.reschedule = null;
    
                        /**
                         * Creates a new SqlInstancesRescheduleMaintenanceRequestBody instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequestBody=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody} SqlInstancesRescheduleMaintenanceRequestBody instance
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.create = function create(properties) {
                            return new SqlInstancesRescheduleMaintenanceRequestBody(properties);
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRescheduleMaintenanceRequestBody message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequestBody} message SqlInstancesRescheduleMaintenanceRequestBody message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reschedule != null && Object.hasOwnProperty.call(message, "reschedule"))
                                $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.encode(message.reschedule, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlInstancesRescheduleMaintenanceRequestBody message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlInstancesRescheduleMaintenanceRequestBody} message SqlInstancesRescheduleMaintenanceRequestBody message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlInstancesRescheduleMaintenanceRequestBody message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody} SqlInstancesRescheduleMaintenanceRequestBody
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3:
                                    message.reschedule = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlInstancesRescheduleMaintenanceRequestBody message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody} SqlInstancesRescheduleMaintenanceRequestBody
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlInstancesRescheduleMaintenanceRequestBody message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.reschedule != null && message.hasOwnProperty("reschedule")) {
                                var error = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.verify(message.reschedule);
                                if (error)
                                    return "reschedule." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlInstancesRescheduleMaintenanceRequestBody message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody} SqlInstancesRescheduleMaintenanceRequestBody
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody();
                            if (object.reschedule != null) {
                                if (typeof object.reschedule !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.reschedule: object expected");
                                message.reschedule = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.fromObject(object.reschedule);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlInstancesRescheduleMaintenanceRequestBody message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody} message SqlInstancesRescheduleMaintenanceRequestBody
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.reschedule = null;
                            if (message.reschedule != null && message.hasOwnProperty("reschedule"))
                                object.reschedule = $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.toObject(message.reschedule, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlInstancesRescheduleMaintenanceRequestBody to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        SqlInstancesRescheduleMaintenanceRequestBody.Reschedule = (function() {
    
                            /**
                             * Properties of a Reschedule.
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                             * @interface IReschedule
                             * @property {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType|null} [rescheduleType] Reschedule rescheduleType
                             * @property {google.protobuf.ITimestamp|null} [scheduleTime] Reschedule scheduleTime
                             */
    
                            /**
                             * Constructs a new Reschedule.
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody
                             * @classdesc Represents a Reschedule.
                             * @implements IReschedule
                             * @constructor
                             * @param {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.IReschedule=} [properties] Properties to set
                             */
                            function Reschedule(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Reschedule rescheduleType.
                             * @member {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType} rescheduleType
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @instance
                             */
                            Reschedule.prototype.rescheduleType = 0;
    
                            /**
                             * Reschedule scheduleTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} scheduleTime
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @instance
                             */
                            Reschedule.prototype.scheduleTime = null;
    
                            /**
                             * Creates a new Reschedule instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.IReschedule=} [properties] Properties to set
                             * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule} Reschedule instance
                             */
                            Reschedule.create = function create(properties) {
                                return new Reschedule(properties);
                            };
    
                            /**
                             * Encodes the specified Reschedule message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.IReschedule} message Reschedule message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Reschedule.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.rescheduleType != null && Object.hasOwnProperty.call(message, "rescheduleType"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.rescheduleType);
                                if (message.scheduleTime != null && Object.hasOwnProperty.call(message, "scheduleTime"))
                                    $root.google.protobuf.Timestamp.encode(message.scheduleTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Reschedule message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.IReschedule} message Reschedule message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Reschedule.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Reschedule message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule} Reschedule
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Reschedule.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.rescheduleType = reader.int32();
                                        break;
                                    case 2:
                                        message.scheduleTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Reschedule message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule} Reschedule
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Reschedule.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Reschedule message.
                             * @function verify
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Reschedule.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.rescheduleType != null && message.hasOwnProperty("rescheduleType"))
                                    switch (message.rescheduleType) {
                                    default:
                                        return "rescheduleType: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.scheduleTime);
                                    if (error)
                                        return "scheduleTime." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Reschedule message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule} Reschedule
                             */
                            Reschedule.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule)
                                    return object;
                                var message = new $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule();
                                switch (object.rescheduleType) {
                                case "RESCHEDULE_TYPE_UNSPECIFIED":
                                case 0:
                                    message.rescheduleType = 0;
                                    break;
                                case "IMMEDIATE":
                                case 1:
                                    message.rescheduleType = 1;
                                    break;
                                case "NEXT_AVAILABLE_WINDOW":
                                case 2:
                                    message.rescheduleType = 2;
                                    break;
                                case "SPECIFIC_TIME":
                                case 3:
                                    message.rescheduleType = 3;
                                    break;
                                }
                                if (object.scheduleTime != null) {
                                    if (typeof object.scheduleTime !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule.scheduleTime: object expected");
                                    message.scheduleTime = $root.google.protobuf.Timestamp.fromObject(object.scheduleTime);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Reschedule message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @static
                             * @param {google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule} message Reschedule
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Reschedule.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.rescheduleType = options.enums === String ? "RESCHEDULE_TYPE_UNSPECIFIED" : 0;
                                    object.scheduleTime = null;
                                }
                                if (message.rescheduleType != null && message.hasOwnProperty("rescheduleType"))
                                    object.rescheduleType = options.enums === String ? $root.google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType[message.rescheduleType] : message.rescheduleType;
                                if (message.scheduleTime != null && message.hasOwnProperty("scheduleTime"))
                                    object.scheduleTime = $root.google.protobuf.Timestamp.toObject(message.scheduleTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this Reschedule to JSON.
                             * @function toJSON
                             * @memberof google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.Reschedule
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Reschedule.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return Reschedule;
                        })();
    
                        /**
                         * RescheduleType enum.
                         * @name google.cloud.sql.v1beta4.SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType
                         * @enum {number}
                         * @property {number} RESCHEDULE_TYPE_UNSPECIFIED=0 RESCHEDULE_TYPE_UNSPECIFIED value
                         * @property {number} IMMEDIATE=1 IMMEDIATE value
                         * @property {number} NEXT_AVAILABLE_WINDOW=2 NEXT_AVAILABLE_WINDOW value
                         * @property {number} SPECIFIC_TIME=3 SPECIFIC_TIME value
                         */
                        SqlInstancesRescheduleMaintenanceRequestBody.RescheduleType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "RESCHEDULE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "IMMEDIATE"] = 1;
                            values[valuesById[2] = "NEXT_AVAILABLE_WINDOW"] = 2;
                            values[valuesById[3] = "SPECIFIC_TIME"] = 3;
                            return values;
                        })();
    
                        return SqlInstancesRescheduleMaintenanceRequestBody;
                    })();
    
                    v1beta4.SslCertsInsertResponse = (function() {
    
                        /**
                         * Properties of a SslCertsInsertResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISslCertsInsertResponse
                         * @property {string|null} [kind] SslCertsInsertResponse kind
                         * @property {google.cloud.sql.v1beta4.IOperation|null} [operation] SslCertsInsertResponse operation
                         * @property {google.cloud.sql.v1beta4.ISslCert|null} [serverCaCert] SslCertsInsertResponse serverCaCert
                         * @property {google.cloud.sql.v1beta4.ISslCertDetail|null} [clientCert] SslCertsInsertResponse clientCert
                         */
    
                        /**
                         * Constructs a new SslCertsInsertResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SslCertsInsertResponse.
                         * @implements ISslCertsInsertResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertResponse=} [properties] Properties to set
                         */
                        function SslCertsInsertResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SslCertsInsertResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @instance
                         */
                        SslCertsInsertResponse.prototype.kind = "";
    
                        /**
                         * SslCertsInsertResponse operation.
                         * @member {google.cloud.sql.v1beta4.IOperation|null|undefined} operation
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @instance
                         */
                        SslCertsInsertResponse.prototype.operation = null;
    
                        /**
                         * SslCertsInsertResponse serverCaCert.
                         * @member {google.cloud.sql.v1beta4.ISslCert|null|undefined} serverCaCert
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @instance
                         */
                        SslCertsInsertResponse.prototype.serverCaCert = null;
    
                        /**
                         * SslCertsInsertResponse clientCert.
                         * @member {google.cloud.sql.v1beta4.ISslCertDetail|null|undefined} clientCert
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @instance
                         */
                        SslCertsInsertResponse.prototype.clientCert = null;
    
                        /**
                         * Creates a new SslCertsInsertResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertResponse} SslCertsInsertResponse instance
                         */
                        SslCertsInsertResponse.create = function create(properties) {
                            return new SslCertsInsertResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SslCertsInsertResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsInsertResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertResponse} message SslCertsInsertResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsInsertResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                                $root.google.cloud.sql.v1beta4.Operation.encode(message.operation, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.serverCaCert != null && Object.hasOwnProperty.call(message, "serverCaCert"))
                                $root.google.cloud.sql.v1beta4.SslCert.encode(message.serverCaCert, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.clientCert != null && Object.hasOwnProperty.call(message, "clientCert"))
                                $root.google.cloud.sql.v1beta4.SslCertDetail.encode(message.clientCert, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SslCertsInsertResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsInsertResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsInsertResponse} message SslCertsInsertResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsInsertResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SslCertsInsertResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertResponse} SslCertsInsertResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsInsertResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SslCertsInsertResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.operation = $root.google.cloud.sql.v1beta4.Operation.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.serverCaCert = $root.google.cloud.sql.v1beta4.SslCert.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.clientCert = $root.google.cloud.sql.v1beta4.SslCertDetail.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SslCertsInsertResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertResponse} SslCertsInsertResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsInsertResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SslCertsInsertResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SslCertsInsertResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.operation != null && message.hasOwnProperty("operation")) {
                                var error = $root.google.cloud.sql.v1beta4.Operation.verify(message.operation);
                                if (error)
                                    return "operation." + error;
                            }
                            if (message.serverCaCert != null && message.hasOwnProperty("serverCaCert")) {
                                var error = $root.google.cloud.sql.v1beta4.SslCert.verify(message.serverCaCert);
                                if (error)
                                    return "serverCaCert." + error;
                            }
                            if (message.clientCert != null && message.hasOwnProperty("clientCert")) {
                                var error = $root.google.cloud.sql.v1beta4.SslCertDetail.verify(message.clientCert);
                                if (error)
                                    return "clientCert." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SslCertsInsertResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SslCertsInsertResponse} SslCertsInsertResponse
                         */
                        SslCertsInsertResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SslCertsInsertResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SslCertsInsertResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.operation != null) {
                                if (typeof object.operation !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SslCertsInsertResponse.operation: object expected");
                                message.operation = $root.google.cloud.sql.v1beta4.Operation.fromObject(object.operation);
                            }
                            if (object.serverCaCert != null) {
                                if (typeof object.serverCaCert !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SslCertsInsertResponse.serverCaCert: object expected");
                                message.serverCaCert = $root.google.cloud.sql.v1beta4.SslCert.fromObject(object.serverCaCert);
                            }
                            if (object.clientCert != null) {
                                if (typeof object.clientCert !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SslCertsInsertResponse.clientCert: object expected");
                                message.clientCert = $root.google.cloud.sql.v1beta4.SslCertDetail.fromObject(object.clientCert);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SslCertsInsertResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.SslCertsInsertResponse} message SslCertsInsertResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SslCertsInsertResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.operation = null;
                                object.serverCaCert = null;
                                object.clientCert = null;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                object.operation = $root.google.cloud.sql.v1beta4.Operation.toObject(message.operation, options);
                            if (message.serverCaCert != null && message.hasOwnProperty("serverCaCert"))
                                object.serverCaCert = $root.google.cloud.sql.v1beta4.SslCert.toObject(message.serverCaCert, options);
                            if (message.clientCert != null && message.hasOwnProperty("clientCert"))
                                object.clientCert = $root.google.cloud.sql.v1beta4.SslCertDetail.toObject(message.clientCert, options);
                            return object;
                        };
    
                        /**
                         * Converts this SslCertsInsertResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SslCertsInsertResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SslCertsInsertResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SslCertsInsertResponse;
                    })();
    
                    v1beta4.SslCertsListResponse = (function() {
    
                        /**
                         * Properties of a SslCertsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISslCertsListResponse
                         * @property {string|null} [kind] SslCertsListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.ISslCert>|null} [items] SslCertsListResponse items
                         */
    
                        /**
                         * Constructs a new SslCertsListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SslCertsListResponse.
                         * @implements ISslCertsListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISslCertsListResponse=} [properties] Properties to set
                         */
                        function SslCertsListResponse(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SslCertsListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @instance
                         */
                        SslCertsListResponse.prototype.kind = "";
    
                        /**
                         * SslCertsListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.ISslCert>} items
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @instance
                         */
                        SslCertsListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * Creates a new SslCertsListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SslCertsListResponse} SslCertsListResponse instance
                         */
                        SslCertsListResponse.create = function create(properties) {
                            return new SslCertsListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified SslCertsListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsListResponse} message SslCertsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.SslCert.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SslCertsListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SslCertsListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISslCertsListResponse} message SslCertsListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SslCertsListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SslCertsListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SslCertsListResponse} SslCertsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SslCertsListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.SslCert.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SslCertsListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SslCertsListResponse} SslCertsListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SslCertsListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SslCertsListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SslCertsListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.SslCert.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SslCertsListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SslCertsListResponse} SslCertsListResponse
                         */
                        SslCertsListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SslCertsListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SslCertsListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.SslCertsListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.SslCertsListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.SslCert.fromObject(object.items[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SslCertsListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.SslCertsListResponse} message SslCertsListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SslCertsListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults)
                                object.kind = "";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.SslCert.toObject(message.items[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SslCertsListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SslCertsListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SslCertsListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SslCertsListResponse;
                    })();
    
                    v1beta4.TruncateLogContext = (function() {
    
                        /**
                         * Properties of a TruncateLogContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ITruncateLogContext
                         * @property {string|null} [kind] TruncateLogContext kind
                         * @property {string|null} [logType] TruncateLogContext logType
                         */
    
                        /**
                         * Constructs a new TruncateLogContext.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a TruncateLogContext.
                         * @implements ITruncateLogContext
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ITruncateLogContext=} [properties] Properties to set
                         */
                        function TruncateLogContext(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TruncateLogContext kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @instance
                         */
                        TruncateLogContext.prototype.kind = "";
    
                        /**
                         * TruncateLogContext logType.
                         * @member {string} logType
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @instance
                         */
                        TruncateLogContext.prototype.logType = "";
    
                        /**
                         * Creates a new TruncateLogContext instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITruncateLogContext=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.TruncateLogContext} TruncateLogContext instance
                         */
                        TruncateLogContext.create = function create(properties) {
                            return new TruncateLogContext(properties);
                        };
    
                        /**
                         * Encodes the specified TruncateLogContext message. Does not implicitly {@link google.cloud.sql.v1beta4.TruncateLogContext.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITruncateLogContext} message TruncateLogContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TruncateLogContext.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.logType != null && Object.hasOwnProperty.call(message, "logType"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.logType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TruncateLogContext message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.TruncateLogContext.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITruncateLogContext} message TruncateLogContext message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TruncateLogContext.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TruncateLogContext message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.TruncateLogContext} TruncateLogContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TruncateLogContext.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.TruncateLogContext();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.logType = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TruncateLogContext message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.TruncateLogContext} TruncateLogContext
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TruncateLogContext.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TruncateLogContext message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TruncateLogContext.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.logType != null && message.hasOwnProperty("logType"))
                                if (!$util.isString(message.logType))
                                    return "logType: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TruncateLogContext message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.TruncateLogContext} TruncateLogContext
                         */
                        TruncateLogContext.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.TruncateLogContext)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.TruncateLogContext();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.logType != null)
                                message.logType = String(object.logType);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TruncateLogContext message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @static
                         * @param {google.cloud.sql.v1beta4.TruncateLogContext} message TruncateLogContext
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TruncateLogContext.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.logType = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.logType != null && message.hasOwnProperty("logType"))
                                object.logType = message.logType;
                            return object;
                        };
    
                        /**
                         * Converts this TruncateLogContext to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.TruncateLogContext
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TruncateLogContext.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return TruncateLogContext;
                    })();
    
                    v1beta4.SqlActiveDirectoryConfig = (function() {
    
                        /**
                         * Properties of a SqlActiveDirectoryConfig.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlActiveDirectoryConfig
                         * @property {string|null} [kind] SqlActiveDirectoryConfig kind
                         * @property {string|null} [domain] SqlActiveDirectoryConfig domain
                         */
    
                        /**
                         * Constructs a new SqlActiveDirectoryConfig.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlActiveDirectoryConfig.
                         * @implements ISqlActiveDirectoryConfig
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlActiveDirectoryConfig=} [properties] Properties to set
                         */
                        function SqlActiveDirectoryConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlActiveDirectoryConfig kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @instance
                         */
                        SqlActiveDirectoryConfig.prototype.kind = "";
    
                        /**
                         * SqlActiveDirectoryConfig domain.
                         * @member {string} domain
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @instance
                         */
                        SqlActiveDirectoryConfig.prototype.domain = "";
    
                        /**
                         * Creates a new SqlActiveDirectoryConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlActiveDirectoryConfig=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlActiveDirectoryConfig} SqlActiveDirectoryConfig instance
                         */
                        SqlActiveDirectoryConfig.create = function create(properties) {
                            return new SqlActiveDirectoryConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SqlActiveDirectoryConfig message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlActiveDirectoryConfig} message SqlActiveDirectoryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlActiveDirectoryConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.domain != null && Object.hasOwnProperty.call(message, "domain"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.domain);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlActiveDirectoryConfig message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlActiveDirectoryConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlActiveDirectoryConfig} message SqlActiveDirectoryConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlActiveDirectoryConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlActiveDirectoryConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlActiveDirectoryConfig} SqlActiveDirectoryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlActiveDirectoryConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.domain = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlActiveDirectoryConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlActiveDirectoryConfig} SqlActiveDirectoryConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlActiveDirectoryConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlActiveDirectoryConfig message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlActiveDirectoryConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                if (!$util.isString(message.domain))
                                    return "domain: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlActiveDirectoryConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlActiveDirectoryConfig} SqlActiveDirectoryConfig
                         */
                        SqlActiveDirectoryConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlActiveDirectoryConfig();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.domain != null)
                                message.domain = String(object.domain);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlActiveDirectoryConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlActiveDirectoryConfig} message SqlActiveDirectoryConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlActiveDirectoryConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.domain = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.domain != null && message.hasOwnProperty("domain"))
                                object.domain = message.domain;
                            return object;
                        };
    
                        /**
                         * Converts this SqlActiveDirectoryConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlActiveDirectoryConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlActiveDirectoryConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlActiveDirectoryConfig;
                    })();
    
                    /**
                     * SqlBackupRunStatus enum.
                     * @name google.cloud.sql.v1beta4.SqlBackupRunStatus
                     * @enum {number}
                     * @property {number} SQL_BACKUP_RUN_STATUS_UNSPECIFIED=0 SQL_BACKUP_RUN_STATUS_UNSPECIFIED value
                     * @property {number} ENQUEUED=1 ENQUEUED value
                     * @property {number} OVERDUE=2 OVERDUE value
                     * @property {number} RUNNING=3 RUNNING value
                     * @property {number} FAILED=4 FAILED value
                     * @property {number} SUCCESSFUL=5 SUCCESSFUL value
                     * @property {number} SKIPPED=6 SKIPPED value
                     * @property {number} DELETION_PENDING=7 DELETION_PENDING value
                     * @property {number} DELETION_FAILED=8 DELETION_FAILED value
                     * @property {number} DELETED=9 DELETED value
                     */
                    v1beta4.SqlBackupRunStatus = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_BACKUP_RUN_STATUS_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ENQUEUED"] = 1;
                        values[valuesById[2] = "OVERDUE"] = 2;
                        values[valuesById[3] = "RUNNING"] = 3;
                        values[valuesById[4] = "FAILED"] = 4;
                        values[valuesById[5] = "SUCCESSFUL"] = 5;
                        values[valuesById[6] = "SKIPPED"] = 6;
                        values[valuesById[7] = "DELETION_PENDING"] = 7;
                        values[valuesById[8] = "DELETION_FAILED"] = 8;
                        values[valuesById[9] = "DELETED"] = 9;
                        return values;
                    })();
    
                    /**
                     * SqlBackupRunType enum.
                     * @name google.cloud.sql.v1beta4.SqlBackupRunType
                     * @enum {number}
                     * @property {number} SQL_BACKUP_RUN_TYPE_UNSPECIFIED=0 SQL_BACKUP_RUN_TYPE_UNSPECIFIED value
                     * @property {number} AUTOMATED=1 AUTOMATED value
                     * @property {number} ON_DEMAND=2 ON_DEMAND value
                     */
                    v1beta4.SqlBackupRunType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_BACKUP_RUN_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "AUTOMATED"] = 1;
                        values[valuesById[2] = "ON_DEMAND"] = 2;
                        return values;
                    })();
    
                    /**
                     * SqlBackupKind enum.
                     * @name google.cloud.sql.v1beta4.SqlBackupKind
                     * @enum {number}
                     * @property {number} SQL_BACKUP_KIND_UNSPECIFIED=0 SQL_BACKUP_KIND_UNSPECIFIED value
                     * @property {number} SNAPSHOT=1 SNAPSHOT value
                     * @property {number} PHYSICAL=2 PHYSICAL value
                     */
                    v1beta4.SqlBackupKind = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_BACKUP_KIND_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SNAPSHOT"] = 1;
                        values[valuesById[2] = "PHYSICAL"] = 2;
                        return values;
                    })();
    
                    /**
                     * SqlBackendType enum.
                     * @name google.cloud.sql.v1beta4.SqlBackendType
                     * @enum {number}
                     * @property {number} SQL_BACKEND_TYPE_UNSPECIFIED=0 SQL_BACKEND_TYPE_UNSPECIFIED value
                     * @property {number} FIRST_GEN=1 FIRST_GEN value
                     * @property {number} SECOND_GEN=2 SECOND_GEN value
                     * @property {number} EXTERNAL=3 EXTERNAL value
                     */
                    v1beta4.SqlBackendType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_BACKEND_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "FIRST_GEN"] = 1;
                        values[valuesById[2] = "SECOND_GEN"] = 2;
                        values[valuesById[3] = "EXTERNAL"] = 3;
                        return values;
                    })();
    
                    /**
                     * SqlIpAddressType enum.
                     * @name google.cloud.sql.v1beta4.SqlIpAddressType
                     * @enum {number}
                     * @property {number} SQL_IP_ADDRESS_TYPE_UNSPECIFIED=0 SQL_IP_ADDRESS_TYPE_UNSPECIFIED value
                     * @property {number} PRIMARY=1 PRIMARY value
                     * @property {number} OUTGOING=2 OUTGOING value
                     * @property {number} PRIVATE=3 PRIVATE value
                     * @property {number} MIGRATED_1ST_GEN=4 MIGRATED_1ST_GEN value
                     */
                    v1beta4.SqlIpAddressType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_IP_ADDRESS_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PRIMARY"] = 1;
                        values[valuesById[2] = "OUTGOING"] = 2;
                        values[valuesById[3] = "PRIVATE"] = 3;
                        values[valuesById[4] = "MIGRATED_1ST_GEN"] = 4;
                        return values;
                    })();
    
                    /**
                     * SqlInstanceType enum.
                     * @name google.cloud.sql.v1beta4.SqlInstanceType
                     * @enum {number}
                     * @property {number} SQL_INSTANCE_TYPE_UNSPECIFIED=0 SQL_INSTANCE_TYPE_UNSPECIFIED value
                     * @property {number} CLOUD_SQL_INSTANCE=1 CLOUD_SQL_INSTANCE value
                     * @property {number} ON_PREMISES_INSTANCE=2 ON_PREMISES_INSTANCE value
                     * @property {number} READ_REPLICA_INSTANCE=3 READ_REPLICA_INSTANCE value
                     */
                    v1beta4.SqlInstanceType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_INSTANCE_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "CLOUD_SQL_INSTANCE"] = 1;
                        values[valuesById[2] = "ON_PREMISES_INSTANCE"] = 2;
                        values[valuesById[3] = "READ_REPLICA_INSTANCE"] = 3;
                        return values;
                    })();
    
                    /**
                     * SqlDatabaseVersion enum.
                     * @name google.cloud.sql.v1beta4.SqlDatabaseVersion
                     * @enum {number}
                     * @property {number} SQL_DATABASE_VERSION_UNSPECIFIED=0 SQL_DATABASE_VERSION_UNSPECIFIED value
                     * @property {number} MYSQL_5_1=2 MYSQL_5_1 value
                     * @property {number} MYSQL_5_5=3 MYSQL_5_5 value
                     * @property {number} MYSQL_5_6=5 MYSQL_5_6 value
                     * @property {number} MYSQL_5_7=6 MYSQL_5_7 value
                     * @property {number} POSTGRES_9_6=9 POSTGRES_9_6 value
                     * @property {number} POSTGRES_11=10 POSTGRES_11 value
                     * @property {number} SQLSERVER_2017_STANDARD=11 SQLSERVER_2017_STANDARD value
                     * @property {number} SQLSERVER_2017_ENTERPRISE=14 SQLSERVER_2017_ENTERPRISE value
                     * @property {number} SQLSERVER_2017_EXPRESS=15 SQLSERVER_2017_EXPRESS value
                     * @property {number} SQLSERVER_2017_WEB=16 SQLSERVER_2017_WEB value
                     * @property {number} POSTGRES_10=18 POSTGRES_10 value
                     * @property {number} POSTGRES_12=19 POSTGRES_12 value
                     * @property {number} MYSQL_8_0=20 MYSQL_8_0 value
                     * @property {number} POSTGRES_13=23 POSTGRES_13 value
                     */
                    v1beta4.SqlDatabaseVersion = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_DATABASE_VERSION_UNSPECIFIED"] = 0;
                        values[valuesById[2] = "MYSQL_5_1"] = 2;
                        values[valuesById[3] = "MYSQL_5_5"] = 3;
                        values[valuesById[5] = "MYSQL_5_6"] = 5;
                        values[valuesById[6] = "MYSQL_5_7"] = 6;
                        values[valuesById[9] = "POSTGRES_9_6"] = 9;
                        values[valuesById[10] = "POSTGRES_11"] = 10;
                        values[valuesById[11] = "SQLSERVER_2017_STANDARD"] = 11;
                        values[valuesById[14] = "SQLSERVER_2017_ENTERPRISE"] = 14;
                        values[valuesById[15] = "SQLSERVER_2017_EXPRESS"] = 15;
                        values[valuesById[16] = "SQLSERVER_2017_WEB"] = 16;
                        values[valuesById[18] = "POSTGRES_10"] = 18;
                        values[valuesById[19] = "POSTGRES_12"] = 19;
                        values[valuesById[20] = "MYSQL_8_0"] = 20;
                        values[valuesById[23] = "POSTGRES_13"] = 23;
                        return values;
                    })();
    
                    /**
                     * SqlSuspensionReason enum.
                     * @name google.cloud.sql.v1beta4.SqlSuspensionReason
                     * @enum {number}
                     * @property {number} SQL_SUSPENSION_REASON_UNSPECIFIED=0 SQL_SUSPENSION_REASON_UNSPECIFIED value
                     * @property {number} BILLING_ISSUE=2 BILLING_ISSUE value
                     * @property {number} LEGAL_ISSUE=3 LEGAL_ISSUE value
                     * @property {number} OPERATIONAL_ISSUE=4 OPERATIONAL_ISSUE value
                     * @property {number} KMS_KEY_ISSUE=5 KMS_KEY_ISSUE value
                     */
                    v1beta4.SqlSuspensionReason = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_SUSPENSION_REASON_UNSPECIFIED"] = 0;
                        values[valuesById[2] = "BILLING_ISSUE"] = 2;
                        values[valuesById[3] = "LEGAL_ISSUE"] = 3;
                        values[valuesById[4] = "OPERATIONAL_ISSUE"] = 4;
                        values[valuesById[5] = "KMS_KEY_ISSUE"] = 5;
                        return values;
                    })();
    
                    /**
                     * SqlPricingPlan enum.
                     * @name google.cloud.sql.v1beta4.SqlPricingPlan
                     * @enum {number}
                     * @property {number} SQL_PRICING_PLAN_UNSPECIFIED=0 SQL_PRICING_PLAN_UNSPECIFIED value
                     * @property {number} PACKAGE=1 PACKAGE value
                     * @property {number} PER_USE=2 PER_USE value
                     */
                    v1beta4.SqlPricingPlan = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_PRICING_PLAN_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PACKAGE"] = 1;
                        values[valuesById[2] = "PER_USE"] = 2;
                        return values;
                    })();
    
                    /**
                     * SqlReplicationType enum.
                     * @name google.cloud.sql.v1beta4.SqlReplicationType
                     * @enum {number}
                     * @property {number} SQL_REPLICATION_TYPE_UNSPECIFIED=0 SQL_REPLICATION_TYPE_UNSPECIFIED value
                     * @property {number} SYNCHRONOUS=1 SYNCHRONOUS value
                     * @property {number} ASYNCHRONOUS=2 ASYNCHRONOUS value
                     */
                    v1beta4.SqlReplicationType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_REPLICATION_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "SYNCHRONOUS"] = 1;
                        values[valuesById[2] = "ASYNCHRONOUS"] = 2;
                        return values;
                    })();
    
                    /**
                     * SqlDataDiskType enum.
                     * @name google.cloud.sql.v1beta4.SqlDataDiskType
                     * @enum {number}
                     * @property {number} SQL_DATA_DISK_TYPE_UNSPECIFIED=0 SQL_DATA_DISK_TYPE_UNSPECIFIED value
                     * @property {number} PD_SSD=1 PD_SSD value
                     * @property {number} PD_HDD=2 PD_HDD value
                     * @property {number} OBSOLETE_LOCAL_SSD=3 OBSOLETE_LOCAL_SSD value
                     */
                    v1beta4.SqlDataDiskType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_DATA_DISK_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "PD_SSD"] = 1;
                        values[valuesById[2] = "PD_HDD"] = 2;
                        values[valuesById[3] = "OBSOLETE_LOCAL_SSD"] = 3;
                        return values;
                    })();
    
                    /**
                     * SqlAvailabilityType enum.
                     * @name google.cloud.sql.v1beta4.SqlAvailabilityType
                     * @enum {number}
                     * @property {number} SQL_AVAILABILITY_TYPE_UNSPECIFIED=0 SQL_AVAILABILITY_TYPE_UNSPECIFIED value
                     * @property {number} ZONAL=1 ZONAL value
                     * @property {number} REGIONAL=2 REGIONAL value
                     */
                    v1beta4.SqlAvailabilityType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_AVAILABILITY_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "ZONAL"] = 1;
                        values[valuesById[2] = "REGIONAL"] = 2;
                        return values;
                    })();
    
                    /**
                     * SqlUpdateTrack enum.
                     * @name google.cloud.sql.v1beta4.SqlUpdateTrack
                     * @enum {number}
                     * @property {number} SQL_UPDATE_TRACK_UNSPECIFIED=0 SQL_UPDATE_TRACK_UNSPECIFIED value
                     * @property {number} canary=1 canary value
                     * @property {number} stable=2 stable value
                     */
                    v1beta4.SqlUpdateTrack = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_UPDATE_TRACK_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "canary"] = 1;
                        values[valuesById[2] = "stable"] = 2;
                        return values;
                    })();
    
                    /**
                     * SqlFlagType enum.
                     * @name google.cloud.sql.v1beta4.SqlFlagType
                     * @enum {number}
                     * @property {number} SQL_FLAG_TYPE_UNSPECIFIED=0 SQL_FLAG_TYPE_UNSPECIFIED value
                     * @property {number} BOOLEAN=1 BOOLEAN value
                     * @property {number} STRING=2 STRING value
                     * @property {number} INTEGER=3 INTEGER value
                     * @property {number} NONE=4 NONE value
                     * @property {number} MYSQL_TIMEZONE_OFFSET=5 MYSQL_TIMEZONE_OFFSET value
                     * @property {number} FLOAT=6 FLOAT value
                     * @property {number} REPEATED_STRING=7 REPEATED_STRING value
                     */
                    v1beta4.SqlFlagType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "SQL_FLAG_TYPE_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "BOOLEAN"] = 1;
                        values[valuesById[2] = "STRING"] = 2;
                        values[valuesById[3] = "INTEGER"] = 3;
                        values[valuesById[4] = "NONE"] = 4;
                        values[valuesById[5] = "MYSQL_TIMEZONE_OFFSET"] = 5;
                        values[valuesById[6] = "FLOAT"] = 6;
                        values[valuesById[7] = "REPEATED_STRING"] = 7;
                        return values;
                    })();
    
                    v1beta4.SqlTiersService = (function() {
    
                        /**
                         * Constructs a new SqlTiersService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlTiersService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlTiersService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlTiersService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlTiersService;
    
                        /**
                         * Creates new SqlTiersService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlTiersService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlTiersService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlTiersService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlTiersService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlTiersService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.TiersListResponse} [response] TiersListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlTiersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlTiersListRequest} request SqlTiersListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlTiersService.ListCallback} callback Node-style callback called with the error, if any, and TiersListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlTiersService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlTiersListRequest, $root.google.cloud.sql.v1beta4.TiersListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlTiersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlTiersListRequest} request SqlTiersListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.TiersListResponse>} Promise
                         * @variation 2
                         */
    
                        return SqlTiersService;
                    })();
    
                    v1beta4.SqlTiersListRequest = (function() {
    
                        /**
                         * Properties of a SqlTiersListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlTiersListRequest
                         * @property {string|null} [project] SqlTiersListRequest project
                         */
    
                        /**
                         * Constructs a new SqlTiersListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlTiersListRequest.
                         * @implements ISqlTiersListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlTiersListRequest=} [properties] Properties to set
                         */
                        function SqlTiersListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlTiersListRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @instance
                         */
                        SqlTiersListRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlTiersListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlTiersListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlTiersListRequest} SqlTiersListRequest instance
                         */
                        SqlTiersListRequest.create = function create(properties) {
                            return new SqlTiersListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlTiersListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlTiersListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlTiersListRequest} message SqlTiersListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlTiersListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlTiersListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlTiersListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlTiersListRequest} message SqlTiersListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlTiersListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlTiersListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlTiersListRequest} SqlTiersListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlTiersListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlTiersListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlTiersListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlTiersListRequest} SqlTiersListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlTiersListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlTiersListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlTiersListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlTiersListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlTiersListRequest} SqlTiersListRequest
                         */
                        SqlTiersListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlTiersListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlTiersListRequest();
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlTiersListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlTiersListRequest} message SqlTiersListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlTiersListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.project = "";
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlTiersListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlTiersListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlTiersListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlTiersListRequest;
                    })();
    
                    v1beta4.TiersListResponse = (function() {
    
                        /**
                         * Properties of a TiersListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ITiersListResponse
                         * @property {string|null} [kind] TiersListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.ITier>|null} [items] TiersListResponse items
                         */
    
                        /**
                         * Constructs a new TiersListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a TiersListResponse.
                         * @implements ITiersListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ITiersListResponse=} [properties] Properties to set
                         */
                        function TiersListResponse(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TiersListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @instance
                         */
                        TiersListResponse.prototype.kind = "";
    
                        /**
                         * TiersListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.ITier>} items
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @instance
                         */
                        TiersListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * Creates a new TiersListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITiersListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.TiersListResponse} TiersListResponse instance
                         */
                        TiersListResponse.create = function create(properties) {
                            return new TiersListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified TiersListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.TiersListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITiersListResponse} message TiersListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TiersListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.Tier.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TiersListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.TiersListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITiersListResponse} message TiersListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TiersListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TiersListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.TiersListResponse} TiersListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TiersListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.TiersListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.Tier.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TiersListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.TiersListResponse} TiersListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TiersListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TiersListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TiersListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.Tier.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TiersListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.TiersListResponse} TiersListResponse
                         */
                        TiersListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.TiersListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.TiersListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.TiersListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.TiersListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.Tier.fromObject(object.items[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TiersListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.TiersListResponse} message TiersListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TiersListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults)
                                object.kind = "";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.Tier.toObject(message.items[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this TiersListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.TiersListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TiersListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return TiersListResponse;
                    })();
    
                    v1beta4.Tier = (function() {
    
                        /**
                         * Properties of a Tier.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ITier
                         * @property {string|null} [tier] Tier tier
                         * @property {number|Long|null} [RAM] Tier RAM
                         * @property {string|null} [kind] Tier kind
                         * @property {number|Long|null} [Disk_Quota] Tier Disk_Quota
                         * @property {Array.<string>|null} [region] Tier region
                         */
    
                        /**
                         * Constructs a new Tier.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a Tier.
                         * @implements ITier
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ITier=} [properties] Properties to set
                         */
                        function Tier(properties) {
                            this.region = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Tier tier.
                         * @member {string} tier
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @instance
                         */
                        Tier.prototype.tier = "";
    
                        /**
                         * Tier RAM.
                         * @member {number|Long} RAM
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @instance
                         */
                        Tier.prototype.RAM = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Tier kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @instance
                         */
                        Tier.prototype.kind = "";
    
                        /**
                         * Tier Disk_Quota.
                         * @member {number|Long} Disk_Quota
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @instance
                         */
                        Tier.prototype.Disk_Quota = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                        /**
                         * Tier region.
                         * @member {Array.<string>} region
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @instance
                         */
                        Tier.prototype.region = $util.emptyArray;
    
                        /**
                         * Creates a new Tier instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITier=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.Tier} Tier instance
                         */
                        Tier.create = function create(properties) {
                            return new Tier(properties);
                        };
    
                        /**
                         * Encodes the specified Tier message. Does not implicitly {@link google.cloud.sql.v1beta4.Tier.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITier} message Tier message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tier.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tier);
                            if (message.RAM != null && Object.hasOwnProperty.call(message, "RAM"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.RAM);
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                            if (message.Disk_Quota != null && Object.hasOwnProperty.call(message, "Disk_Quota"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int64(message.Disk_Quota);
                            if (message.region != null && message.region.length)
                                for (var i = 0; i < message.region.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.region[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Tier message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.Tier.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {google.cloud.sql.v1beta4.ITier} message Tier message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Tier.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Tier message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.Tier} Tier
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tier.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.Tier();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.tier = reader.string();
                                    break;
                                case 2:
                                    message.RAM = reader.int64();
                                    break;
                                case 3:
                                    message.kind = reader.string();
                                    break;
                                case 4:
                                    message.Disk_Quota = reader.int64();
                                    break;
                                case 5:
                                    if (!(message.region && message.region.length))
                                        message.region = [];
                                    message.region.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Tier message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.Tier} Tier
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Tier.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Tier message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Tier.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                if (!$util.isString(message.tier))
                                    return "tier: string expected";
                            if (message.RAM != null && message.hasOwnProperty("RAM"))
                                if (!$util.isInteger(message.RAM) && !(message.RAM && $util.isInteger(message.RAM.low) && $util.isInteger(message.RAM.high)))
                                    return "RAM: integer|Long expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.Disk_Quota != null && message.hasOwnProperty("Disk_Quota"))
                                if (!$util.isInteger(message.Disk_Quota) && !(message.Disk_Quota && $util.isInteger(message.Disk_Quota.low) && $util.isInteger(message.Disk_Quota.high)))
                                    return "Disk_Quota: integer|Long expected";
                            if (message.region != null && message.hasOwnProperty("region")) {
                                if (!Array.isArray(message.region))
                                    return "region: array expected";
                                for (var i = 0; i < message.region.length; ++i)
                                    if (!$util.isString(message.region[i]))
                                        return "region: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Tier message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.Tier} Tier
                         */
                        Tier.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.Tier)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.Tier();
                            if (object.tier != null)
                                message.tier = String(object.tier);
                            if (object.RAM != null)
                                if ($util.Long)
                                    (message.RAM = $util.Long.fromValue(object.RAM)).unsigned = false;
                                else if (typeof object.RAM === "string")
                                    message.RAM = parseInt(object.RAM, 10);
                                else if (typeof object.RAM === "number")
                                    message.RAM = object.RAM;
                                else if (typeof object.RAM === "object")
                                    message.RAM = new $util.LongBits(object.RAM.low >>> 0, object.RAM.high >>> 0).toNumber();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.Disk_Quota != null)
                                if ($util.Long)
                                    (message.Disk_Quota = $util.Long.fromValue(object.Disk_Quota)).unsigned = false;
                                else if (typeof object.Disk_Quota === "string")
                                    message.Disk_Quota = parseInt(object.Disk_Quota, 10);
                                else if (typeof object.Disk_Quota === "number")
                                    message.Disk_Quota = object.Disk_Quota;
                                else if (typeof object.Disk_Quota === "object")
                                    message.Disk_Quota = new $util.LongBits(object.Disk_Quota.low >>> 0, object.Disk_Quota.high >>> 0).toNumber();
                            if (object.region) {
                                if (!Array.isArray(object.region))
                                    throw TypeError(".google.cloud.sql.v1beta4.Tier.region: array expected");
                                message.region = [];
                                for (var i = 0; i < object.region.length; ++i)
                                    message.region[i] = String(object.region[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Tier message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @static
                         * @param {google.cloud.sql.v1beta4.Tier} message Tier
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Tier.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.region = [];
                            if (options.defaults) {
                                object.tier = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.RAM = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.RAM = options.longs === String ? "0" : 0;
                                object.kind = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.Disk_Quota = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.Disk_Quota = options.longs === String ? "0" : 0;
                            }
                            if (message.tier != null && message.hasOwnProperty("tier"))
                                object.tier = message.tier;
                            if (message.RAM != null && message.hasOwnProperty("RAM"))
                                if (typeof message.RAM === "number")
                                    object.RAM = options.longs === String ? String(message.RAM) : message.RAM;
                                else
                                    object.RAM = options.longs === String ? $util.Long.prototype.toString.call(message.RAM) : options.longs === Number ? new $util.LongBits(message.RAM.low >>> 0, message.RAM.high >>> 0).toNumber() : message.RAM;
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.Disk_Quota != null && message.hasOwnProperty("Disk_Quota"))
                                if (typeof message.Disk_Quota === "number")
                                    object.Disk_Quota = options.longs === String ? String(message.Disk_Quota) : message.Disk_Quota;
                                else
                                    object.Disk_Quota = options.longs === String ? $util.Long.prototype.toString.call(message.Disk_Quota) : options.longs === Number ? new $util.LongBits(message.Disk_Quota.low >>> 0, message.Disk_Quota.high >>> 0).toNumber() : message.Disk_Quota;
                            if (message.region && message.region.length) {
                                object.region = [];
                                for (var j = 0; j < message.region.length; ++j)
                                    object.region[j] = message.region[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Tier to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.Tier
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Tier.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Tier;
                    })();
    
                    v1beta4.SqlUsersService = (function() {
    
                        /**
                         * Constructs a new SqlUsersService service.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlUsersService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function SqlUsersService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (SqlUsersService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = SqlUsersService;
    
                        /**
                         * Creates new SqlUsersService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {SqlUsersService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        SqlUsersService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlUsersService#delete_}.
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @typedef DeleteCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersDeleteRequest} request SqlUsersDeleteRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlUsersService.DeleteCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlUsersService.prototype["delete"] = function delete_(request, callback) {
                            return this.rpcCall(delete_, $root.google.cloud.sql.v1beta4.SqlUsersDeleteRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Delete" });
    
                        /**
                         * Calls Delete.
                         * @function delete
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersDeleteRequest} request SqlUsersDeleteRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlUsersService#insert}.
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @typedef InsertCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersInsertRequest} request SqlUsersInsertRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlUsersService.InsertCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlUsersService.prototype.insert = function insert(request, callback) {
                            return this.rpcCall(insert, $root.google.cloud.sql.v1beta4.SqlUsersInsertRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Insert" });
    
                        /**
                         * Calls Insert.
                         * @function insert
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersInsertRequest} request SqlUsersInsertRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlUsersService#list}.
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @typedef ListCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.UsersListResponse} [response] UsersListResponse
                         */
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersListRequest} request SqlUsersListRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlUsersService.ListCallback} callback Node-style callback called with the error, if any, and UsersListResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlUsersService.prototype.list = function list(request, callback) {
                            return this.rpcCall(list, $root.google.cloud.sql.v1beta4.SqlUsersListRequest, $root.google.cloud.sql.v1beta4.UsersListResponse, request, callback);
                        }, "name", { value: "List" });
    
                        /**
                         * Calls List.
                         * @function list
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersListRequest} request SqlUsersListRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.UsersListResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.sql.v1beta4.SqlUsersService#update}.
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @typedef UpdateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.sql.v1beta4.Operation} [response] Operation
                         */
    
                        /**
                         * Calls Update.
                         * @function update
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersUpdateRequest} request SqlUsersUpdateRequest message or plain object
                         * @param {google.cloud.sql.v1beta4.SqlUsersService.UpdateCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(SqlUsersService.prototype.update = function update(request, callback) {
                            return this.rpcCall(update, $root.google.cloud.sql.v1beta4.SqlUsersUpdateRequest, $root.google.cloud.sql.v1beta4.Operation, request, callback);
                        }, "name", { value: "Update" });
    
                        /**
                         * Calls Update.
                         * @function update
                         * @memberof google.cloud.sql.v1beta4.SqlUsersService
                         * @instance
                         * @param {google.cloud.sql.v1beta4.ISqlUsersUpdateRequest} request SqlUsersUpdateRequest message or plain object
                         * @returns {Promise<google.cloud.sql.v1beta4.Operation>} Promise
                         * @variation 2
                         */
    
                        return SqlUsersService;
                    })();
    
                    v1beta4.SqlUsersDeleteRequest = (function() {
    
                        /**
                         * Properties of a SqlUsersDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlUsersDeleteRequest
                         * @property {string|null} [host] SqlUsersDeleteRequest host
                         * @property {string|null} [instance] SqlUsersDeleteRequest instance
                         * @property {string|null} [name] SqlUsersDeleteRequest name
                         * @property {string|null} [project] SqlUsersDeleteRequest project
                         */
    
                        /**
                         * Constructs a new SqlUsersDeleteRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlUsersDeleteRequest.
                         * @implements ISqlUsersDeleteRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlUsersDeleteRequest=} [properties] Properties to set
                         */
                        function SqlUsersDeleteRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlUsersDeleteRequest host.
                         * @member {string} host
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @instance
                         */
                        SqlUsersDeleteRequest.prototype.host = "";
    
                        /**
                         * SqlUsersDeleteRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @instance
                         */
                        SqlUsersDeleteRequest.prototype.instance = "";
    
                        /**
                         * SqlUsersDeleteRequest name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @instance
                         */
                        SqlUsersDeleteRequest.prototype.name = "";
    
                        /**
                         * SqlUsersDeleteRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @instance
                         */
                        SqlUsersDeleteRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlUsersDeleteRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersDeleteRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlUsersDeleteRequest} SqlUsersDeleteRequest instance
                         */
                        SqlUsersDeleteRequest.create = function create(properties) {
                            return new SqlUsersDeleteRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlUsersDeleteRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersDeleteRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersDeleteRequest} message SqlUsersDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersDeleteRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.host);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instance);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlUsersDeleteRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersDeleteRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersDeleteRequest} message SqlUsersDeleteRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersDeleteRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlUsersDeleteRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlUsersDeleteRequest} SqlUsersDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersDeleteRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlUsersDeleteRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.host = reader.string();
                                    break;
                                case 2:
                                    message.instance = reader.string();
                                    break;
                                case 3:
                                    message.name = reader.string();
                                    break;
                                case 4:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlUsersDeleteRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlUsersDeleteRequest} SqlUsersDeleteRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersDeleteRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlUsersDeleteRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlUsersDeleteRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlUsersDeleteRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlUsersDeleteRequest} SqlUsersDeleteRequest
                         */
                        SqlUsersDeleteRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlUsersDeleteRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlUsersDeleteRequest();
                            if (object.host != null)
                                message.host = String(object.host);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlUsersDeleteRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlUsersDeleteRequest} message SqlUsersDeleteRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlUsersDeleteRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.host = "";
                                object.instance = "";
                                object.name = "";
                                object.project = "";
                            }
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlUsersDeleteRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlUsersDeleteRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlUsersDeleteRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlUsersDeleteRequest;
                    })();
    
                    v1beta4.SqlUsersUpdateRequest = (function() {
    
                        /**
                         * Properties of a SqlUsersUpdateRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlUsersUpdateRequest
                         * @property {string|null} [host] SqlUsersUpdateRequest host
                         * @property {string|null} [instance] SqlUsersUpdateRequest instance
                         * @property {string|null} [name] SqlUsersUpdateRequest name
                         * @property {string|null} [project] SqlUsersUpdateRequest project
                         * @property {google.cloud.sql.v1beta4.IUser|null} [body] SqlUsersUpdateRequest body
                         */
    
                        /**
                         * Constructs a new SqlUsersUpdateRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlUsersUpdateRequest.
                         * @implements ISqlUsersUpdateRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlUsersUpdateRequest=} [properties] Properties to set
                         */
                        function SqlUsersUpdateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlUsersUpdateRequest host.
                         * @member {string} host
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @instance
                         */
                        SqlUsersUpdateRequest.prototype.host = "";
    
                        /**
                         * SqlUsersUpdateRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @instance
                         */
                        SqlUsersUpdateRequest.prototype.instance = "";
    
                        /**
                         * SqlUsersUpdateRequest name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @instance
                         */
                        SqlUsersUpdateRequest.prototype.name = "";
    
                        /**
                         * SqlUsersUpdateRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @instance
                         */
                        SqlUsersUpdateRequest.prototype.project = "";
    
                        /**
                         * SqlUsersUpdateRequest body.
                         * @member {google.cloud.sql.v1beta4.IUser|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @instance
                         */
                        SqlUsersUpdateRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlUsersUpdateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersUpdateRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlUsersUpdateRequest} SqlUsersUpdateRequest instance
                         */
                        SqlUsersUpdateRequest.create = function create(properties) {
                            return new SqlUsersUpdateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlUsersUpdateRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersUpdateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersUpdateRequest} message SqlUsersUpdateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersUpdateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.host);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instance);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.User.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlUsersUpdateRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersUpdateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersUpdateRequest} message SqlUsersUpdateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersUpdateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlUsersUpdateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlUsersUpdateRequest} SqlUsersUpdateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersUpdateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlUsersUpdateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.host = reader.string();
                                    break;
                                case 2:
                                    message.instance = reader.string();
                                    break;
                                case 3:
                                    message.name = reader.string();
                                    break;
                                case 4:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlUsersUpdateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlUsersUpdateRequest} SqlUsersUpdateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersUpdateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlUsersUpdateRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlUsersUpdateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.User.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlUsersUpdateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlUsersUpdateRequest} SqlUsersUpdateRequest
                         */
                        SqlUsersUpdateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlUsersUpdateRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlUsersUpdateRequest();
                            if (object.host != null)
                                message.host = String(object.host);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlUsersUpdateRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.User.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlUsersUpdateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlUsersUpdateRequest} message SqlUsersUpdateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlUsersUpdateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.host = "";
                                object.instance = "";
                                object.name = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.User.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlUsersUpdateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlUsersUpdateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlUsersUpdateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlUsersUpdateRequest;
                    })();
    
                    v1beta4.SqlUsersInsertRequest = (function() {
    
                        /**
                         * Properties of a SqlUsersInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlUsersInsertRequest
                         * @property {string|null} [instance] SqlUsersInsertRequest instance
                         * @property {string|null} [project] SqlUsersInsertRequest project
                         * @property {google.cloud.sql.v1beta4.IUser|null} [body] SqlUsersInsertRequest body
                         */
    
                        /**
                         * Constructs a new SqlUsersInsertRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlUsersInsertRequest.
                         * @implements ISqlUsersInsertRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlUsersInsertRequest=} [properties] Properties to set
                         */
                        function SqlUsersInsertRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlUsersInsertRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @instance
                         */
                        SqlUsersInsertRequest.prototype.instance = "";
    
                        /**
                         * SqlUsersInsertRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @instance
                         */
                        SqlUsersInsertRequest.prototype.project = "";
    
                        /**
                         * SqlUsersInsertRequest body.
                         * @member {google.cloud.sql.v1beta4.IUser|null|undefined} body
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @instance
                         */
                        SqlUsersInsertRequest.prototype.body = null;
    
                        /**
                         * Creates a new SqlUsersInsertRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersInsertRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlUsersInsertRequest} SqlUsersInsertRequest instance
                         */
                        SqlUsersInsertRequest.create = function create(properties) {
                            return new SqlUsersInsertRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlUsersInsertRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersInsertRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersInsertRequest} message SqlUsersInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersInsertRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                                $root.google.cloud.sql.v1beta4.User.encode(message.body, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlUsersInsertRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersInsertRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersInsertRequest} message SqlUsersInsertRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersInsertRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlUsersInsertRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlUsersInsertRequest} SqlUsersInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersInsertRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlUsersInsertRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                case 100:
                                    message.body = $root.google.cloud.sql.v1beta4.User.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlUsersInsertRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlUsersInsertRequest} SqlUsersInsertRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersInsertRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlUsersInsertRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlUsersInsertRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.body != null && message.hasOwnProperty("body")) {
                                var error = $root.google.cloud.sql.v1beta4.User.verify(message.body);
                                if (error)
                                    return "body." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlUsersInsertRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlUsersInsertRequest} SqlUsersInsertRequest
                         */
                        SqlUsersInsertRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlUsersInsertRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlUsersInsertRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            if (object.body != null) {
                                if (typeof object.body !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlUsersInsertRequest.body: object expected");
                                message.body = $root.google.cloud.sql.v1beta4.User.fromObject(object.body);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlUsersInsertRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlUsersInsertRequest} message SqlUsersInsertRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlUsersInsertRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                                object.body = null;
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.body != null && message.hasOwnProperty("body"))
                                object.body = $root.google.cloud.sql.v1beta4.User.toObject(message.body, options);
                            return object;
                        };
    
                        /**
                         * Converts this SqlUsersInsertRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlUsersInsertRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlUsersInsertRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlUsersInsertRequest;
                    })();
    
                    v1beta4.SqlUsersListRequest = (function() {
    
                        /**
                         * Properties of a SqlUsersListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlUsersListRequest
                         * @property {string|null} [instance] SqlUsersListRequest instance
                         * @property {string|null} [project] SqlUsersListRequest project
                         */
    
                        /**
                         * Constructs a new SqlUsersListRequest.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlUsersListRequest.
                         * @implements ISqlUsersListRequest
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlUsersListRequest=} [properties] Properties to set
                         */
                        function SqlUsersListRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlUsersListRequest instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @instance
                         */
                        SqlUsersListRequest.prototype.instance = "";
    
                        /**
                         * SqlUsersListRequest project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @instance
                         */
                        SqlUsersListRequest.prototype.project = "";
    
                        /**
                         * Creates a new SqlUsersListRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersListRequest=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlUsersListRequest} SqlUsersListRequest instance
                         */
                        SqlUsersListRequest.create = function create(properties) {
                            return new SqlUsersListRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SqlUsersListRequest message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersListRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersListRequest} message SqlUsersListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersListRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlUsersListRequest message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlUsersListRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlUsersListRequest} message SqlUsersListRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlUsersListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlUsersListRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlUsersListRequest} SqlUsersListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersListRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlUsersListRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.instance = reader.string();
                                    break;
                                case 2:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlUsersListRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlUsersListRequest} SqlUsersListRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlUsersListRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlUsersListRequest message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlUsersListRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SqlUsersListRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlUsersListRequest} SqlUsersListRequest
                         */
                        SqlUsersListRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlUsersListRequest)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlUsersListRequest();
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlUsersListRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlUsersListRequest} message SqlUsersListRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlUsersListRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instance = "";
                                object.project = "";
                            }
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this SqlUsersListRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlUsersListRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlUsersListRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlUsersListRequest;
                    })();
    
                    v1beta4.User = (function() {
    
                        /**
                         * Properties of a User.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IUser
                         * @property {string|null} [kind] User kind
                         * @property {string|null} [password] User password
                         * @property {string|null} [etag] User etag
                         * @property {string|null} [name] User name
                         * @property {string|null} [host] User host
                         * @property {string|null} [instance] User instance
                         * @property {string|null} [project] User project
                         * @property {google.cloud.sql.v1beta4.User.SqlUserType|null} [type] User type
                         * @property {google.cloud.sql.v1beta4.ISqlServerUserDetails|null} [sqlserverUserDetails] User sqlserverUserDetails
                         */
    
                        /**
                         * Constructs a new User.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a User.
                         * @implements IUser
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IUser=} [properties] Properties to set
                         */
                        function User(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * User kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.kind = "";
    
                        /**
                         * User password.
                         * @member {string} password
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.password = "";
    
                        /**
                         * User etag.
                         * @member {string} etag
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.etag = "";
    
                        /**
                         * User name.
                         * @member {string} name
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.name = "";
    
                        /**
                         * User host.
                         * @member {string} host
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.host = "";
    
                        /**
                         * User instance.
                         * @member {string} instance
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.instance = "";
    
                        /**
                         * User project.
                         * @member {string} project
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.project = "";
    
                        /**
                         * User type.
                         * @member {google.cloud.sql.v1beta4.User.SqlUserType} type
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.type = 0;
    
                        /**
                         * User sqlserverUserDetails.
                         * @member {google.cloud.sql.v1beta4.ISqlServerUserDetails|null|undefined} sqlserverUserDetails
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        User.prototype.sqlserverUserDetails = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * User userDetails.
                         * @member {"sqlserverUserDetails"|undefined} userDetails
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         */
                        Object.defineProperty(User.prototype, "userDetails", {
                            get: $util.oneOfGetter($oneOfFields = ["sqlserverUserDetails"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new User instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {google.cloud.sql.v1beta4.IUser=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.User} User instance
                         */
                        User.create = function create(properties) {
                            return new User(properties);
                        };
    
                        /**
                         * Encodes the specified User message. Does not implicitly {@link google.cloud.sql.v1beta4.User.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {google.cloud.sql.v1beta4.IUser} message User message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        User.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.password != null && Object.hasOwnProperty.call(message, "password"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);
                            if (message.etag != null && Object.hasOwnProperty.call(message, "etag"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.etag);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                            if (message.host != null && Object.hasOwnProperty.call(message, "host"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.host);
                            if (message.instance != null && Object.hasOwnProperty.call(message, "instance"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.instance);
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.project);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 8, wireType 0 =*/64).int32(message.type);
                            if (message.sqlserverUserDetails != null && Object.hasOwnProperty.call(message, "sqlserverUserDetails"))
                                $root.google.cloud.sql.v1beta4.SqlServerUserDetails.encode(message.sqlserverUserDetails, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified User message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.User.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {google.cloud.sql.v1beta4.IUser} message User message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        User.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a User message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.User} User
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        User.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.User();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.password = reader.string();
                                    break;
                                case 3:
                                    message.etag = reader.string();
                                    break;
                                case 4:
                                    message.name = reader.string();
                                    break;
                                case 5:
                                    message.host = reader.string();
                                    break;
                                case 6:
                                    message.instance = reader.string();
                                    break;
                                case 7:
                                    message.project = reader.string();
                                    break;
                                case 8:
                                    message.type = reader.int32();
                                    break;
                                case 9:
                                    message.sqlserverUserDetails = $root.google.cloud.sql.v1beta4.SqlServerUserDetails.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a User message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.User} User
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        User.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a User message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        User.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.password != null && message.hasOwnProperty("password"))
                                if (!$util.isString(message.password))
                                    return "password: string expected";
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                if (!$util.isString(message.etag))
                                    return "etag: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.host != null && message.hasOwnProperty("host"))
                                if (!$util.isString(message.host))
                                    return "host: string expected";
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                if (!$util.isString(message.instance))
                                    return "instance: string expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.sqlserverUserDetails != null && message.hasOwnProperty("sqlserverUserDetails")) {
                                properties.userDetails = 1;
                                {
                                    var error = $root.google.cloud.sql.v1beta4.SqlServerUserDetails.verify(message.sqlserverUserDetails);
                                    if (error)
                                        return "sqlserverUserDetails." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a User message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.User} User
                         */
                        User.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.User)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.User();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.password != null)
                                message.password = String(object.password);
                            if (object.etag != null)
                                message.etag = String(object.etag);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.host != null)
                                message.host = String(object.host);
                            if (object.instance != null)
                                message.instance = String(object.instance);
                            if (object.project != null)
                                message.project = String(object.project);
                            switch (object.type) {
                            case "BUILT_IN":
                            case 0:
                                message.type = 0;
                                break;
                            case "CLOUD_IAM_USER":
                            case 1:
                                message.type = 1;
                                break;
                            case "CLOUD_IAM_SERVICE_ACCOUNT":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.sqlserverUserDetails != null) {
                                if (typeof object.sqlserverUserDetails !== "object")
                                    throw TypeError(".google.cloud.sql.v1beta4.User.sqlserverUserDetails: object expected");
                                message.sqlserverUserDetails = $root.google.cloud.sql.v1beta4.SqlServerUserDetails.fromObject(object.sqlserverUserDetails);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a User message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.User
                         * @static
                         * @param {google.cloud.sql.v1beta4.User} message User
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        User.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.password = "";
                                object.etag = "";
                                object.name = "";
                                object.host = "";
                                object.instance = "";
                                object.project = "";
                                object.type = options.enums === String ? "BUILT_IN" : 0;
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.password != null && message.hasOwnProperty("password"))
                                object.password = message.password;
                            if (message.etag != null && message.hasOwnProperty("etag"))
                                object.etag = message.etag;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.host != null && message.hasOwnProperty("host"))
                                object.host = message.host;
                            if (message.instance != null && message.hasOwnProperty("instance"))
                                object.instance = message.instance;
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.google.cloud.sql.v1beta4.User.SqlUserType[message.type] : message.type;
                            if (message.sqlserverUserDetails != null && message.hasOwnProperty("sqlserverUserDetails")) {
                                object.sqlserverUserDetails = $root.google.cloud.sql.v1beta4.SqlServerUserDetails.toObject(message.sqlserverUserDetails, options);
                                if (options.oneofs)
                                    object.userDetails = "sqlserverUserDetails";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this User to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.User
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        User.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * SqlUserType enum.
                         * @name google.cloud.sql.v1beta4.User.SqlUserType
                         * @enum {number}
                         * @property {number} BUILT_IN=0 BUILT_IN value
                         * @property {number} CLOUD_IAM_USER=1 CLOUD_IAM_USER value
                         * @property {number} CLOUD_IAM_SERVICE_ACCOUNT=2 CLOUD_IAM_SERVICE_ACCOUNT value
                         */
                        User.SqlUserType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "BUILT_IN"] = 0;
                            values[valuesById[1] = "CLOUD_IAM_USER"] = 1;
                            values[valuesById[2] = "CLOUD_IAM_SERVICE_ACCOUNT"] = 2;
                            return values;
                        })();
    
                        return User;
                    })();
    
                    v1beta4.SqlServerUserDetails = (function() {
    
                        /**
                         * Properties of a SqlServerUserDetails.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface ISqlServerUserDetails
                         * @property {boolean|null} [disabled] SqlServerUserDetails disabled
                         * @property {Array.<string>|null} [serverRoles] SqlServerUserDetails serverRoles
                         */
    
                        /**
                         * Constructs a new SqlServerUserDetails.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a SqlServerUserDetails.
                         * @implements ISqlServerUserDetails
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.ISqlServerUserDetails=} [properties] Properties to set
                         */
                        function SqlServerUserDetails(properties) {
                            this.serverRoles = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SqlServerUserDetails disabled.
                         * @member {boolean} disabled
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @instance
                         */
                        SqlServerUserDetails.prototype.disabled = false;
    
                        /**
                         * SqlServerUserDetails serverRoles.
                         * @member {Array.<string>} serverRoles
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @instance
                         */
                        SqlServerUserDetails.prototype.serverRoles = $util.emptyArray;
    
                        /**
                         * Creates a new SqlServerUserDetails instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlServerUserDetails=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.SqlServerUserDetails} SqlServerUserDetails instance
                         */
                        SqlServerUserDetails.create = function create(properties) {
                            return new SqlServerUserDetails(properties);
                        };
    
                        /**
                         * Encodes the specified SqlServerUserDetails message. Does not implicitly {@link google.cloud.sql.v1beta4.SqlServerUserDetails.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlServerUserDetails} message SqlServerUserDetails message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlServerUserDetails.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.disabled != null && Object.hasOwnProperty.call(message, "disabled"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.disabled);
                            if (message.serverRoles != null && message.serverRoles.length)
                                for (var i = 0; i < message.serverRoles.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.serverRoles[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SqlServerUserDetails message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.SqlServerUserDetails.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.ISqlServerUserDetails} message SqlServerUserDetails message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SqlServerUserDetails.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SqlServerUserDetails message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.SqlServerUserDetails} SqlServerUserDetails
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlServerUserDetails.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.SqlServerUserDetails();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.disabled = reader.bool();
                                    break;
                                case 2:
                                    if (!(message.serverRoles && message.serverRoles.length))
                                        message.serverRoles = [];
                                    message.serverRoles.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SqlServerUserDetails message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.SqlServerUserDetails} SqlServerUserDetails
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SqlServerUserDetails.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SqlServerUserDetails message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SqlServerUserDetails.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.disabled != null && message.hasOwnProperty("disabled"))
                                if (typeof message.disabled !== "boolean")
                                    return "disabled: boolean expected";
                            if (message.serverRoles != null && message.hasOwnProperty("serverRoles")) {
                                if (!Array.isArray(message.serverRoles))
                                    return "serverRoles: array expected";
                                for (var i = 0; i < message.serverRoles.length; ++i)
                                    if (!$util.isString(message.serverRoles[i]))
                                        return "serverRoles: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SqlServerUserDetails message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.SqlServerUserDetails} SqlServerUserDetails
                         */
                        SqlServerUserDetails.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.SqlServerUserDetails)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.SqlServerUserDetails();
                            if (object.disabled != null)
                                message.disabled = Boolean(object.disabled);
                            if (object.serverRoles) {
                                if (!Array.isArray(object.serverRoles))
                                    throw TypeError(".google.cloud.sql.v1beta4.SqlServerUserDetails.serverRoles: array expected");
                                message.serverRoles = [];
                                for (var i = 0; i < object.serverRoles.length; ++i)
                                    message.serverRoles[i] = String(object.serverRoles[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SqlServerUserDetails message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @static
                         * @param {google.cloud.sql.v1beta4.SqlServerUserDetails} message SqlServerUserDetails
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SqlServerUserDetails.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.serverRoles = [];
                            if (options.defaults)
                                object.disabled = false;
                            if (message.disabled != null && message.hasOwnProperty("disabled"))
                                object.disabled = message.disabled;
                            if (message.serverRoles && message.serverRoles.length) {
                                object.serverRoles = [];
                                for (var j = 0; j < message.serverRoles.length; ++j)
                                    object.serverRoles[j] = message.serverRoles[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SqlServerUserDetails to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.SqlServerUserDetails
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SqlServerUserDetails.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return SqlServerUserDetails;
                    })();
    
                    v1beta4.UsersListResponse = (function() {
    
                        /**
                         * Properties of a UsersListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @interface IUsersListResponse
                         * @property {string|null} [kind] UsersListResponse kind
                         * @property {Array.<google.cloud.sql.v1beta4.IUser>|null} [items] UsersListResponse items
                         * @property {string|null} [nextPageToken] UsersListResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new UsersListResponse.
                         * @memberof google.cloud.sql.v1beta4
                         * @classdesc Represents a UsersListResponse.
                         * @implements IUsersListResponse
                         * @constructor
                         * @param {google.cloud.sql.v1beta4.IUsersListResponse=} [properties] Properties to set
                         */
                        function UsersListResponse(properties) {
                            this.items = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UsersListResponse kind.
                         * @member {string} kind
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @instance
                         */
                        UsersListResponse.prototype.kind = "";
    
                        /**
                         * UsersListResponse items.
                         * @member {Array.<google.cloud.sql.v1beta4.IUser>} items
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @instance
                         */
                        UsersListResponse.prototype.items = $util.emptyArray;
    
                        /**
                         * UsersListResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @instance
                         */
                        UsersListResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new UsersListResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IUsersListResponse=} [properties] Properties to set
                         * @returns {google.cloud.sql.v1beta4.UsersListResponse} UsersListResponse instance
                         */
                        UsersListResponse.create = function create(properties) {
                            return new UsersListResponse(properties);
                        };
    
                        /**
                         * Encodes the specified UsersListResponse message. Does not implicitly {@link google.cloud.sql.v1beta4.UsersListResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IUsersListResponse} message UsersListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UsersListResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.items != null && message.items.length)
                                for (var i = 0; i < message.items.length; ++i)
                                    $root.google.cloud.sql.v1beta4.User.encode(message.items[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UsersListResponse message, length delimited. Does not implicitly {@link google.cloud.sql.v1beta4.UsersListResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.IUsersListResponse} message UsersListResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UsersListResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a UsersListResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.sql.v1beta4.UsersListResponse} UsersListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UsersListResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.sql.v1beta4.UsersListResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    if (!(message.items && message.items.length))
                                        message.items = [];
                                    message.items.push($root.google.cloud.sql.v1beta4.User.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a UsersListResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.sql.v1beta4.UsersListResponse} UsersListResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UsersListResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a UsersListResponse message.
                         * @function verify
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UsersListResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.items != null && message.hasOwnProperty("items")) {
                                if (!Array.isArray(message.items))
                                    return "items: array expected";
                                for (var i = 0; i < message.items.length; ++i) {
                                    var error = $root.google.cloud.sql.v1beta4.User.verify(message.items[i]);
                                    if (error)
                                        return "items." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a UsersListResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.sql.v1beta4.UsersListResponse} UsersListResponse
                         */
                        UsersListResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.sql.v1beta4.UsersListResponse)
                                return object;
                            var message = new $root.google.cloud.sql.v1beta4.UsersListResponse();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.items) {
                                if (!Array.isArray(object.items))
                                    throw TypeError(".google.cloud.sql.v1beta4.UsersListResponse.items: array expected");
                                message.items = [];
                                for (var i = 0; i < object.items.length; ++i) {
                                    if (typeof object.items[i] !== "object")
                                        throw TypeError(".google.cloud.sql.v1beta4.UsersListResponse.items: object expected");
                                    message.items[i] = $root.google.cloud.sql.v1beta4.User.fromObject(object.items[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a UsersListResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @static
                         * @param {google.cloud.sql.v1beta4.UsersListResponse} message UsersListResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UsersListResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.items = [];
                            if (options.defaults) {
                                object.kind = "";
                                object.nextPageToken = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.items && message.items.length) {
                                object.items = [];
                                for (var j = 0; j < message.items.length; ++j)
                                    object.items[j] = $root.google.cloud.sql.v1beta4.User.toObject(message.items[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this UsersListResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.sql.v1beta4.UsersListResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UsersListResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UsersListResponse;
                    })();
    
                    return v1beta4;
                })();
    
                return sql;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.rules && message.rules.length))
                                message.rules = [];
                            message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.fullyDecodeReservedExpansion = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.selector = reader.string();
                            break;
                        case 2:
                            message.get = reader.string();
                            break;
                        case 3:
                            message.put = reader.string();
                            break;
                        case 4:
                            message.post = reader.string();
                            break;
                        case 5:
                            message["delete"] = reader.string();
                            break;
                        case 6:
                            message.patch = reader.string();
                            break;
                        case 8:
                            message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                            break;
                        case 7:
                            message.body = reader.string();
                            break;
                        case 12:
                            message.responseBody = reader.string();
                            break;
                        case 11:
                            if (!(message.additionalBindings && message.additionalBindings.length))
                                message.additionalBindings = [];
                            message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.kind = reader.string();
                            break;
                        case 2:
                            message.path = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                return values;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.publicDependency && message.publicDependency.length))
                                message.publicDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.publicDependency.push(reader.int32());
                            } else
                                message.publicDependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weakDependency && message.weakDependency.length))
                                message.weakDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weakDependency.push(reader.int32());
                            } else
                                message.weakDependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.messageType && message.messageType.length))
                                message.messageType = [];
                            message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nestedType && message.nestedType.length))
                                message.nestedType = [];
                            message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extensionRange && message.extensionRange.length))
                                message.extensionRange = [];
                            message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneofDecl && message.oneofDecl.length))
                                message.oneofDecl = [];
                            message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            case 3:
                                message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.typeName = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.defaultValue = reader.string();
                            break;
                        case 9:
                            message.oneofIndex = reader.int32();
                            break;
                        case 10:
                            message.jsonName = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        case 17:
                            message.proto3Optional = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        case 4:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.inputType = reader.string();
                            break;
                        case 3:
                            message.outputType = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.clientStreaming = reader.bool();
                            break;
                        case 6:
                            message.serverStreaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.javaPackage = reader.string();
                            break;
                        case 8:
                            message.javaOuterClassname = reader.string();
                            break;
                        case 10:
                            message.javaMultipleFiles = reader.bool();
                            break;
                        case 20:
                            message.javaGenerateEqualsAndHash = reader.bool();
                            break;
                        case 27:
                            message.javaStringCheckUtf8 = reader.bool();
                            break;
                        case 9:
                            message.optimizeFor = reader.int32();
                            break;
                        case 11:
                            message.goPackage = reader.string();
                            break;
                        case 16:
                            message.ccGenericServices = reader.bool();
                            break;
                        case 17:
                            message.javaGenericServices = reader.bool();
                            break;
                        case 18:
                            message.pyGenericServices = reader.bool();
                            break;
                        case 42:
                            message.phpGenericServices = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.ccEnableArenas = reader.bool();
                            break;
                        case 36:
                            message.objcClassPrefix = reader.string();
                            break;
                        case 37:
                            message.csharpNamespace = reader.string();
                            break;
                        case 39:
                            message.swiftPrefix = reader.string();
                            break;
                        case 40:
                            message.phpClassPrefix = reader.string();
                            break;
                        case 41:
                            message.phpNamespace = reader.string();
                            break;
                        case 44:
                            message.phpMetadataNamespace = reader.string();
                            break;
                        case 45:
                            message.rubyPackage = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.messageSetWireFormat = reader.bool();
                            break;
                        case 2:
                            message.noStandardDescriptorAccessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.mapEntry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1052:
                            if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                message[".google.api.fieldBehavior"] = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                            } else
                                message[".google.api.fieldBehavior"].push(reader.int32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allowAlias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1049:
                            message[".google.api.defaultHost"] = reader.string();
                            break;
                        case 1050:
                            message[".google.api.oauthScopes"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 34:
                            message.idempotencyLevel = reader.int32();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 72295728:
                            message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                            break;
                        case 1051:
                            if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                message[".google.api.methodSignature"] = [];
                            message[".google.api.methodSignature"].push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifierValue = reader.string();
                            break;
                        case 4:
                            message.positiveIntValue = reader.uint64();
                            break;
                        case 5:
                            message.negativeIntValue = reader.int64();
                            break;
                        case 6:
                            message.doubleValue = reader.double();
                            break;
                        case 7:
                            message.stringValue = reader.bytes();
                            break;
                        case 8:
                            message.aggregateValue = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.namePart = reader.string();
                                break;
                            case 2:
                                message.isExtension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leadingComments = reader.string();
                                break;
                            case 4:
                                message.trailingComments = reader.string();
                                break;
                            case 6:
                                if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                    message.leadingDetachedComments = [];
                                message.leadingDetachedComments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.sourceFile = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.seconds = reader.int64();
                            break;
                        case 2:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Timestamp;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.double();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.float();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.int64();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.uint64();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.uint32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.value = reader.bytes();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return BytesValue;
            })();
    
            return protobuf;
        })();
    
        return google;
    })();

    return $root;
});
